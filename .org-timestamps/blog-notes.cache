(setq org-publish-cache (make-hash-table :test 'equal :weakness nil :size 100))
(puthash ":project:" "blog-notes" org-publish-cache)
(puthash ":cache-file:" "/blog/public/.org-timestamps/blog-notes.cache" org-publish-cache)
(puthash "/blog/org/xreact/typeclasses-in-typescript.org" '(:date (22963 12032) :title "Type Classes in TypeScript" :crossrefs (((other "Apply") . 157436970) ((headline "Apply") . 157436970) ((other "Cartesian") . 62189525) ((headline "Cartesian") . 62189525) ((other "Reflect" "Metadata") . 243263823) ((headline "Reflect" "Metadata") . 243263823) ((other "多态") . 174370926) ((headline "多态") . 174370926) ((other "Higher" "Kind" "Type") . 107539489) ((headline "Higher" "Kind" "Type") . 107539489) ((other "Functor") . 64073597) ((headline "Functor") . 64073597)) :index nil) org-publish-cache)
(puthash "/blog/org/write-yourself-a-scheme-in-haskell/index.org" '(:date (22491 13824) :title "用Haskell48小时写你个Scheme" :crossrefs (((other "待续...") . 264891674) ((headline "待续...") . 264891674) ((other "求值，第一部分") . 118847897) ((headline "求值，第一部分") . 118847897) ((other "实现" "show" "类型类") . 41506959) ((headline "实现" "show" "类型类") . 41506959) ((other "to" "String") . 185037146) ((headline "to" "String") . 185037146) ((other "最后") . 145255497) ((headline "最后") . 145255497) ((other "parseNumber") . 121047514) ((headline "parseNumber") . 121047514) ((other "parseAtom") . 216307139) ((headline "parseAtom") . 216307139) ((other "ParseString") . 84398317) ((headline "ParseString") . 84398317) ((other "返回值") . 202026445) ((headline "返回值") . 202026445) ((other "空白符") . 185440506) ((headline "空白符") . 185440506) ((other "pattern" "matching") . 35439719) ((headline "pattern" "matching") . 35439719) ((other "Either") . 246291913) ((headline "Either") . 246291913) ((other "Parse") . 7576675) ((headline "Parse") . 7576675) ((other "定义" "parser") . 199380727) ((headline "定义" "parser") . 199380727) ((other "写个简单的parser") . 63743614) ((headline "写个简单的parser") . 63743614) ((other "语法分析") . 198613985) ((headline "语法分析") . 198613985) ((other "练习") . 70777822) ((headline "练习") . 70777822) ((other "操作符") . 25413905) ((headline "操作符") . 25413905) ((other "Hello" "World") . 128205539) ((headline "Hello" "World") . 128205539) ((other "跑起来") . 125859714) ((headline "跑起来") . 125859714) ((other "前言") . 69909437) ((headline "前言") . 69909437)) :index nil) org-publish-cache)
(puthash "/blog/org/javascript/clojure-essence-in-javascript-macro-2.org" '(:date (21895 20480) :title "自制语言初试 - 入lang" :crossrefs (((other "在哪里才能买到呢") . 110565540) ((headline "在哪里才能买到呢") . 110565540) ((other "Infix" "macro") . 42645563) ((headline "Infix" "macro") . 42645563) ((other "Existential" "?") . 109231089) ((headline "Existential" "?") . 109231089) ((other "looprecur") . 220477314) ((headline "looprecur") . 220477314) ((other "destruture" "array") . 129548548) ((headline "destruture" "array") . 129548548) ((other "block" "scope" "binding") . 81237866) ((headline "block" "scope" "binding") . 81237866) ((other "Let") . 97100071) ((headline "Let") . 97100071) ((other "lambda") . 110323686) ((headline "lambda") . 110323686) ((other "Ru-lang," "The" "First" "Attampt") . 192399994) ((headline "Ru-lang," "The" "First" "Attampt") . 192399994) ((other "那macro呢") . 213785101) ((headline "那macro呢") . 213785101) ((other "ClojureScript的数据结构移植") . 1767817) ((headline "ClojureScript的数据结构移植") . 1767817) ((other "ClojureScript怎么就不好了") . 86614014) ((headline "ClojureScript怎么就不好了") . 86614014) ((other "Rationale(为毛要整一门语言)") . 221371874) ((headline "Rationale(为毛要整一门语言)") . 221371874)) :index nil) org-publish-cache)
(puthash "/blog/org/clojure/clojure-the-mini-book.org" '(:date (21742 25088) :title "Clojure The Mini Book" :crossrefs (((other "多态") . 174846395) ((headline "多态") . 174846395) ((other "Concurrency") . 199246086) ((headline "Concurrency") . 199246086) ((other "Collection") . 68394454) ((headline "Collection") . 68394454) ((other "Functional" "Programming") . 154484525) ((headline "Functional" "Programming") . 154484525) ((other "Macro") . 104776275) ((headline "Macro") . 104776275) ((other "Reader") . 186819865) ((headline "Reader") . 186819865) ((other "code?" "data?") . 255630123) ((headline "code?" "data?") . 255630123) ((other "Special" "Forms") . 181838250) ((headline "Special" "Forms") . 181838250) ((other "loop" "recur") . 50609377) ((headline "loop" "recur") . 50609377) ((other "do") . 136575213) ((headline "do") . 136575213) ((other "let") . 243444668) ((headline "let") . 243444668) ((other "def") . 16639328) ((headline "def") . 16639328) ((other "来试试不一样的Clojure数据结构") . 18298255) ((headline "来试试不一样的Clojure数据结构") . 18298255) ((other "反引号" "=`=") . 243834677) ((headline "反引号" "=`=") . 243834677) ((other "lisp专用的" "'" "引号") . 263308742) ((headline "lisp专用的" "'" "引号") . 263308742) ((other "Map") . 122241112) ((headline "Map") . 122241112) ((other "Keyword") . 139753344) ((headline "Keyword") . 139753344) ((other "Set") . 186544116) ((headline "Set") . 186544116) ((other "List") . 173724548) ((headline "List") . 173724548) ((other "Vector") . 234329547) ((headline "Vector") . 234329547) ((other "String") . 215279106) ((headline "String") . 215279106) ((other "Number") . 243353836) ((headline "Number") . 243353836) ((other "搭建环境") . 3538612) ((headline "搭建环境") . 3538612) ((other "多线程是好东西如果用的对") . 46652213) ((headline "多线程是好东西如果用的对") . 46652213) ((other "多态是好东西") . 114063596) ((headline "多态是好东西") . 114063596) ((other "函数式是好东西") . 180460903) ((headline "函数式是好东西") . 180460903) ((other "lisp" "是好东西") . 177995398) ((headline "lisp" "是好东西") . 177995398) ((other "为什么要学习全是括号的语言") . 194082892) ((headline "为什么要学习全是括号的语言") . 194082892) ((other "我每天用括号当早饭") . 5539835) ((headline "我每天用括号当早饭") . 5539835)) :index nil) org-publish-cache)
(puthash "/blog/org/xreact/fun-with-fantasy.org" '(:date (22963 12032) :title "xReact Fantasy" :crossrefs (((other "小结") . 90731910) ((headline "小结") . 90731910) ((other "Asynchronous") . 162049843) ((headline "Asynchronous") . 162049843) ((other "多个参数") . 90395043) ((headline "多个参数") . 90395043) ((other "Counter" "例子") . 209628733) ((headline "Counter" "例子") . 209628733) ((other "render") . 38744033) ((headline "render") . 38744033) ((other "Component") . 76049947) ((headline "Component") . 76049947) ((other "View") . 82444239) ((headline "View") . 82444239) ((other "Transform") . 171801552) ((headline "Transform") . 171801552)) :index nil) org-publish-cache)
(puthash "/blog/org/javascript/understand-prototype.org" '(:date (21909 53376) :title "理解JavaScript的原型链和继承" :crossrefs (((other "Footnotes") . 184502949) ((headline "Footnotes") . 184502949) ((other "Bonus" "继承") . 248536916) ((headline "Bonus" "继承") . 248536916) ((other "也没什么卵用得" "contructor") . 171971682) ((headline "也没什么卵用得" "contructor") . 171971682) ((other "=__proto__=" "才是原型链") . 262706993) ((headline "=__proto__=" "才是原型链") . 262706993) ((other "prototype属性是原型链吗？") . 226177414) ((headline "prototype属性是原型链吗？") . 226177414) ((other "instanceof" "引发的问题") . 117590414) ((headline "instanceof" "引发的问题") . 117590414)) :index nil) org-publish-cache)
(puthash "/blog/org/javascript/ru-lang-second-attampt.org" '(:date (21967 53888) :title "入语言第二试: readtable 与 core.async" :crossrefs (((other "core.async") . 56091613) ((headline "core.async") . 56091613) ((other "Readtable") . 41538153) ((headline "Readtable") . 41538153)) :index nil) org-publish-cache)
(puthash "/blog/org/javascript/rethinking-react-dataflow.org" '(:date (22228 56192) :title "Rethinking React Dataflow" :crossrefs (((other "Model") . 135209178) ((headline "Model") . 135209178) ((other "继续" "flatMap" "结果到流上") . 36740392) ((headline "继续" "flatMap" "结果到流上") . 36740392) ((other "发送" "API" "请求") . 158031155) ((headline "发送" "API" "请求") . 158031155) ((other "Debounce") . 23734122) ((headline "Debounce") . 23734122) ((other "一个简单的" "Pure" "Component") . 239353500) ((headline "一个简单的" "Pure" "Component") . 239353500) ((other "🌰") . 224602063) ((headline "🌰") . 224602063) ((other "Monadic") . 189655837) ((headline "Monadic") . 189655837) ((other "Reactive") . 42175604) ((headline "Reactive") . 42175604)) :index nil) org-publish-cache)
(puthash "/blog/org/javascript/react-transdux-the-clojure-approach-of-flux.org" '(:date (22097 1408) :title "看我们3天 hackday 都干了些什么" :crossrefs (((other "Footnotes") . 33720796) ((headline "Footnotes") . 33720796) ((other "2." "定义你的" "component" "能干什么？你的状态能怎么变？") . 191148735) ((headline "2." "定义你的" "component" "能干什么？你的状态能怎么变？") . 191148735) ((other "1." "把你的" "component" "包到" "Transdux" "里") . 53620584) ((headline "1." "把你的" "component" "包到" "Transdux" "里") . 53620584) ((other "Recap") . 202628807) ((headline "Recap") . 202628807) ((other "Day" "2" "-" "Show" "Case") . 153003573) ((headline "Day" "2" "-" "Show" "Case") . 153003573) ((other "bindActions") . 105638633) ((headline "bindActions") . 105638633) ((other "分辨不同的" "ReactClass") . 244853582) ((headline "分辨不同的" "ReactClass") . 244853582) ((other "传递" "inputChan" "和" "action" "的" "publication") . 369852) ((headline "传递" "inputChan" "和" "action" "的" "publication") . 369852) ((other "提取框架") . 236151078) ((headline "提取框架") . 236151078) ((other "初版，只实现一个功能") . 149621099) ((headline "初版，只实现一个功能") . 149621099) ((other "Day" "1" "-" "Hack" "Hack" "Hack...") . 66187776) ((headline "Day" "1" "-" "Hack" "Hack" "Hack...") . 66187776) ((other "Day" "0" "-" "Inception") . 201847997) ((headline "Day" "0" "-" "Inception") . 201847997) ((other "Atom") . 148592596) ((headline "Atom") . 148592596) ((other "Transducers") . 74554924) ((headline "Transducers") . 74554924) ((other "PubSub") . 237325826) ((headline "PubSub") . 237325826) ((other "Channels") . 212685558) ((headline "Channels") . 212685558) ((other "Clojure" "Avengers" "来相助") . 29852671) ((headline "Clojure" "Avengers" "来相助") . 29852671) ((other "redux") . 73744218) ((headline "redux") . 73744218) ((other "flux") . 181831634) ((headline "flux") . 181831634) ((other "Rationale") . 147733918) ((headline "Rationale") . 147733918)) :index nil) org-publish-cache)
(puthash "/blog/org/javascript/reactive-programming.org" '(:date (22025 54400) :title "Monadic Reactive Programming in JavaScript" :crossrefs (((other "Monad") . 34993940) ((headline "Monad") . 34993940) ((other "Applicative") . 235838086) ((headline "Applicative") . 235838086) ((other "Functor") . 139529699) ((headline "Functor") . 139529699) ((other "Stream") . 193165675) ((headline "Stream") . 193165675)) :index nil) org-publish-cache)
(puthash "/blog/org/javascript/clojure-essence-in-javascript-macro.org" '(:date (21884 50176) :title "JavaScript玩转Clojure大法之 - Macro (1)" :crossrefs (((other "Footnotes") . 233463533) ((headline "Footnotes") . 233463533) ((other "Recap") . 250146956) ((headline "Recap") . 250146956) ((other "case" "macro") . 213653329) ((headline "case" "macro") . 213653329) ((other "Rule" "macro") . 263367079) ((headline "Rule" "macro") . 263367079) ((other "Sweet.js") . 171248281) ((headline "Sweet.js") . 171248281) ((other "Macro") . 127708958) ((headline "Macro") . 127708958)) :index nil) org-publish-cache)
(puthash "/blog/org/javascript/clojure-core.async-essence-in-native-javascript.org" '(:date (21822 52608) :title "Clojure 风格的 JavaScript 并发编程" :crossrefs (((other "Footnotes") . 78029115) ((headline "Footnotes") . 78029115) ((other "JavaScript" "版本" "的" "CSP") . 32407223) ((headline "JavaScript" "版本" "的" "CSP") . 32407223) ((other "put" ">!") . 119173297) ((headline "put" ">!") . 119173297) ((other "take" "<!") . 159579305) ((headline "take" "<!") . 159579305) ((other "timeout") . 90051365) ((headline "timeout") . 90051365) ((other "Goroutines" "in" "JavaScript") . 116315609) ((headline "Goroutines" "in" "JavaScript") . 116315609) ((other "Generator") . 106592400) ((headline "Generator") . 106592400) ((other "CSP" "in" "JavaScript[fn:2]") . 158955067) ((headline "CSP" "in" "JavaScript[fn:2]") . 158955067) ((other "CSP," "Channel," "Goroutines") . 116282404) ((headline "CSP," "Channel," "Goroutines") . 116282404) ((other "Event" "loop") . 225234869) ((headline "Event" "loop") . 225234869) ((other "CSP") . 234775173) ((headline "CSP") . 234775173) ((other "异步与多线程") . 207911072) ((headline "异步与多线程") . 207911072) ((other "什么是并发") . 188846318) ((headline "什么是并发") . 188846318) ((other "Communicating" "Sequential" "Processes") . 54322480) ((headline "Communicating" "Sequential" "Processes") . 54322480) ((other "TL;DR" "SLIDES") . 3493590) ((headline "TL;DR" "SLIDES") . 3493590)) :index nil) org-publish-cache)
(puthash "/blog/org/javascript/react-cookbook-mini.org" '(:date (22078 36992) :title "A Compact React Cookbook" :crossrefs (((other "How" "to" "Profile" "Component" "Perfomance" "/" "如何提升效率") . 130715742) ((headline "How" "to" "Profile" "Component" "Perfomance" "/" "如何提升效率") . 130715742) ((other "[[https://facebook.github.io/react/docs/advanced-performance.html#shouldcomponentupdate-in-action][shouldComponentUpdate]]") . 240992615) ((headline "[[https://facebook.github.io/react/docs/advanced-performance.html#shouldcomponentupdate-in-action][shouldComponentUpdate]]") . 240992615) ((other "PureRenderMixin") . 32899072) ((headline "PureRenderMixin") . 32899072) ((other "[[https://facebook.github.io/react/docs/perf.html][react" "profile]]") . 84040186) ((headline "[[https://facebook.github.io/react/docs/perf.html][react" "profile]]") . 84040186) ((other "What's" "these" "Warnings" "/" "这些黄黄的是神马") . 136572604) ((headline "What's" "these" "Warnings" "/" "这些黄黄的是神马") . 136572604) ((other "When" "should" "I" "use" "\"key\"" "/" "什么时候该用" "key") . 87145212) ((headline "When" "should" "I" "use" "\"key\"" "/" "什么时候该用" "key") . 87145212) ((other "How" "to" "communicate" "between" "two" "components" "that" "don't" "have" "a" "parent-child" "relationship[fn:3]" "/" "不是父子关系的" "component" "怎么交互") . 95822636) ((headline "How" "to" "communicate" "between" "two" "components" "that" "don't" "have" "a" "parent-child" "relationship[fn:3]" "/" "不是父子关系的" "component" "怎么交互") . 95822636) ((other "应用级别" "state") . 212696333) ((headline "应用级别" "state") . 212696333) ((other "router") . 113894673) ((headline "router") . 113894673) ((other "flux") . 10149468) ((headline "flux") . 10149468) ((other "store") . 52847495) ((headline "store") . 52847495) ((other "dispatcher") . 130044671) ((headline "dispatcher") . 130044671) ((other "event") . 103149600) ((headline "event") . 103149600) ((other "What" "about" "Router" "/" "router" "怎么办") . 150147202) ((headline "What" "about" "Router" "/" "router" "怎么办") . 150147202) ((other "[[https://github.com/rackt/react-router][react" "router]]") . 210842363) ((headline "[[https://github.com/rackt/react-router][react" "router]]") . 210842363) ((other "[[https://github.com/flatiron/director][direactor]]") . 105632197) ((headline "[[https://github.com/flatiron/director][direactor]]") . 105632197) ((other "server" "side") . 245195427) ((headline "server" "side") . 245195427) ((other "client" "side") . 44000723) ((headline "client" "side") . 44000723) ((other "What" "about" "Data" "Fetching" "/" "只有" "V" "的话，数据" "M" "呢") . 105077482) ((headline "What" "about" "Data" "Fetching" "/" "只有" "V" "的话，数据" "M" "呢") . 105077482) ((other "[[https://github.com/netflix/falcor][falcor]]") . 102061273) ((headline "[[https://github.com/netflix/falcor][falcor]]") . 102061273) ((other "[[https://facebook.github.io/relay/][relay/graphql]]") . 192440062) ((headline "[[https://facebook.github.io/relay/][relay/graphql]]") . 192440062) ((other "just" "[[https://github.com/cujojs/rest][rest]]") . 221565230) ((headline "just" "[[https://github.com/cujojs/rest][rest]]") . 221565230) ((other "How" "should" "I" "thinking" "in" "react" "way" "/" "如何以" "React" "的方式解决问题") . 209066463) ((headline "How" "should" "I" "thinking" "in" "react" "way" "/" "如何以" "React" "的方式解决问题") . 209066463) ((other "Modular" "and" "Components") . 146687998) ((headline "Modular" "and" "Components") . 146687998) ((other "webpack") . 71161868) ((headline "webpack") . 71161868) ((other "browserify") . 140825321) ((headline "browserify") . 140825321) ((other "How" "to" "do" "Unit" "test" "React" "project" "/" "如何单元测试") . 72791671) ((headline "How" "to" "do" "Unit" "test" "React" "project" "/" "如何单元测试") . 72791671) ((other "mocha") . 112208315) ((headline "mocha") . 112208315) ((other "jasmine") . 79652439) ((headline "jasmine") . 79652439) ((other "[[http://facebook.github.io/jest/][Jest]]") . 120181394) ((headline "[[http://facebook.github.io/jest/][Jest]]") . 120181394) ((other "Why" "Immutable" "/" "为毛要不可变") . 43192403) ((headline "Why" "Immutable" "/" "为毛要不可变") . 43192403) ((other "让你的数据结构" "immutable" "的工具们") . 77315764) ((headline "让你的数据结构" "immutable" "的工具们") . 77315764) ((other "[[https://facebook.github.io/immutable-js/][Immutable.js]]") . 31980363) ((headline "[[https://facebook.github.io/immutable-js/][Immutable.js]]") . 31980363) ((other "[[https://github.com/swannodette/mori][mori]]") . 48305853) ((headline "[[https://github.com/swannodette/mori][mori]]") . 48305853) ((other "[[http://facebook.github.io/react/docs/update.html][Immutablility" "helper]]") . 13189075) ((headline "[[http://facebook.github.io/react/docs/update.html][Immutablility" "helper]]") . 13189075) ((other "Class") . 85991594) ((headline "Class") . 85991594) ((other "状态") . 93153701) ((headline "状态") . 93153701) ((other "What's" "Virtual" "DOM," "why" "should" "we" "care" "/" "为毛要用" "Vitual" "Dom") . 51647339) ((headline "What's" "Virtual" "DOM," "why" "should" "we" "care" "/" "为毛要用" "Vitual" "Dom") . 51647339) ((other "Virtual" "DOM" "（Immutable）") . 217246206) ((headline "Virtual" "DOM" "（Immutable）") . 217246206) ((other "以前是如何操作" "DOM" "的" "（Mutable）") . 64192054) ((headline "以前是如何操作" "DOM" "的" "（Mutable）") . 64192054) ((other "Why" "not" "2" "way" "binding/为毛不用双向绑定") . 87586447) ((headline "Why" "not" "2" "way" "binding/为毛不用双向绑定") . 87586447) ((other "单向有什么好") . 215187665) ((headline "单向有什么好") . 215187665) ((other "双向有什么不好[fn:1]") . 209860771) ((headline "双向有什么不好[fn:1]") . 209860771) ((other "单向绑定") . 240745544) ((headline "单向绑定") . 240745544) ((other "双向绑定") . 46806401) ((headline "双向绑定") . 46806401)) :index nil) org-publish-cache)
(puthash "/blog/org/javascript/functional-javascript.org" '(:date (21842 37888) :title "Functional JavaScript Mini Book" :crossrefs (((other "Monad") . 83311143) ((headline "Monad") . 83311143) ((other "Monad" "在" "JavaScript" "中的应用") . 41300492) ((headline "Monad" "在" "JavaScript" "中的应用") . 41300492) ((other "到底有什么用呢," "Monad") . 41612860) ((headline "到底有什么用呢," "Monad") . 41612860) ((other "走钢索") . 268135467) ((headline "走钢索") . 268135467) ((other "现在来试试用" "Either") . 7666763) ((headline "现在来试试用" "Either") . 7666763) ((other "一般解法") . 24284725) ((headline "一般解法") . 24284725) ((other "Either") . 148817879) ((headline "Either") . 148817879) ((other "Functor") . 61072744) ((headline "Functor") . 61072744) ((other "Functor" "in" "JavaScript") . 111900160) ((headline "Functor" "in" "JavaScript") . 111900160) ((other "举个栗子🌰") . 41259546) ((headline "举个栗子🌰") . 41259546) ((other "Functor") . 170355520) ((headline "Functor") . 170355520) ((other "Transducers") . 227983333) ((headline "Transducers") . 227983333) ((other "完整例子") . 33266999) ((headline "完整例子") . 33266999) ((other "Is" "it" "Curry?") . 162910955) ((headline "Is" "it" "Curry?") . 162910955) ((other "Transducer") . 56798220) ((headline "Transducer") . 56798220) ((other "Reducer") . 201196855) ((headline "Reducer") . 201196855) ((other "[[https://clojure.org/reducers][Reducer]]") . 88360854) ((headline "[[https://clojure.org/reducers][Reducer]]") . 88360854) ((other "Reducible") . 26092151) ((headline "Reducible") . 26092151) ((other "transform") . 119389367) ((headline "transform") . 119389367) ((other "高阶函数(Higher-order" "function)") . 92921261) ((headline "高阶函数(Higher-order" "function)") . 92921261) ((other "函数组合" "function" "composition") . 94864144) ((headline "函数组合" "function" "composition") . 94864144) ((other "pipe") . 32430469) ((headline "pipe") . 32430469) ((other "Compose") . 100794826) ((headline "Compose") . 100794826) ((other "柯里化" "currying") . 208643535) ((headline "柯里化" "currying") . 208643535) ((other "自动柯里化") . 85036057) ((headline "自动柯里化") . 85036057) ((other "柯里化函数接口") . 187384581) ((headline "柯里化函数接口") . 187384581) ((other "我们来看一个问题") . 165054581) ((headline "我们来看一个问题") . 165054581) ((other "所有数字乘以2," "再重构试试看") . 262281861) ((headline "所有数字乘以2," "再重构试试看") . 262281861) ((other "现在我要其中所有数字加1," "然后在连接") . 179198620) ((headline "现在我要其中所有数字加1," "然后在连接") . 179198620) ((other "写一个函数," "可以连接字符数组," "如" "f(['1','2'])" "=>" "'12'") . 82799659) ((headline "写一个函数," "可以连接字符数组," "如" "f(['1','2'])" "=>" "'12'") . 82799659) ((other "Higher-order" "function") . 263758217) ((headline "Higher-order" "function") . 263758217) ((other "函数作为返回值") . 165476962) ((headline "函数作为返回值") . 165476962) ((other "函数作为参数") . 204912431) ((headline "函数作为参数") . 204912431) ((other "Lambda") . 175268623) ((headline "Lambda") . 175268623) ((other "JavaScript的匿名函数(anonymous" "function)") . 157415880) ((headline "JavaScript的匿名函数(anonymous" "function)") . 157415880) ((other "使用匿名函数") . 63382274) ((headline "使用匿名函数") . 63382274) ((other "创建一个匿名函数") . 24328928) ((headline "创建一个匿名函数") . 24328928) ((other "箭头函数(arrow" "function)") . 42563423) ((headline "箭头函数(arrow" "function)") . 42563423) ((other "Lexical" "=this=") . 3153518) ((headline "Lexical" "=this=") . 3153518) ((other "为什么要用箭头函数") . 267080346) ((headline "为什么要用箭头函数") . 267080346) ((other "声明一个箭头函数") . 13379247) ((headline "声明一个箭头函数") . 13379247) ((other "Preface") . 108376861) ((headline "Preface") . 108376861)) :index (("柯里化" "/blog/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("currying" "/blog/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("reducer" "/blog/org/javascript/functional-javascript.org" (name . "Reducer")) ("xform" "/blog/org/javascript/functional-javascript.org" (name . "transform")) ("reducible" "/blog/org/javascript/functional-javascript.org" (name . "Reducible")) ("transducer" "/blog/org/javascript/functional-javascript.org" (name . "Transducer")))) org-publish-cache)
(puthash "/blog/org/javascript/clojure-essence-in-javascript-trampoline.org" '(:date (21864 64896) :title "JavaScript玩转Clojure大法之 - Trampoline" :crossrefs (((other "Trampoline") . 262710912) ((headline "Trampoline") . 262710912) ((other "DFA") . 1793719) ((headline "DFA") . 1793719) ((other "尾递归(tail" "recursion)") . 46331303) ((headline "尾递归(tail" "recursion)") . 46331303) ((other "相互递归(mutual" "recursion)") . 36726382) ((headline "相互递归(mutual" "recursion)") . 36726382)) :index nil) org-publish-cache)
(puthash "/blog/org/javascript/clojure-essence-in-javascript-transducer.org" '(:date (21846 34944) :title "JavaScript玩转Clojure大法之Transducer" :crossrefs (((other "Footnotes") . 101243104) ((headline "Footnotes") . 101243104) ((other "完整例子") . 216745661) ((headline "完整例子") . 216745661) ((other "Is" "it" "Curry?") . 35104372) ((headline "Is" "it" "Curry?") . 35104372) ((other "Transducer") . 82894411) ((headline "Transducer") . 82894411) ((other "Reducible") . 205232379) ((headline "Reducible") . 205232379) ((other "[[https://clojure.org/reducers][Reducer]]") . 207000445) ((headline "[[https://clojure.org/reducers][Reducer]]") . 207000445) ((other "transform") . 167268569) ((headline "transform") . 167268569) ((other "Reducer") . 209197842) ((headline "Reducer") . 209197842)) :index (("reducer" "/blog/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducer")) ("xform" "/blog/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "transform")) ("reducible" "/blog/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducible")) ("transducer" "/blog/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Transducer")))) org-publish-cache)
(puthash "/blog/org/javascript/essential-ecmascript6.org" '(:date (21771 25344) :title "Essential EcmaScript 6" :crossrefs (((other "Generator") . 232029178) ((headline "Generator") . 232029178) ((other "Promises") . 58514998) ((headline "Promises") . 58514998) ((other "Class") . 63469904) ((headline "Class") . 63469904) ((other "Template" "Strings") . 196388609) ((headline "Template" "Strings") . 196388609) ((other "Tail" "Calling") . 149054835) ((headline "Tail" "Calling") . 149054835) ((other "Destructuring") . 78863435) ((headline "Destructuring") . 78863435) ((other "Proxy") . 22077120) ((headline "Proxy") . 22077120) ((other "Let") . 153433866) ((headline "Let") . 153433866) ((other "Arrow" "Function") . 152917237) ((headline "Arrow" "Function") . 152917237)) :index (("Arrow Function" "/blog/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("lambda" "/blog/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("Destructuring" "/blog/org/javascript/essential-ecmascript6.org" (name . "Destructuring")) ("tail recursive" "/blog/org/javascript/essential-ecmascript6.org" (name . "Tail Calling")))) org-publish-cache)
(puthash "/blog/org/scala/3-layer-cake.org" '(:date (23704 6656) :title "3 Layer Scala Cake" :crossrefs (((other "Footnotes") . 22870880) ((headline "Footnotes") . 22870880) ((other) . 101032830) ((headline) . 101032830) ((other "Free" "+" "MTL" "+" "ReaderT") . 27475107) ((headline "Free" "+" "MTL" "+" "ReaderT") . 27475107) ((other "ReaderT" "+" "MTL") . 248473157) ((headline "ReaderT" "+" "MTL") . 248473157) ((other "Recap") . 71936956) ((headline "Recap") . 71936956) ((other "Layer" "1:" "ReaderT") . 63525135) ((headline "Layer" "1:" "ReaderT") . 63525135) ((other "Layer" "2:" "MTL" "+" "Interpreter") . 76107772) ((headline "Layer" "2:" "MTL" "+" "Interpreter") . 76107772) ((other "Layer" "3:" "Business" "(Free)") . 9646484) ((headline "Layer" "3:" "Business" "(Free)") . 9646484) ((other "ReaderT" "+" "MTL" "+" "Free") . 203912607) ((headline "ReaderT" "+" "MTL" "+" "Free") . 203912607) ((other "Free" "Monad") . 66239411) ((headline "Free" "Monad") . 66239411) ((other "MTL") . 23374918) ((headline "MTL") . 23374918) ((other "The" "Needs" "of" "State") . 52077961) ((headline "The" "Needs" "of" "State") . 52077961) ((other "3" "Layer" "Cake") . 250501895) ((headline "3" "Layer" "Cake") . 250501895) ((other "Refactor") . 37436853) ((headline "Refactor") . 37436853) ((other "*Tagless" "Final*" "is" "nothing" "but" "a" "fancy" "name" "of" "*ReaderT*") . 254818194) ((headline "*Tagless" "Final*" "is" "nothing" "but" "a" "fancy" "name" "of" "*ReaderT*") . 254818194) ((other "ReaderT") . 17118443) ((headline "ReaderT") . 17118443) ((other "IO") . 267858449) ((headline "IO") . 267858449) ((other "Imperative") . 253056933) ((headline "Imperative") . 253056933) ((other "Retro") . 107010292) ((headline "Retro") . 107010292) ((other "Take" "2:" "ReaderT" "Pattern") . 6276101) ((headline "Take" "2:" "ReaderT" "Pattern") . 6276101) ((other "Take" "1:" "IO") . 88542868) ((headline "Take" "1:" "IO") . 88542868) ((other "The" "Program") . 89377094) ((headline "The" "Program") . 89377094)) :index (("Scala!3 Layer Scala Cake" "/blog/org/scala/3-layer-cake.org" nil) ("FP!3 Layer Scala Cake" "/blog/org/scala/3-layer-cake.org" nil) ("Free!3 Layer Scala Cake" "/blog/org/scala/3-layer-cake.org" nil) ("Monad!3 Layer Scala Cake" "/blog/org/scala/3-layer-cake.org" nil))) org-publish-cache)
(puthash "/blog/org/scala/finch-vs-http4s.org" '(:date (23566 65024) :title "Finch vs Http4s, which is FPer" :crossrefs (((other "Http4s") . 223246187) ((headline "Http4s") . 223246187) ((other "joy" "of" "FP:" "🍎" "🍎" "🍎" "🍎" "🍎") . 218182678) ((headline "joy" "of" "FP:" "🍎" "🍎" "🍎" "🍎" "🍎") . 218182678) ((other "extensible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 105457842) ((headline "extensible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 105457842) ((other "composible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 232393290) ((headline "composible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 232393290) ((other "Finch") . 268064293) ((headline "Finch") . 268064293) ((other "joy" "of" "FP:" "🍎" "🍎" "🍎") . 63015616) ((headline "joy" "of" "FP:" "🍎" "🍎" "🍎") . 63015616) ((other "extensible:" "🍎" "🍎") . 168139533) ((headline "extensible:" "🍎" "🍎") . 168139533) ((other "composible:" "🍎" "🍎" "🍎" "🍎") . 188051749) ((headline "composible:" "🍎" "🍎" "🍎" "🍎") . 188051749)) :index (("Scala!Finch vs Http4s, which is FPer" "/blog/org/scala/finch-vs-http4s.org" nil) ("Finch!Finch vs Http4s, which is FPer" "/blog/org/scala/finch-vs-http4s.org" nil) ("Http4s!Finch vs Http4s, which is FPer" "/blog/org/scala/finch-vs-http4s.org" nil))) org-publish-cache)
(puthash "/blog/org/jichao.ouyang.org" '(:date (7745 23680) :title "About Me" :crossrefs (((other "Talks") . 140747817) ((headline "Talks") . 140747817) ((other "[[http://git.io/why-curry-helps][Why" "curry" "helps]]") . 18592366) ((headline "[[http://git.io/why-curry-helps][Why" "curry" "helps]]") . 18592366) ((other "[[http://git.io/js-csp][JavaScript并发" "与" "core.async]]") . 185243946) ((headline "[[http://git.io/js-csp][JavaScript并发" "与" "core.async]]") . 185243946) ((other "[[https://www.icloud.com/keynote/AwBUCAESEAdZO1i1w_FOM7bcc32s_-saKSNGkgh098jFV4ORqDf8BTBZ7eVCJjSBMtdPflzOJzzwvNC4GzME3bkEMCUCAQEEIM4xb9-JzzQWp20MKTFuTvCNxWcKsltpmOLy_I9InjAJ#learn%252C_write%252C_publish][Learn," "Write," "Publish]]") . 118350711) ((headline "[[https://www.icloud.com/keynote/AwBUCAESEAdZO1i1w_FOM7bcc32s_-saKSNGkgh098jFV4ORqDf8BTBZ7eVCJjSBMtdPflzOJzzwvNC4GzME3bkEMCUCAQEEIM4xb9-JzzQWp20MKTFuTvCNxWcKsltpmOLy_I9InjAJ#learn%252C_write%252C_publish][Learn," "Write," "Publish]]") . 118350711) ((other "[[https://gistdeck.github.com/jcouyang/03121932d18eba44088e][理解原型链和继承]]") . 190043286) ((headline "[[https://gistdeck.github.com/jcouyang/03121932d18eba44088e][理解原型链和继承]]") . 190043286) ((other "[[https://blog.oyanglul.us/javascript/practical-monads.html][Practical" "Monads]]") . 116750493) ((headline "[[https://blog.oyanglul.us/javascript/practical-monads.html][Practical" "Monads]]") . 116750493) ((other "[[https://blog.oyanglul.us/slides/functional-ruby.html][Functional" "Ruby]]") . 95109158) ((headline "[[https://blog.oyanglul.us/slides/functional-ruby.html][Functional" "Ruby]]") . 95109158) ((other "[[https://blog.oyanglul.us/slides/essential-ecmascript-2017.html][Essential" "EcmaScript" "2017]]") . 12857673) ((headline "[[https://blog.oyanglul.us/slides/essential-ecmascript-2017.html][Essential" "EcmaScript" "2017]]") . 12857673) ((other "[[https://gistdeck.github.io/jcouyang/4ee7d7e141bc5c4b42fae19dbf86d39d#1][Typed" "Spreadsheet" "Programming" "in" "Scala.js]]") . 224838733) ((headline "[[https://gistdeck.github.io/jcouyang/4ee7d7e141bc5c4b42fae19dbf86d39d#1][Typed" "Spreadsheet" "Programming" "in" "Scala.js]]") . 224838733) ((other "[[https://gistdeck.github.io/jcouyang/8f04fbfe74f7be8bc3557736a1f6f531][Pure" "FP" "Micro" "Service" "with" "Free" "Monad" "and" "Finch]]") . 138972308) ((headline "[[https://gistdeck.github.io/jcouyang/8f04fbfe74f7be8bc3557736a1f6f531][Pure" "FP" "Micro" "Service" "with" "Free" "Monad" "and" "Finch]]") . 138972308) ((other "[[https://paper.dropbox.com/doc/Functional-Programming-Design-Pattern-IbUWMHezWm7DVxLFWQcBi][Functional" "Programming" "\"Design" "Pattern\"]]") . 147039668) ((headline "[[https://paper.dropbox.com/doc/Functional-Programming-Design-Pattern-IbUWMHezWm7DVxLFWQcBi][Functional" "Programming" "\"Design" "Pattern\"]]") . 147039668) ((other "Projects") . 67544376) ((headline "Projects") . 67544376) ((other "Books") . 168592384) ((headline "Books") . 168592384)) :index (("Jichao Ouyang!About Me" "/blog/org/jichao.ouyang.org" nil))) org-publish-cache)
(puthash "/blog/org/scala/implicit-conversions.org" '(:date (22360 45440) :title "Implicit, to be or not to be" :crossrefs (((other "Footnotes") . 128743502) ((headline "Footnotes") . 128743502) ((other "or" "Not" "To" "Be") . 122567869) ((headline "or" "Not" "To" "Be") . 122567869) ((other "To" "Be") . 28529262) ((headline "To" "Be") . 28529262) ((other "类型类" "Type" "Class") . 82579473) ((headline "类型类" "Type" "Class") . 82579473) ((other "隐式转换参数") . 38874895) ((headline "隐式转换参数") . 38874895) ((other "语法糖") . 251687591) ((headline "语法糖") . 251687591) ((other "隐式转换接受者") . 244687605) ((headline "隐式转换接受者") . 244687605) ((other "隐式转换是什么鬼") . 141885311) ((headline "隐式转换是什么鬼") . 141885311)) :index (("Scala!Implicit, to be or not to be" "/blog/org/scala/implicit-conversions.org" nil))) org-publish-cache)
(puthash "/blog/org/scala/functional-caching.org" '(:date (23892 41088) :title "Functional Scala Caching" :crossrefs (((other "[[https://typelevel.org/cats/img/cats-badge-tiny.png]]" "[[https://github.com/ben-manes/caffeine][Caffeine]]") . 50496386) ((headline "[[https://typelevel.org/cats/img/cats-badge-tiny.png]]" "[[https://github.com/ben-manes/caffeine][Caffeine]]") . 50496386) ((other "Extensible") . 147044062) ((headline "Extensible") . 147044062) ((other "ReaderT" "Pattern") . 202772760) ((headline "ReaderT" "Pattern") . 202772760) ((other "Works" "with" "Tagless" "Final") . 67840684) ((headline "Works" "with" "Tagless" "Final") . 67840684) ((other "idiomatic" "syntax" "for" "Caffeine" "builder") . 21488833) ((headline "idiomatic" "syntax" "for" "Caffeine" "builder") . 21488833) ((other "works" "with" "Cats" "IO") . 258635552) ((headline "works" "with" "Cats" "IO") . 258635552) ((other "Quick" "Started" "in" "Scala" "3^{=new=}") . 20108290) ((headline "Quick" "Started" "in" "Scala" "3^{=new=}") . 20108290)) :index (("Scala!Functional Scala Caching" "/blog/org/scala/functional-caching.org" nil) ("FP!Functional Scala Caching" "/blog/org/scala/functional-caching.org" nil))) org-publish-cache)
(puthash "/blog/org/github/using-dotfiles-and-stow-to-manage-your-dotfiles.org" '(:date (22065 24960) :title "使用 dotfiles 和 stow 管理你的 dotfiles" :crossrefs (((other "㊙" "Sensitive" "dotfiles") . 222075591) ((headline "㊙" "Sensitive" "dotfiles") . 222075591) ((other "submodule" "vs" "subtree") . 37063715) ((headline "submodule" "vs" "subtree") . 37063715) ((other "push" "to" "github") . 154488233) ((headline "push" "to" "github") . 154488233) ((other "stow" "目录") . 217488152) ((headline "stow" "目录") . 217488152) ((other "stow" "文件") . 175897991) ((headline "stow" "文件") . 175897991) ((other "使用" "stow" "管理" "symlink") . 102775021) ((headline "使用" "stow" "管理" "symlink") . 102775021) ((other "TLDR;") . 245640398) ((headline "TLDR;") . 245640398)) :index nil) org-publish-cache)
(puthash "/blog/org/shutting-down-gulugulu.org" '(:date (23520 55680) :title "关闭 gulugulu 弹幕" :crossrefs nil :index nil) org-publish-cache)
(puthash "/blog/org/scala/into-the-readerT-verse.org" '(:date (23719 60416) :title "Into ReaderT-verse" :crossrefs (((other "Footnotes") . 126037568) ((headline "Footnotes") . 126037568) ((other "ReaderT-verse") . 252886676) ((headline "ReaderT-verse") . 252886676) ((other "Layer" "3") . 241345706) ((headline "Layer" "3") . 241345706) ((other "Layer" "2") . 102079521) ((headline "Layer" "2") . 102079521) ((other "A" "better" "version" "with" "ReaderT") . 236910669) ((headline "A" "better" "version" "with" "ReaderT") . 236910669) ((other "The" "Problem") . 47723002) ((headline "The" "Problem") . 47723002) ((other "The" "Program") . 205431904) ((headline "The" "Program") . 205431904)) :index (("Scala!3 Into ReaderT-verse" "/blog/org/scala/into-the-readerT-verse.org" nil) ("FP!3 Into ReaderT-verse" "/blog/org/scala/into-the-readerT-verse.org" nil) ("ReaderT!3 Into ReaderT-verse" "/blog/org/scala/into-the-readerT-verse.org" nil) ("Monad!3 Into ReaderT-verse" "/blog/org/scala/into-the-readerT-verse.org" nil))) org-publish-cache)
(puthash "/blog/org/functional-ruby.org" '(:date (22406 54784) :title "Functional Ruby" :crossrefs (((other "Footnotes") . 213266071) ((headline "Footnotes") . 213266071) ((other "pmap") . 167978516) ((headline "pmap") . 167978516) ((other "actor" "model" "多线程") . 24102619) ((headline "actor" "model" "多线程") . 24102619) ((other "用" "Either" "做控制流") . 15760362) ((headline "用" "Either" "做控制流") . 15760362) ((other "联合类型" "Left" "|" "Right") . 30708695) ((headline "联合类型" "Left" "|" "Right") . 30708695) ((other "一个好看的" "inspect") . 16273709) ((headline "一个好看的" "inspect") . 16273709) ((other "Monad") . 121876120) ((headline "Monad") . 121876120) ((other "Functor") . 221007154) ((headline "Functor") . 221007154) ((other "一个简单的" "Either" "Monad[fn:2]") . 83486185) ((headline "一个简单的" "Either" "Monad[fn:2]") . 83486185) ((other "一个简单的例子") . 99802319) ((headline "一个简单的例子") . 99802319) ((other "其实只是个简单的语法糖") . 208529938) ((headline "其实只是个简单的语法糖") . 208529938) ((other "/正则/") . 12110192) ((headline "/正则/") . 12110192) ((other "lambda" "（aka" "guard）") . 62819058) ((headline "lambda" "（aka" "guard）") . 62819058) ((other "表达式") . 95316735) ((headline "表达式") . 95316735) ((other "类型") . 245269458) ((headline "类型") . 245269458) ((other "值") . 57733001) ((headline "值") . 57733001) ((other "case" "when") . 175689192) ((headline "case" "when") . 175689192) ((other "destructure") . 33227017) ((headline "destructure") . 33227017) ((other "pattern" "matching") . 214367430) ((headline "pattern" "matching") . 214367430) ((other "闭包") . 185444383) ((headline "闭包") . 185444383) ((other "参数检查") . 28199092) ((headline "参数检查") . 28199092) ((other "return") . 179791489) ((headline "return") . 179791489) ((other "为什么" "lambda" "是" "proc") . 31511289) ((headline "为什么" "lambda" "是" "proc") . 31511289) ((other "神奇的" "=&=") . 241631055) ((headline "神奇的" "=&=") . 241631055) ((other "lambda") . 107668573) ((headline "lambda") . 107668573)) :index nil) org-publish-cache)
(puthash "/blog/org/how-functional-programming-and-flink-will-save-your-ass-from-big-data.org" '(:date (23498 28672) :title "使用 Flink 解救多线程 Scala 应用" :crossrefs (((other "Footnotes") . 131152978) ((headline "Footnotes") . 131152978) ((other "Flink" "Cluster" "on" "K8s") . 55490701) ((headline "Flink" "Cluster" "on" "K8s") . 55490701) ((other "Flink" "Cluster" "in" "Docker") . 96256964) ((headline "Flink" "Cluster" "in" "Docker") . 96256964) ((other "Flink" "Scala") . 174375076) ((headline "Flink" "Scala") . 174375076) ((other "Scala") . 200909233) ((headline "Scala") . 200909233) ((other "问题") . 19754855) ((headline "问题") . 19754855)) :index nil) org-publish-cache)
(puthash "/blog/org/patterns-and-practices/applied-evolutionary-design/chapter-1.org" '(:date (24078 33792) :title "Applied Evolutionary Design" :crossrefs (((other "Footnotes") . 80130541) ((headline "Footnotes") . 80130541) ((other "How" "to" "Evolve" "to" "Microservices" "Properly") . 175694812) ((headline "How" "to" "Evolve" "to" "Microservices" "Properly") . 175694812) ((other "Drowsy" "Cafe" "2.0") . 158097352) ((headline "Drowsy" "Cafe" "2.0") . 158097352) ((other "Drowsy" "Cafe") . 266834026) ((headline "Drowsy" "Cafe") . 266834026)) :index (("Applied Evolutionary Design!Chapter 1" "/blog/org/patterns-and-practices/applied-evolutionary-design/chapter-1.org" nil) ("Patterns and Practices!Applied Evolutionary Design - Chapter 1" "/blog/org/patterns-and-practices/applied-evolutionary-design/chapter-1.org" nil))) org-publish-cache)
(puthash "/blog/org/2019-year-in-review.org" '(:date (24075 57600) :title "2019 Year in Review" :crossrefs (((other "Owlet") . 38025492) ((headline "Owlet") . 38025492) ((other "[[https://blog.oyanglul.us/scala/functional-caching][Functional" "Scala" "Cachinng]]") . 233126405) ((headline "[[https://blog.oyanglul.us/scala/functional-caching][Functional" "Scala" "Cachinng]]") . 233126405) ((other "[[./purescript/type-driven-development-with-purescript/index.org][Type" "Driven" "Development" "with" "PureScript]]") . 53285509) ((headline "[[./purescript/type-driven-development-with-purescript/index.org][Type" "Driven" "Development" "with" "PureScript]]") . 53285509) ((other "[[https://github.com/milessabin/shapeless/blob/8626f15ed92b922a6381a9e11c3a34b76b55e337/core/src/main/scala/shapeless/ops/coproduct.scala#L107][IndexOf" "at" "Type" "Level]]") . 169672474) ((headline "[[https://github.com/milessabin/shapeless/blob/8626f15ed92b922a6381a9e11c3a34b76b55e337/core/src/main/scala/shapeless/ops/coproduct.scala#L107][IndexOf" "at" "Type" "Level]]") . 169672474) ((other "[[https://github.com/jcouyang/zhuyu][Zhuyu]]") . 5034810) ((headline "[[https://github.com/jcouyang/zhuyu][Zhuyu]]") . 5034810) ((other "[[https://typelevel.org/cats/api/cats/data/Kleisli.html][Kleisli{F{_}," "-A," "B}]]") . 170019970) ((headline "[[https://typelevel.org/cats/api/cats/data/Kleisli.html][Kleisli{F{_}," "-A," "B}]]") . 170019970) ((other "[[https://gumroad.com/l/grokking-monad][Grokking" "Monad]]") . 23243231) ((headline "[[https://gumroad.com/l/grokking-monad][Grokking" "Monad]]") . 23243231) ((other "[[./scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 13996431) ((headline "[[./scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 13996431)) :index nil) org-publish-cache)
(puthash "/blog/org/2016-year-in-review.org" '(:date (22621 47744) :title "2016 Year in Review" :crossrefs (((other "[[https://github.com/jcouyang/blog/][Docker" "化" "Orgpress]]") . 265691105) ((headline "[[https://github.com/jcouyang/blog/][Docker" "化" "Orgpress]]") . 265691105) ((other "[[https://github.com/jcouyang/react-most][react-most" "-⚛->]]") . 247006008) ((headline "[[https://github.com/jcouyang/react-most][react-most" "-⚛->]]") . 247006008) ((other "[[https://github.com/cujojs/most][most]]") . 5138011) ((headline "[[https://github.com/cujojs/most][most]]") . 5138011) ((other "[[https://github.com/reactive-react/transdux][transdux]]") . 5330361) ((headline "[[https://github.com/reactive-react/transdux][transdux]]") . 5330361) ((other "[[https://github.com/jcouyang/union-type][union-type]]") . 206893759) ((headline "[[https://github.com/jcouyang/union-type][union-type]]") . 206893759) ((other "[[https://github.com/jcouyang/dotfiles/][dotfiles]]") . 232970297) ((headline "[[https://github.com/jcouyang/dotfiles/][dotfiles]]") . 232970297) ((other "[[https://github.com/jcouyang/gh-omnibar][gh-omnibar]]") . 124516469) ((headline "[[https://github.com/jcouyang/gh-omnibar][gh-omnibar]]") . 124516469) ((other "[[https://github.com/jcouyang/gh-widget][gh-widget]]") . 175052890) ((headline "[[https://github.com/jcouyang/gh-widget][gh-widget]]") . 175052890) ((other "[[https://www.rubyconfchina.org/][RubyConf" "China]]") . 10269220) ((headline "[[https://www.rubyconfchina.org/][RubyConf" "China]]") . 10269220) ((other "[[https://github.com/jcouyang/cats.rb][cat.rb]]") . 93183729) ((headline "[[https://github.com/jcouyang/cats.rb][cat.rb]]") . 93183729) ((other "[[https://github.com/jcouyang/cat.js][cat.js]]") . 250524863) ((headline "[[https://github.com/jcouyang/cat.js][cat.js]]") . 250524863) ((other "duckling") . 238414698) ((headline "duckling") . 238414698) ((other "同构的" "JS" "方法") . 148674694) ((headline "同构的" "JS" "方法") . 148674694) ((other "core.async") . 208247836) ((headline "core.async") . 208247836) ((other "[[https://github.com/jcouyang/conjs][conjs]]") . 123413684) ((headline "[[https://github.com/jcouyang/conjs][conjs]]") . 123413684) ((other "[[https://book.douban.com/subject/26883736/][前端函数式攻城指南]]") . 219051510) ((headline "[[https://book.douban.com/subject/26883736/][前端函数式攻城指南]]") . 219051510) ((other "[[https://github.com/jcouyang/functional-javascript][Functional" "JavaScript" "mini" "Book]]") . 238444678) ((headline "[[https://github.com/jcouyang/functional-javascript][Functional" "JavaScript" "mini" "Book]]") . 238444678)) :index nil) org-publish-cache)
(puthash "/blog/org/grokking-monad/scala/en/part2.org" '(:date (23549 55936) :title "Grokking Monad in Scala" :crossrefs (((other "Choice") . 30330747) ((headline "Choice") . 30330747) ((other "Applied") . 17468903) ((headline "Applied") . 17468903) ((other "Middleware[F]") . 252757920) ((headline "Middleware[F]") . 252757920) ((other "HttpRoutes[F]") . 72602691) ((headline "HttpRoutes[F]") . 72602691) ((other "Rationale") . 182991626) ((headline "Rationale") . 182991626) ((other "Monad") . 181116126) ((headline "Monad") . 181116126) ((other "Traverse") . 86009062) ((headline "Traverse") . 86009062) ((other "Validated") . 224592227) ((headline "Validated") . 224592227) ((other "Semigroupal" "a.k.a" "Cartesian") . 140030485) ((headline "Semigroupal" "a.k.a" "Cartesian") . 140030485) ((other "Monad" "Transformer") . 156835759) ((headline "Monad" "Transformer") . 156835759) ((other "State" "Monad") . 201699997) ((headline "State" "Monad") . 201699997) ((other "Reader" "Monad") . 248352373) ((headline "Reader" "Monad") . 248352373) ((other "Writer" "Monad") . 17953005) ((headline "Writer" "Monad") . 17953005) ((other "Reader" "Writer" "Monad") . 202184250) ((headline "Reader" "Writer" "Monad") . 202184250) ((other "Identity" "Monad") . 39081090) ((headline "Identity" "Monad") . 39081090) ((other "Contravariant" "Functor") . 31233432) ((headline "Contravariant" "Functor") . 31233432) ((other "Functor") . 83562736) ((headline "Functor") . 83562736) ((other "Type" "enrichment") . 203108227) ((headline "Type" "enrichment") . 203108227) ((other "Type" "classes") . 37278258) ((headline "Type" "classes") . 37278258) ((other "Variance") . 12490778) ((headline "Variance") . 12490778) ((other "Recursive" "Data" "Type") . 58629571) ((headline "Recursive" "Data" "Type") . 58629571) ((other "Algebraic" "Data" "Type") . 54626591) ((headline "Algebraic" "Data" "Type") . 54626591) ((other "Type" "classes") . 55804138) ((headline "Type" "classes") . 55804138)) :index nil) org-publish-cache)
(puthash "/blog/org/grokking-monad/scala/en/choice.org" '(:date (23862 19968) :title "Applied Category Theory in Scala" :crossrefs (((other "Choice") . 173249907) ((headline "Choice") . 173249907) ((other "Applied") . 210202341) ((headline "Applied") . 210202341) ((other "Middleware[F]") . 33887145) ((headline "Middleware[F]") . 33887145) ((other "HttpRoutes[F]") . 173373599) ((headline "HttpRoutes[F]") . 173373599) ((other "Rationale") . 263216791) ((headline "Rationale") . 263216791)) :index nil) org-publish-cache)
(puthash "/blog/org/grokking-monad/part2.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Footnotes") . 44973983) ((headline "Footnotes") . 44973983) ((other "Summary") . 66387164) ((headline "Summary") . 66387164) ((other "Cont" "接下来有") . 48534758) ((headline "Cont" "接下来有") . 48534758) ((other "回到" "Validation") . 259839202) ((headline "回到" "Validation") . 259839202) ((other "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 201723378) ((headline "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 201723378) ((other "Validation" "检查检查") . 113987048) ((headline "Validation" "检查检查") . 113987048) ((other "State" "变化会有") . 190617938) ((headline "State" "变化会有") . 190617938) ((other "Writer" "光出进没有") . 157330692) ((headline "Writer" "光出进没有") . 157330692) ((other "do" "notation") . 131133007) ((headline "do" "notation") . 131133007) ((other "Reader" "差一点就有") . 233167461) ((headline "Reader" "差一点就有") . 233167461) ((other "Either" "Monad") . 184640002) ((headline "Either" "Monad") . 184640002) ((other "Product" "&" "Coproduct") . 252101828) ((headline "Product" "&" "Coproduct") . 252101828) ((other "Either" "要么有要么有") . 60238559) ((headline "Either" "要么有要么有") . 60238559) ((other "Maybe" "可能会有") . 110759632) ((headline "Maybe" "可能会有") . 110759632) ((other "Identity" "本身就有[fn:5]") . 17477359) ((headline "Identity" "本身就有[fn:5]") . 17477359) ((other "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 33221833) ((headline "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 33221833)) :index (("Catergory Theory!范畴论完全装逼手册 卷二" "/blog/org/grokking-monad/part2.org" nil))) org-publish-cache)
(puthash "/blog/org/grokking-monad/part1.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Footnotes") . 160784517) ((headline "Footnotes") . 160784517) ((other "Summary") . 201806382) ((headline "Summary") . 201806382) ((other "/Kleisli" "Catergory/") . 120846567) ((headline "/Kleisli" "Catergory/") . 120846567) ((other "insert" "diagram") . 127078117) ((headline "insert" "diagram") . 127078117) ((other "insert" "diagram") . 186547031) ((headline "insert" "diagram") . 186547031) ((other "Kan" "extensions" "看展") . 16478060) ((headline "Kan" "extensions" "看展") . 16478060) ((other "Rank" "N" "Type") . 182349551) ((headline "Rank" "N" "Type") . 182349551) ((other "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 27743449) ((headline "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 27743449) ((other "结合律") . 254433328) ((headline "结合律") . 254433328) ((other "三角等式") . 212325793) ((headline "三角等式") . 212325793) ((other "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 22540671) ((headline "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 22540671) ((other "/Adjunction" "Functor/" "伴随函子") . 2860920) ((headline "/Adjunction" "Functor/" "伴随函子") . 2860920) ((other "String" "Diagram") . 89938982) ((headline "String" "Diagram") . 89938982) ((target "NT") . 185897176) ((other "自然变换" "/" "Natural" "Transformations" "<<NT>>") . 87053076) ((headline "自然变换" "/" "Natural" "Transformations" "<<NT>>") . 87053076) ((other "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 115395648) ((headline "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 115395648) ((other "函子" "/" "Functor") . 245554596) ((headline "函子" "/" "Functor") . 245554596) ((other "/Duel/") . 86746706) ((headline "/Duel/") . 86746706) ((other "/Hask/") . 31208070) ((headline "/Hask/") . 31208070) ((other "/Category/") . 200868008) ((headline "/Category/") . 200868008) ((other "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 228210417) ((headline "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 228210417)) :index (("Catergory Theory!范畴论完全装逼手册 卷一" "/blog/org/grokking-monad/part1.org" nil) ("Catergory" "/blog/org/grokking-monad/part1.org" (name . "/Category/")) ("范畴" "/blog/org/grokking-monad/part1.org" (name . "/Category/")) ("Kind" "/blog/org/grokking-monad/part1.org" (name . "/Category/")) ("Hask" "/blog/org/grokking-monad/part1.org" (name . "/Hask/")) ("Duel" "/blog/org/grokking-monad/part1.org" (name . "/Duel/")) ("Functor" "/blog/org/grokking-monad/part1.org" (name . "函子 / Functor")) ("函子" "/blog/org/grokking-monad/part1.org" (name . "函子 / Functor")) ("endofunctor" "/blog/org/grokking-monad/part1.org" (name . "函子 / Functor")) ("自函子" "/blog/org/grokking-monad/part1.org" (name . "函子 / Functor")) ("Natural Transformations" "/blog/org/grokking-monad/part1.org" (name . "自然变换 / Natural Transformations <<NT>>")) ("自然变换" "/blog/org/grokking-monad/part1.org" (name . "自然变换 / Natural Transformations <<NT>>")) ("Adjunction Functor" "/blog/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("isomorphic" "/blog/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("同构" "/blog/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("米田引理" "/blog/org/grokking-monad/part1.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Yoneda Lemma" "/blog/org/grokking-monad/part1.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Arbitrary-rank polymorphism" "/blog/org/grokking-monad/part1.org" (name . "Rank N Type")) ("Rank N Type" "/blog/org/grokking-monad/part1.org" (name . "Rank N Type")) ("Kleisi Catergory" "/blog/org/grokking-monad/part1.org" (name . "/Kleisli Catergory/")))) org-publish-cache)
(puthash "/blog/org/grokking-monad/scala/en/part3.org" '(:date (23537 64768) :title "Grokking Monad in Scala - Free" :crossrefs (((other "Footnotes") . 156911040) ((headline "Footnotes") . 156911040) ((other "What" "really" "happened" "here") . 244458294) ((headline "What" "really" "happened" "here") . 244458294) ((other "Interpret" "your" "program") . 30094316) ((headline "Interpret" "your" "program") . 30094316) ((other "Free" "your" "program") . 246490892) ((headline "Free" "your" "program") . 246490892) ((other "Effects") . 59940757) ((headline "Effects") . 59940757) ((other "CoYoneda" "Lemma" "(Trick)") . 40861637) ((headline "CoYoneda" "Lemma" "(Trick)") . 40861637) ((other "Free" "Structure") . 124292621) ((headline "Free" "Structure") . 124292621) ((other "Free") . 133155498) ((headline "Free") . 133155498) ((other "Footnotes") . 225358097) ((headline "Footnotes") . 225358097) ((other "Natural" "Transformation") . 195944155) ((headline "Natural" "Transformation") . 195944155) ((other "Rank" "N" "Type") . 131607529) ((headline "Rank" "N" "Type") . 131607529) ((other "Kind" "Projector") . 77715442) ((headline "Kind" "Projector") . 77715442) ((other "FunctionK") . 22169268) ((headline "FunctionK") . 22169268) ((other "Kind") . 33646986) ((headline "Kind") . 33646986)) :index nil) org-publish-cache)
(puthash "/blog/org/purescript/type-driven-development-with-purescript/index.org" '(:date (23912 26368) :title "Type-Driven Development with PureScript" :crossrefs (((other "Exercise") . 36908434) ((headline "Exercise") . 36908434) ((other "User" "should" "be" "able" "to" "add" "new" "todo" "into" "list") . 36820617) ((headline "User" "should" "be" "able" "to" "add" "new" "todo" "into" "list") . 36820617) ((other "Define") . 114853243) ((headline "Define") . 114853243) ((other "Type") . 58459735) ((headline "Type") . 58459735) ((other "Type") . 121496628) ((headline "Type") . 121496628) ((other "Define") . 106769437) ((headline "Define") . 106769437) ((other "Define") . 252985291) ((headline "Define") . 252985291) ((other "Type") . 17955961) ((headline "Type") . 17955961) ((other "Final" "Version") . 94932432) ((headline "Final" "Version") . 94932432) ((other "Refine") . 19079548) ((headline "Refine") . 19079548) ((other "Define") . 202543328) ((headline "Define") . 202543328) ((other "Type") . 84519766) ((headline "Type") . 84519766) ((other "Define") . 199025868) ((headline "Define") . 199025868) ((other "Type") . 244758992) ((headline "Type") . 244758992) ((other "Define") . 27641105) ((headline "Define") . 27641105) ((other "Refine") . 256637683) ((headline "Refine") . 256637683) ((other "Refine") . 18230309) ((headline "Refine") . 18230309) ((other "Define") . 226637992) ((headline "Define") . 226637992) ((other "Type") . 259006947) ((headline "Type") . 259006947) ((other "Refine") . 151142246) ((headline "Refine") . 151142246) ((other "But" "Why?") . 192019608) ((headline "But" "Why?") . 192019608) ((other "Define") . 62544116) ((headline "Define") . 62544116) ((other "Type") . 178371189) ((headline "Type") . 178371189) ((other "User" "should" "be" "able" "to" "view" "a" "list" "of" "Todos") . 262663665) ((headline "User" "should" "be" "able" "to" "view" "a" "list" "of" "Todos") . 262663665) ((other "Prerequisites") . 62259317) ((headline "Prerequisites") . 62259317)) :index (("Haskell!Type-Driven Development with PureScript" "/blog/org/purescript/type-driven-development-with-purescript/index.org" nil) ("FP!Type-Driven Development with PureScript" "/blog/org/purescript/type-driven-development-with-purescript/index.org" nil) ("PureScript!Type-Driven Development with PureScript" "/blog/org/purescript/type-driven-development-with-purescript/index.org" nil) ("JavaScript!Type-Driven Development with PureScript" "/blog/org/purescript/type-driven-development-with-purescript/index.org" nil))) org-publish-cache)
(puthash "/blog/org/grokking-monad/part3.org" '(:date (23387 45568) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Comonad") . 268069047) ((headline "Comonad") . 268069047) ((other "Eff") . 19717665) ((headline "Eff") . 19717665) ((other "Free" "Monoid") . 229429122) ((headline "Free" "Monoid") . 229429122) ((other "Interpreter") . 255964734) ((headline "Interpreter") . 255964734) ((other "Free" "Functor") . 59187216) ((headline "Free" "Functor") . 59187216) ((other "Coyoneda") . 72511304) ((headline "Coyoneda") . 72511304) ((other "Free") . 60760834) ((headline "Free") . 60760834) ((other "Free" "Monad") . 225519044) ((headline "Free" "Monad") . 225519044) ((other "ST" "Monad") . 233395104) ((headline "ST" "Monad") . 233395104) ((other "MonadPlus") . 59013688) ((headline "MonadPlus") . 59013688) ((other "Alternative") . 80575920) ((headline "Alternative") . 80575920) ((other "ReaderT") . 177591851) ((headline "ReaderT") . 177591851) ((other "Monad" "Transform") . 47672254) ((headline "Monad" "Transform") . 47672254) ((other "RWS") . 155854219) ((headline "RWS") . 155854219) ((other "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 165276766) ((headline "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 165276766)) :index (("Catergory Theory!范畴论完全装逼手册 卷三" "/blog/org/grokking-monad/part3.org" nil))) org-publish-cache)
(puthash "/blog/org/make Bamboo support Github Pull Request with Status API.org" '(:date (21731 54784) :title "make Bamboo support Github Pull Request with Status API" :crossrefs (((other "Footnotes") . 39127540) ((headline "Footnotes") . 39127540) ((other "stop" "build" "if" "PR") . 41263304) ((headline "stop" "build" "if" "PR") . 41263304) ((other "notify" "github" "status") . 214747189) ((headline "notify" "github" "status") . 214747189) ((other "checkout" "PR" "code") . 149733607) ((headline "checkout" "PR" "code") . 149733607) ((other "config" "Bamboo" "plan") . 10472585) ((headline "config" "Bamboo" "plan") . 10472585) ((other "but" "what" "about" "the" "custom" "variables") . 163709373) ((headline "but" "what" "about" "the" "custom" "variables") . 163709373) ((other "github" "webhook") . 208656383) ((headline "github" "webhook") . 208656383) ((other "bamboo" "magic") . 227964429) ((headline "bamboo" "magic") . 227964429) ((other "what's" "wrong" "with" "Bamboo") . 134444238) ((headline "what's" "wrong" "with" "Bamboo") . 134444238)) :index (("bamboo" "/blog/org/make Bamboo support Github Pull Request with Status API.org" (name . "what's wrong with Bamboo")) ("github!webhook" "/blog/org/make Bamboo support Github Pull Request with Status API.org" (name . "github webhook")))) org-publish-cache)
(puthash "/blog/org/emacs/literal-programming-emacs-config.org" '(:date (21835 64640) :title "Literal Programming Emacs Configure" :crossrefs (((other "Modes") . 111514769) ((headline "Modes") . 111514769) ((other "yasnippet") . 202754797) ((headline "yasnippet") . 202754797) ((other "which" "key") . 33370459) ((headline "which" "key") . 33370459) ((other "web-mode") . 144462041) ((headline "web-mode") . 144462041) ((other "unicode") . 194178529) ((headline "unicode") . 194178529) ((other "textmate") . 103230699) ((headline "textmate") . 103230699) ((other "smartparens") . 266743256) ((headline "smartparens") . 266743256) ((other "[[https://github.com/atomontage/xterm-color][shell-mode]]") . 82055752) ((headline "[[https://github.com/atomontage/xterm-color][shell-mode]]") . 82055752) ((other "Scala" "Metals") . 158914418) ((headline "Scala" "Metals") . 158914418) ((other "Restclient") . 22164926) ((headline "Restclient") . 22164926) ((other "rainbow" "delimiter") . 121970926) ((headline "rainbow" "delimiter") . 121970926) ((other "PureScript") . 28597473) ((headline "PureScript") . 28597473) ((other "prompt") . 264674445) ((headline "prompt") . 264674445) ((other "org" "mode") . 206625064) ((headline "org" "mode") . 206625064) ((other "on" "screen") . 196522889) ((headline "on" "screen") . 196522889) ((other "Nya" "mode") . 6331675) ((headline "Nya" "mode") . 6331675) ((other "multi" "cursor") . 43446561) ((headline "multi" "cursor") . 43446561) ((other "magit") . 253941074) ((headline "magit") . 253941074) ((other "Langtool") . 153861122) ((headline "Langtool") . 153861122) ((other "key" "chord") . 224801511) ((headline "key" "chord") . 224801511) ((other "indent" "guide") . 229204523) ((headline "indent" "guide") . 229204523) ((other "ido") . 237133123) ((headline "ido") . 237133123) ((other "helm") . 246050076) ((headline "helm") . 246050076) ((other "Haskell") . 210646778) ((headline "Haskell") . 210646778) ((other "forge") . 233980895) ((headline "forge") . 233980895) ((other "expand" "region") . 122053815) ((headline "expand" "region") . 122053815) ((other "Dhall") . 211743454) ((headline "Dhall") . 211743454) ((other "[[https://github.com/company-mode/company-mode][company]]") . 79213235) ((headline "[[https://github.com/company-mode/company-mode][company]]") . 79213235) ((other "[[https://github.com/winterTTr/ace-jump-mode][ace" "jump" "mode]]") . 2967878) ((headline "[[https://github.com/winterTTr/ace-jump-mode][ace" "jump" "mode]]") . 2967878) ((other "Default" "Settings") . 292780) ((headline "Default" "Settings") . 292780) ((other "UI") . 128167691) ((headline "UI") . 128167691) ((other "Fonts") . 50049854) ((headline "Fonts") . 50049854)) :index (("Emacs!Literal Programming Emacs Configure" "/blog/org/emacs/literal-programming-emacs-config.org" nil))) org-publish-cache)
(puthash "/blog/org/purescript/cheatsheet.org" '(:date (23904 32256) :title "PureScript Cheat Sheet For JavaScript Developers" :crossrefs (((other "Reference") . 33465990) ((headline "Reference") . 33465990) ((other "Modules") . 243475118) ((headline "Modules") . 243475118) ((other "PureScript") . 177158971) ((headline "PureScript") . 177158971) ((other "JS") . 40304181) ((headline "JS") . 40304181) ((other "Control" "Flow") . 54327033) ((headline "Control" "Flow") . 54327033) ((other "Do" "Notaion" "/" "FlatMap") . 192593068) ((headline "Do" "Notaion" "/" "FlatMap") . 192593068) ((other "PureScript") . 159667966) ((headline "PureScript") . 159667966) ((other "JS") . 194180511) ((headline "JS") . 194180511) ((other "Pattern" "Matching") . 48075440) ((headline "Pattern" "Matching") . 48075440) ((other "PureScript") . 262635102) ((headline "PureScript") . 262635102) ((other "JS" "[[https://github.com/tc39/proposal-pattern-matching][ES" "proposal]]") . 256587029) ((headline "JS" "[[https://github.com/tc39/proposal-pattern-matching][ES" "proposal]]") . 256587029) ((other "Scope") . 164968874) ((headline "Scope") . 164968874) ((other "PureScript") . 112149328) ((headline "PureScript") . 112149328) ((other "JS") . 40529963) ((headline "JS") . 40529963) ((other "If-Else") . 183385830) ((headline "If-Else") . 183385830) ((other "PureScript") . 142180084) ((headline "PureScript") . 142180084) ((other "JS") . 194004717) ((headline "JS") . 194004717) ((other "Function") . 21839588) ((headline "Function") . 21839588) ((other "PureScript") . 134855721) ((headline "PureScript") . 134855721) ((other "JS") . 265829553) ((headline "JS") . 265829553) ((other "Literal") . 183957408) ((headline "Literal") . 183957408) ((other "Records") . 52111677) ((headline "Records") . 52111677) ((other "PureScript") . 179176281) ((headline "PureScript") . 179176281) ((other "JS") . 150399860) ((headline "JS") . 150399860) ((other "Boolean") . 161011619) ((headline "Boolean") . 161011619) ((other "PureScript") . 171081016) ((headline "PureScript") . 171081016) ((other "JS") . 90402452) ((headline "JS") . 90402452) ((other "String") . 93683256) ((headline "String") . 93683256) ((other "PureScript") . 229765080) ((headline "PureScript") . 229765080) ((other "JS") . 104073925) ((headline "JS") . 104073925) ((other "Number") . 206877789) ((headline "Number") . 206877789) ((other "PureScript") . 174447972) ((headline "PureScript") . 174447972) ((other "JS") . 5501044) ((headline "JS") . 5501044)) :index (("Haskell!PureScript Cheat Sheet From JavaScript" "/blog/org/purescript/cheatsheet.org" nil) ("FP!PureScript Cheat Sheet From JavaScript" "/blog/org/purescript/cheatsheet.org" nil) ("PureScript!PureScript Cheat Sheet From JavaScript" "/blog/org/purescript/cheatsheet.org" nil) ("JavaScript!PureScript Cheat Sheet From JavaScript" "/blog/org/purescript/cheatsheet.org" nil))) org-publish-cache)
(puthash "X72925e1a698aee3ff53cf593237fa7c8cb89c019" '(24858 11634 109069 58000) org-publish-cache)
(puthash "X0775140a372bf75f8a556a7703bfd52e95f01ee0" '(24858 11634 113069 113000) org-publish-cache)
(puthash "X70d9a4c0785c82f38221050f86200349a2a97368" '(24858 11634 109069 58000) org-publish-cache)
(puthash "Xd215a052258897ec906d1d9d283118869737d720" '(24858 11633 861065 646000) org-publish-cache)
(puthash "Xdea335c8c9d380be56d0c7b6fbfdc2be51c48936" '(24858 11633 897066 141000) org-publish-cache)
(puthash "Xeb7410c58306be06013d8bbaf9036c737d46bd41" '(24858 11634 13067 737000) org-publish-cache)
(puthash "X7bb8af6815cb398e51c6d20315389c6cfb56428e" '(24858 11634 13067 737000) org-publish-cache)
(puthash "Xd844710cc2ef2a965e6114ccc749d7cc735ad175" '(24858 11634 13067 737000) org-publish-cache)
(puthash "X9a6f14eb66e94f0583535aa309146bf6131e2694" '(24858 11634 13067 737000) org-publish-cache)
(puthash "Xab444827d9340d3d4a4dc458498f88bfc43238f5" '(24858 11634 13067 737000) org-publish-cache)
(puthash "X3a9f969793972c476442fd2ac05b5e0fbe3d4970" '(24858 11633 897066 141000) org-publish-cache)
(puthash "Xcb1969c3bb7b424d94a7dcd1b77b00a05ca2e34f" '(24858 11633 897066 141000) org-publish-cache)
(puthash "Xb87d3dcce588c3f9870e5fddbe0fc3a5f1a67c09" '(24858 11633 897066 141000) org-publish-cache)
(puthash "X428b8199eb79703e037f44a540b272ae19b81e21" '(24858 11633 897066 141000) org-publish-cache)
(puthash "Xfe7d5f57e6183e92b0cf3a14be5ebc47a4af36c5" '(24858 11634 13067 737000) org-publish-cache)
(puthash "Xca9aa8b336aed6a1a3cf961c046673edf5b9a431" '(24858 11633 897066 141000) org-publish-cache)
(puthash "Xc56c59898bcae7c801b214126824536089984838" '(24858 11633 897066 141000) org-publish-cache)
(puthash "Xae7d7bfd7a9a38060dd286c50682589d5a6708f3" '(24858 11634 13067 737000) org-publish-cache)
(puthash "Xea1b3791cef65a1161b641724471df92042bf659" '(24858 11634 21067 847000) org-publish-cache)
(puthash "X3de003bc5808c943635fc1a8d0045a04f823253a" '(24858 11634 17067 792000) org-publish-cache)
(puthash "Xba8b855fececac457edcee08f9ae9cf093c68f79" '(24858 11634 21067 847000) org-publish-cache)
(puthash "Xb697206f68c35e2c26b6b5e636139c0070d8d725" '(24858 11634 21067 847000) org-publish-cache)
(puthash "X5d5f03360fb33636921d2dd1ca82bcd9a0120c18" '(24858 11634 21067 847000) org-publish-cache)
(puthash "Xa4f7769e8937664afe40b27b5f4d4876d1d268a0" '(24858 11634 21067 847000) org-publish-cache)
(puthash "X833fd6931a9c11d0b14d9f07e899fe03bf4faf4d" '(24858 11633 861065 646000) org-publish-cache)
(puthash "X228b61b5fc9c50b1848b658fe7666ff9989cdb5b" '(24858 11633 881065 921000) org-publish-cache)
(puthash "X4ab0e6e67cd42b849b66e5f60eb64d07c25db21c" '(24858 11633 861065 646000) org-publish-cache)
(puthash "X7c4006f76a13ce74d8337759ba767c4cb877e5fd" '(24858 11633 861065 646000) org-publish-cache)
(puthash "/blog/org/index.org" '(:crossrefs (((other "[[file:jichao.ouyang.org][About" "Me]]") . 18774469) ((headline "[[file:jichao.ouyang.org][About" "Me]]") . 18774469) ((other "[[file:make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API.org][make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API]]") . 19970905) ((headline "[[file:make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API.org][make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API]]") . 19970905) ((other "[[file:clojure/clojure-the-mini-book.org][Clojure" "The" "Mini" "Book]]") . 148014878) ((headline "[[file:clojure/clojure-the-mini-book.org][Clojure" "The" "Mini" "Book]]") . 148014878) ((other "[[file:javascript/essential-ecmascript6.org][Essential" "EcmaScript" "6]]") . 54606042) ((headline "[[file:javascript/essential-ecmascript6.org][Essential" "EcmaScript" "6]]") . 54606042) ((other "[[file:javascript/clojure-core.async-essence-in-native-javascript.org][Clojure" "风格的" "JavaScript" "并发编程]]") . 132417884) ((headline "[[file:javascript/clojure-core.async-essence-in-native-javascript.org][Clojure" "风格的" "JavaScript" "并发编程]]") . 132417884) ((other "[[file:emacs/literal-programming-emacs-config.org][Literal" "Programming" "Emacs" "Configure]]") . 251287748) ((headline "[[file:emacs/literal-programming-emacs-config.org][Literal" "Programming" "Emacs" "Configure]]") . 251287748) ((other "[[file:javascript/functional-javascript.org][Functional" "JavaScript" "Mini" "Book]]") . 107458783) ((headline "[[file:javascript/functional-javascript.org][Functional" "JavaScript" "Mini" "Book]]") . 107458783) ((other "[[file:javascript/clojure-essence-in-javascript-transducer.org][JavaScript玩转Clojure大法之Transducer]]") . 170895368) ((headline "[[file:javascript/clojure-essence-in-javascript-transducer.org][JavaScript玩转Clojure大法之Transducer]]") . 170895368) ((other "[[file:javascript/clojure-essence-in-javascript-trampoline.org][JavaScript玩转Clojure大法之" "-" "Trampoline]]") . 93455494) ((headline "[[file:javascript/clojure-essence-in-javascript-trampoline.org][JavaScript玩转Clojure大法之" "-" "Trampoline]]") . 93455494) ((other "[[file:javascript/clojure-essence-in-javascript-macro.org][JavaScript玩转Clojure大法之" "-" "Macro" "(1)]]") . 56477288) ((headline "[[file:javascript/clojure-essence-in-javascript-macro.org][JavaScript玩转Clojure大法之" "-" "Macro" "(1)]]") . 56477288) ((other "[[file:javascript/clojure-essence-in-javascript-macro-2.org][自制语言初试" "-" "入lang]]") . 76523409) ((headline "[[file:javascript/clojure-essence-in-javascript-macro-2.org][自制语言初试" "-" "入lang]]") . 76523409) ((other "[[file:javascript/understand-prototype.org][理解JavaScript的原型链和继承]]") . 136805009) ((headline "[[file:javascript/understand-prototype.org][理解JavaScript的原型链和继承]]") . 136805009) ((other "[[file:javascript/ru-lang-second-attampt.org][入语言第二试:" "readtable" "与" "core.async]]") . 253219135) ((headline "[[file:javascript/ru-lang-second-attampt.org][入语言第二试:" "readtable" "与" "core.async]]") . 253219135) ((other "[[file:javascript/reactive-programming.org][Monadic" "Reactive" "Programming" "in" "JavaScript]]") . 13017260) ((headline "[[file:javascript/reactive-programming.org][Monadic" "Reactive" "Programming" "in" "JavaScript]]") . 13017260) ((other "[[file:github/using-dotfiles-and-stow-to-manage-your-dotfiles.org][使用" "dotfiles" "和" "stow" "管理你的" "dotfiles]]") . 37691079) ((headline "[[file:github/using-dotfiles-and-stow-to-manage-your-dotfiles.org][使用" "dotfiles" "和" "stow" "管理你的" "dotfiles]]") . 37691079) ((other "[[file:javascript/react-cookbook-mini.org][A" "Compact" "React" "Cookbook]]") . 26894506) ((headline "[[file:javascript/react-cookbook-mini.org][A" "Compact" "React" "Cookbook]]") . 26894506) ((other "[[file:javascript/react-transdux-the-clojure-approach-of-flux.org][看我们3天" "hackday" "都干了些什么]]") . 69074082) ((headline "[[file:javascript/react-transdux-the-clojure-approach-of-flux.org][看我们3天" "hackday" "都干了些什么]]") . 69074082) ((other "[[file:javascript/rethinking-react-dataflow.org][Rethinking" "React" "Dataflow]]") . 168691447) ((headline "[[file:javascript/rethinking-react-dataflow.org][Rethinking" "React" "Dataflow]]") . 168691447) ((other "[[file:scala/implicit-conversions.org][Implicit," "to" "be" "or" "not" "to" "be]]") . 152378846) ((headline "[[file:scala/implicit-conversions.org][Implicit," "to" "be" "or" "not" "to" "be]]") . 152378846) ((other "[[file:functional-ruby.org][Functional" "Ruby]]") . 54776143) ((headline "[[file:functional-ruby.org][Functional" "Ruby]]") . 54776143) ((other "[[file:write-yourself-a-scheme-in-haskell/index.org][用Haskell48小时写你个Scheme]]") . 164474662) ((headline "[[file:write-yourself-a-scheme-in-haskell/index.org][用Haskell48小时写你个Scheme]]") . 164474662) ((other "[[file:2016-year-in-review.org][2016" "Year" "in" "Review]]") . 26869866) ((headline "[[file:2016-year-in-review.org][2016" "Year" "in" "Review]]") . 26869866) ((other "[[file:grokking-monad/part2.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 171870278) ((headline "[[file:grokking-monad/part2.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 171870278) ((other "[[file:grokking-monad/part1.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 119400654) ((headline "[[file:grokking-monad/part1.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 119400654) ((other "[[file:scala/gist/modern-scala-deployment.org][如何部署" "Scala" "代码]]") . 198961904) ((headline "[[file:scala/gist/modern-scala-deployment.org][如何部署" "Scala" "代码]]") . 198961904) ((other "[[file:the-99-problems/haskell.org][the" "99" "problems]]") . 256350764) ((headline "[[file:the-99-problems/haskell.org][the" "99" "problems]]") . 256350764) ((other "[[file:xreact/typeclasses-in-typescript.org][Type" "Classes" "in" "TypeScript]]") . 222523411) ((headline "[[file:xreact/typeclasses-in-typescript.org][Type" "Classes" "in" "TypeScript]]") . 222523411) ((other "[[file:xreact/fun-with-fantasy.org][xReact" "Fantasy]]") . 147598126) ((headline "[[file:xreact/fun-with-fantasy.org][xReact" "Fantasy]]") . 147598126) ((other "[[file:grokking-monad/part3.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 160560688) ((headline "[[file:grokking-monad/part3.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 160560688) ((other "[[file:how-functional-programming-and-flink-will-save-your-ass-from-big-data.org][使用" "Flink" "解救多线程" "Scala" "应用]]") . 49218223) ((headline "[[file:how-functional-programming-and-flink-will-save-your-ass-from-big-data.org][使用" "Flink" "解救多线程" "Scala" "应用]]") . 49218223) ((other "[[file:shutting-down-gulugulu.org][关闭" "gulugulu" "弹幕]]") . 89280332) ((headline "[[file:shutting-down-gulugulu.org][关闭" "gulugulu" "弹幕]]") . 89280332) ((other "[[file:grokking-monad/scala/en/part3.org][Grokking" "Monad" "in" "Scala" "-" "Free]]") . 231371733) ((headline "[[file:grokking-monad/scala/en/part3.org][Grokking" "Monad" "in" "Scala" "-" "Free]]") . 231371733) ((other "[[file:grokking-monad/scala/en/part2.org][Grokking" "Monad" "in" "Scala]]") . 4901736) ((headline "[[file:grokking-monad/scala/en/part2.org][Grokking" "Monad" "in" "Scala]]") . 4901736) ((other "[[file:scala/finch-vs-http4s.org][Finch" "vs" "Http4s," "which" "is" "FPer]]") . 184366286) ((headline "[[file:scala/finch-vs-http4s.org][Finch" "vs" "Http4s," "which" "is" "FPer]]") . 184366286) ((other "[[file:scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 40570624) ((headline "[[file:scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 40570624) ((other "[[file:scala/into-the-readerT-verse.org][Into" "ReaderT-verse]]") . 239107800) ((headline "[[file:scala/into-the-readerT-verse.org][Into" "ReaderT-verse]]") . 239107800) ((other "[[file:grokking-monad/scala/en/choice.org][Applied" "Category" "Theory" "in" "Scala]]") . 163482421) ((headline "[[file:grokking-monad/scala/en/choice.org][Applied" "Category" "Theory" "in" "Scala]]") . 163482421) ((other "[[file:scala/functional-caching.org][Functional" "Scala" "Caching]]") . 235593768) ((headline "[[file:scala/functional-caching.org][Functional" "Scala" "Caching]]") . 235593768) ((other "[[file:purescript/cheatsheet.org][PureScript" "Cheat" "Sheet" "For" "JavaScript" "Developers]]") . 83919593) ((headline "[[file:purescript/cheatsheet.org][PureScript" "Cheat" "Sheet" "For" "JavaScript" "Developers]]") . 83919593) ((other "[[file:purescript/type-driven-development-with-purescript/index.org][Type-Driven" "Development" "with" "PureScript]]") . 262955787) ((headline "[[file:purescript/type-driven-development-with-purescript/index.org][Type-Driven" "Development" "with" "PureScript]]") . 262955787) ((other "[[file:2019-year-in-review.org][2019" "Year" "in" "Review]]") . 118584486) ((headline "[[file:2019-year-in-review.org][2019" "Year" "in" "Review]]") . 118584486) ((other "[[file:patterns-and-practices/applied-evolutionary-design/chapter-1.org][Applied" "Evolutionary" "Design]]") . 252281938) ((headline "[[file:patterns-and-practices/applied-evolutionary-design/chapter-1.org][Applied" "Evolutionary" "Design]]") . 252281938) ((other "[[file:scala/dotty/GADT.org][Scala" "3" "Generalized" "Algebraic" "Datatypes" "(GADT)]]") . 57858894) ((headline "[[file:scala/dotty/GADT.org][Scala" "3" "Generalized" "Algebraic" "Datatypes" "(GADT)]]") . 57858894) ((other "[[file:scala/dotty/rank-N-type.org][Scala" "3" "原生" "Rank" "N" "Type]]") . 2301530) ((headline "[[file:scala/dotty/rank-N-type.org][Scala" "3" "原生" "Rank" "N" "Type]]") . 2301530) ((other "[[file:scala/dotty/en/rank-N-type.org][Rank" "N" "Types" "in" "Scala" "3]]") . 200357856) ((headline "[[file:scala/dotty/en/rank-N-type.org][Rank" "N" "Types" "in" "Scala" "3]]") . 200357856) ((other "[[file:scala/dotty/functionK.org][Scala" "3" "原生" "FunctionK]]") . 138546514) ((headline "[[file:scala/dotty/functionK.org][Scala" "3" "原生" "FunctionK]]") . 138546514) ((other "[[file:scala/dotty/phantomType.org][Scala" "3" "Phantom" "Types]]") . 244570210) ((headline "[[file:scala/dotty/phantomType.org][Scala" "3" "Phantom" "Types]]") . 244570210) ((other "[[file:scala/dotty/en/dependent-types.org][Dependent" "Types" "in" "Scala" "3]]") . 56533250) ((headline "[[file:scala/dotty/en/dependent-types.org][Dependent" "Types" "in" "Scala" "3]]") . 56533250) ((other "[[file:scala/dotty/dependent-types.org][Scala" "3" "Dependent" "Types]]") . 160089986) ((headline "[[file:scala/dotty/dependent-types.org][Scala" "3" "Dependent" "Types]]") . 160089986) ((other "[[file:scala/dotty/kan-extensions.org][Scala" "3" "Kan" "Extensions]]") . 14387476) ((headline "[[file:scala/dotty/kan-extensions.org][Scala" "3" "Kan" "Extensions]]") . 14387476) ((other "[[file:scala/dotty/en/functionK.org][FunctionK" "in" "Scala" "3]]") . 101540747) ((headline "[[file:scala/dotty/en/functionK.org][FunctionK" "in" "Scala" "3]]") . 101540747) ((other "[[file:scala/dotty/en/GADT.org][Generalized" "Algebraic" "Datatypes" "in" "Scala" "3]]") . 151744605) ((headline "[[file:scala/dotty/en/GADT.org][Generalized" "Algebraic" "Datatypes" "in" "Scala" "3]]") . 151744605) ((other "[[file:scala/dotty/en/phantomType.org][Phantom" "Types" "in" "Scala" "3]]") . 43599444) ((headline "[[file:scala/dotty/en/phantomType.org][Phantom" "Types" "in" "Scala" "3]]") . 43599444) ((other "[[file:scala/dummy-guide-to-sbt.org][Dummy" "Guide" "to" "sbt]]") . 10871741) ((headline "[[file:scala/dummy-guide-to-sbt.org][Dummy" "Guide" "to" "sbt]]") . 10871741) ((other "[[file:scala/dotty/en/first-class-types.org][\"First" "Class\"" "Types" "in" "Scala" "3]]") . 190874892) ((headline "[[file:scala/dotty/en/first-class-types.org][\"First" "Class\"" "Types" "in" "Scala" "3]]") . 190874892) ((other "[[file:scala/http4s-tutorial.org][Http4s" "x" "Finagle" "Tutorial]]") . 102214068) ((headline "[[file:scala/http4s-tutorial.org][Http4s" "x" "Finagle" "Tutorial]]") . 102214068) ((other "[[file:patterns-and-practices/functional-devops.org][Functional" "DevOps]]") . 78516221) ((headline "[[file:patterns-and-practices/functional-devops.org][Functional" "DevOps]]") . 78516221) ((other "[[file:scala/dotty/en/type-classes.org][Type" "Classes" "in" "Scala" "3]]") . 171382066) ((headline "[[file:scala/dotty/en/type-classes.org][Type" "Classes" "in" "Scala" "3]]") . 171382066) ((other "[[file:scala/dotty/en/generic-type-class-derivation.org][Generic" "Type" "Class" "Derivation" "in" "Scala" "3]]") . 263101537) ((headline "[[file:scala/dotty/en/generic-type-class-derivation.org][Generic" "Type" "Class" "Derivation" "in" "Scala" "3]]") . 263101537) ((other "[[file:devops/write-aws-tool-in-haskell.org][Write" "your" "AWS" "DevOps" "tool" "in" "Haskell" "for" "Gread" "Good]]") . 152486695) ((headline "[[file:devops/write-aws-tool-in-haskell.org][Write" "your" "AWS" "DevOps" "tool" "in" "Haskell" "for" "Gread" "Good]]") . 152486695)) :index nil) org-publish-cache)
(puthash "X75106c7b565107d996cc2d733095b328508870d5" '(24858 11643 465198 73000) org-publish-cache)
(puthash "X7cb4b5aecc3c5196c654a81c1a71c633e8cca0f5" '(24858 11633 861065 646000) org-publish-cache)
(puthash "Xe2fee25010b8c323c3ab12529addea9afb790fdc" '(24858 11634 13067 737000) org-publish-cache)
(puthash "X2ef7dbda2550d45b54ba42361447e54966317643" '(24858 11633 881065 921000) org-publish-cache)
(puthash "Xd7a1fa342351b55dfdb807021c9c93fc9ef2a183" '(24858 11633 881065 921000) org-publish-cache)
(puthash "Xc0e27a375e1c80590e40af7eda436a5836099ec4" '(24858 11633 881065 921000) org-publish-cache)
(puthash "Xb4e8383ab8c9052a70f9902a75b03c3f7ae9206c" '(24858 11633 881065 921000) org-publish-cache)
(puthash "X180c0c4f35f69d6a6b8d90e5737dac94a72ad0ec" '(24858 11633 881065 921000) org-publish-cache)
(puthash "X572131bf1c3c30351ba443ce6d52405150f0bc8c" '(24858 11633 881065 921000) org-publish-cache)
(puthash "Xbfbfeb700b3e96c35dabdad799d8e74e9172617e" '(24858 11634 17067 792000) org-publish-cache)
(puthash "Xf058f10385bdbc919751ef0b5dc024b4097ce31e" '(24858 11634 17067 792000) org-publish-cache)
(puthash "X69133256a8c7d019c63d5b5df34f83fed9e89968" '(24858 11633 861065 646000) org-publish-cache)
(puthash "X2e6c563b060e9fa14e7226ab0fdb20f4c4dc29bc" '(24858 11634 13067 737000) org-publish-cache)
(puthash "/blog/org/theindex.org" '(:crossrefs (((other "范") . 165521146) ((headline "范") . 165521146) ((other "自") . 260787754) ((headline "自") . 260787754) ((other "米") . 225356610) ((headline "米") . 225356610) ((other "柯") . 173005309) ((headline "柯") . 173005309) ((other "同") . 210348293) ((headline "同") . 210348293) ((other "函") . 185091053) ((headline "函") . 185091053) ((other "Y") . 34269359) ((headline "Y") . 34269359) ((other "X") . 75163771) ((headline "X") . 75163771) ((other "T") . 123976975) ((headline "T") . 123976975) ((other "S") . 137321591) ((headline "S") . 137321591) ((other "R") . 110435012) ((headline "R") . 110435012) ((other "P") . 113432523) ((headline "P") . 113432523) ((other "N") . 248582161) ((headline "N") . 248582161) ((other "M") . 82693741) ((headline "M") . 82693741) ((other "L") . 155610291) ((headline "L") . 155610291) ((other "K") . 245785712) ((headline "K") . 245785712) ((other "J") . 148000313) ((headline "J") . 148000313) ((other "I") . 229781489) ((headline "I") . 229781489) ((other "H") . 231659487) ((headline "H") . 231659487) ((other "G") . 264779281) ((headline "G") . 264779281) ((other "F") . 169192102) ((headline "F") . 169192102) ((other "E") . 196670626) ((headline "E") . 196670626) ((other "D") . 236940740) ((headline "D") . 236940740) ((other "C") . 170856460) ((headline "C") . 170856460) ((other "B") . 259910570) ((headline "B") . 259910570) ((other "A") . 16803242) ((headline "A") . 16803242)) :index nil) org-publish-cache)
(puthash "Xc04c6254deee108dc8eef31a0e1c8d065842c706" '(24858 11659 833426 565000) org-publish-cache)
(puthash "/blog/org/scala/gist/modern-scala-deployment.org" '(:date (22685 640) :title "如何部署 Scala 代码" :crossrefs (((other "Footnotes") . 244984230) ((headline "Footnotes") . 244984230) ((other "现在") . 222700225) ((headline "现在") . 222700225) ((other "一年前") . 201954111) ((headline "一年前") . 201954111) ((other "两年多前") . 224661976) ((headline "两年多前") . 224661976)) :index (("Scala!如何部署 Scala 代码" "/blog/org/scala/gist/modern-scala-deployment.org" nil) ("DevOps!如何部署 Scala 代码" "/blog/org/scala/gist/modern-scala-deployment.org" nil))) org-publish-cache)
(puthash "Xf3c9a99631e51982fc4e91de7a855348ee15ffb3" '(24858 11634 21067 847000) org-publish-cache)
(puthash "/blog/org/scala/dotty/rank-N-type.org" '(:date (24182 43648) :title "Scala 3 原生 Rank N Type" :crossrefs (((other "Scala" "3") . 162332988) ((headline "Scala" "3") . 162332988) ((other "Scala" "2") . 35047621) ((headline "Scala" "2") . 35047621)) :index (("Scala!Scala 3 N 阶类型" "/blog/org/scala/dotty/rank-N-type.org" nil) ("Dotty!Scala 3 N 阶类型" "/blog/org/scala/dotty/rank-N-type.org" nil) ("Rank N Types!Scala 3 N 阶类型" "/blog/org/scala/dotty/rank-N-type.org" nil) ("FunctionK!Scala 3 N 阶类型" "/blog/org/scala/dotty/rank-N-type.org" nil) ("FP!Scala 3 N 阶类型" "/blog/org/scala/dotty/rank-N-type.org" nil) ("Catergory Theory!Scala 3 N 阶类型" "/blog/org/scala/dotty/rank-N-type.org" nil))) org-publish-cache)
(puthash "Xc7dfb74023d9e3a8cc282ab28c458a67f0bc1bf6" '(24858 11634 21067 847000) org-publish-cache)
(puthash "/blog/org/scala/dotty/functionK.org" '(:date (24182 43648) :title "Scala 3 原生 FunctionK" :crossrefs (((other "Footnotes") . 122994632) ((headline "Footnotes") . 122994632) ((other "Scala" "3") . 150668395) ((headline "Scala" "3") . 150668395) ((other "Scala" "2") . 64979169) ((headline "Scala" "2") . 64979169)) :index (("Scala!Scala 3 原生 FunctionK" "/blog/org/scala/dotty/functionK.org" nil) ("Dotty!Scala 3 原生 FunctionK" "/blog/org/scala/dotty/functionK.org" nil) ("Rank N Types!Scala 3 原生 FunctionK" "/blog/org/scala/dotty/functionK.org" nil) ("FunctionK!Scala 3 原生 FunctionK" "/blog/org/scala/dotty/functionK.org" nil) ("FP!Scala 3 原生 FunctionK" "/blog/org/scala/dotty/functionK.org" nil) ("Catergory Theory!Scala 3 原生 FunctionK" "/blog/org/scala/dotty/functionK.org" nil))) org-publish-cache)
(puthash "X17caf9680b4a507e49b207898245d960476c1025" '(24858 11634 21067 847000) org-publish-cache)
(puthash "/blog/org/scala/dotty/GADT.org" '(:date (24182 43648) :title "Scala 3 Generalized Algebraic Datatypes (GADT)" :crossrefs (((other "Footnotes") . 1642208) ((headline "Footnotes") . 1642208)) :index (("Scala!Scala 3 通用代数类型" "/blog/org/scala/dotty/GADT.org" nil) ("Dotty!Scala 3 通用代数类型" "/blog/org/scala/dotty/GADT.org" nil) ("Phantom Types!Scala 3 通用代数类型" "/blog/org/scala/dotty/GADT.org" nil) ("FP!Scala 3 通用代数类型" "/blog/org/scala/dotty/GADT.org" nil) ("Catergory Theory!Scala 3 通用代数类型" "/blog/org/scala/dotty/GADT.org" nil))) org-publish-cache)
(puthash "Xa97d99dfba317b2f8617b5371faa63f5033fabbc" '(24858 11634 17067 792000) org-publish-cache)
(puthash "/blog/org/scala/dotty/phantomType.org" '(:date (24194 34816) :title "Scala 3 Phantom Types" :crossrefs nil :index (("Scala!Scala 3 幻影类型" "/blog/org/scala/dotty/phantomType.org" nil) ("Dotty!Scala 3 幻影类型" "/blog/org/scala/dotty/phantomType.org" nil) ("Phantom Types!Scala 3 幻影类型" "/blog/org/scala/dotty/phantomType.org" nil) ("FP!Scala 3 幻影类型" "/blog/org/scala/dotty/phantomType.org" nil) ("Catergory Theory!Scala 3 幻影类型" "/blog/org/scala/dotty/phantomType.org" nil))) org-publish-cache)
(puthash "Xf683debe09bc67e49cc2fbf085260bccd2b5b7c1" '(24858 11634 21067 847000) org-publish-cache)
(puthash "/blog/org/scala/dotty/dependent-types.org" '(:date (24201 8064) :title "Scala 3 Dependent Types" :crossrefs (((other "Footnotes") . 77985133) ((headline "Footnotes") . 77985133) ((other "Scala" "3") . 122223378) ((headline "Scala" "3") . 122223378) ((other "Scala" "2") . 220374858) ((headline "Scala" "2") . 220374858)) :index (("Scala!Scala 3 Dependent Types" "/blog/org/scala/dotty/dependent-types.org" nil) ("Shapeless!Scala 3 Dependent Types" "/blog/org/scala/dotty/dependent-types.org" nil) ("Dotty!Scala 3 Dependent Types" "/blog/org/scala/dotty/dependent-types.org" nil) ("Dependent Types!Scala 3 Dependent Types" "/blog/org/scala/dotty/dependent-types.org" nil) ("FunctionK!Scala 3 Dependent Types" "/blog/org/scala/dotty/dependent-types.org" nil) ("FP!Scala 3 Dependent Types" "/blog/org/scala/dotty/dependent-types.org" nil))) org-publish-cache)
(puthash "Xbdbfc0eaaa0854712bab2478cf360a7069684dc5" '(24858 11634 17067 792000) org-publish-cache)
(puthash "/blog/org/scala/dotty/kan-extensions.org" '(:date (24203 49792) :title "Scala 3 Kan Extensions" :crossrefs (((other "Footnotes") . 242173607) ((headline "Footnotes") . 242173607) ((other "右看") . 143953357) ((headline "右看") . 143953357) ((other "左看") . 55359004) ((headline "左看") . 55359004)) :index (("Scala 3 Kan Extensions" "/blog/org/scala/dotty/kan-extensions.org" nil) ("Dotty!Scala 3 Kan Extensions" "/blog/org/scala/dotty/kan-extensions.org" nil) ("Rank N Types!Scala 3 Kan Extensions" "/blog/org/scala/dotty/kan-extensions.org" nil) ("FunctionK!Scala 3 Kan Extensions" "/blog/org/scala/dotty/kan-extensions.org" nil) ("FP!Scala 3 Kan Extensions" "/blog/org/scala/dotty/kan-extensions.org" nil) ("Catergory Theory!Scala 3 Kan Extensions" "/blog/org/scala/dotty/kan-extensions.org" nil))) org-publish-cache)
(puthash "X3d23ec254d6a63543d3b77214bd2f980aeebb1aa" '(24858 11634 21067 847000) org-publish-cache)
(puthash "/blog/org/scala/dotty/en/rank-N-type.org" '(:date (24182 43648) :title "Rank N Types in Scala 3" :crossrefs (((other "Scala" "3") . 208728082) ((headline "Scala" "3") . 208728082) ((other "Scala" "2") . 38800646) ((headline "Scala" "2") . 38800646)) :index (("Scala!Rank N Types in Scala 3" "/blog/org/scala/dotty/en/rank-N-type.org" nil) ("Dotty!Rank N Types in Scala 3" "/blog/org/scala/dotty/en/rank-N-type.org" nil) ("Rank N Types!Rank N Types in Scala 3" "/blog/org/scala/dotty/en/rank-N-type.org" nil) ("FunctionK!Rank N Types in Scala 3" "/blog/org/scala/dotty/en/rank-N-type.org" nil) ("FP!Rank N Types in Scala 3" "/blog/org/scala/dotty/en/rank-N-type.org" nil) ("Catergory Theory!Rank N Types in Scala 3" "/blog/org/scala/dotty/en/rank-N-type.org" nil))) org-publish-cache)
(puthash "X28a5c93b7ccded8a5cbde0713a70c0d2d5059a9e" '(24858 11634 17067 792000) org-publish-cache)
(puthash "/blog/org/scala/dotty/en/functionK.org" '(:date (24244 41216) :title "FunctionK in Scala 3" :crossrefs (((other "Footnotes") . 11582298) ((headline "Footnotes") . 11582298) ((other "Scala" "3") . 156005516) ((headline "Scala" "3") . 156005516) ((other "Scala" "2") . 228018159) ((headline "Scala" "2") . 228018159)) :index (("Scala!FunctionK in Scala 3" "/blog/org/scala/dotty/en/functionK.org" nil) ("Dotty!FunctionK in Scala 3" "/blog/org/scala/dotty/en/functionK.org" nil) ("Rank N Types!FunctionK in Scala 3" "/blog/org/scala/dotty/en/functionK.org" nil) ("FunctionK!FunctionK in Scala 3" "/blog/org/scala/dotty/en/functionK.org" nil) ("FP!FunctionK in Scala 3" "/blog/org/scala/dotty/en/functionK.org" nil) ("Catergory Theory!FunctionK in Scala 3" "/blog/org/scala/dotty/en/functionK.org" nil))) org-publish-cache)
(puthash "X550be6b966a6722d4e7ccb8e7a7199665b781030" '(24858 11634 17067 792000) org-publish-cache)
(puthash "/blog/org/scala/dotty/en/GADT.org" '(:date (24257 53248) :title "Generalized Algebraic Datatypes in Scala 3" :crossrefs (((other "Footnotes") . 12839792) ((headline "Footnotes") . 12839792)) :index (("Scala!Generalized Algebraic Datatypes in Scala 3" "/blog/org/scala/dotty/en/GADT.org" nil) ("Dotty!Generalized Algebraic Datatypes in Scala 3" "/blog/org/scala/dotty/en/GADT.org" nil) ("Phantom Types!Generalized Algebraic Datatypes in Scala 3" "/blog/org/scala/dotty/en/GADT.org" nil) ("FP!Generalized Algebraic Datatypes in Scala 3" "/blog/org/scala/dotty/en/GADT.org" nil) ("Catergory Theory!Generalized Algebraic Datatypes in Scala 3" "/blog/org/scala/dotty/en/GADT.org" nil))) org-publish-cache)
(puthash "Xa8f934735315898a38ce4ec6250eec956aae8f0e" '(24858 11634 17067 792000) org-publish-cache)
(puthash "/blog/org/scala/dotty/en/phantomType.org" '(:date (24259 8576) :title "Phantom Types in Scala 3" :crossrefs nil :index (("Scala!Phantom Types in Scala 3" "/blog/org/scala/dotty/en/phantomType.org" nil) ("Dotty!Phantom Types in Scala 3" "/blog/org/scala/dotty/en/phantomType.org" nil) ("Phantom Types!Phantom Types in Scala 3" "/blog/org/scala/dotty/en/phantomType.org" nil) ("FP!Phantom Types in Scala 3" "/blog/org/scala/dotty/en/phantomType.org" nil) ("Catergory Theory!Phantom Types in Scala 3" "/blog/org/scala/dotty/en/phantomType.org" nil))) org-publish-cache)
(puthash "X28b28d9fb4abc7dfa27d7e1d28eebb8198150187" '(24858 11634 17067 792000) org-publish-cache)
(puthash "/blog/org/scala/dotty/en/dependent-types.org" '(:date (24201 8064) :title "Dependent Types in Scala 3" :crossrefs (((other "Footnotes") . 233741374) ((headline "Footnotes") . 233741374) ((other "Aux" "is" "somehow" "still" "very" "useful") . 222591369) ((headline "Aux" "is" "somehow" "still" "very" "useful") . 222591369) ((other "Scala" "3") . 244804455) ((headline "Scala" "3") . 244804455) ((other "Scala" "2") . 54820431) ((headline "Scala" "2") . 54820431)) :index (("Scala!Dependent Types in Scala 3" "/blog/org/scala/dotty/en/dependent-types.org" nil) ("Shapeless!Dependent Types in Scala 3" "/blog/org/scala/dotty/en/dependent-types.org" nil) ("Dotty!Dependent Types in Scala 3" "/blog/org/scala/dotty/en/dependent-types.org" nil) ("Dependent Types!Dependent Types in Scala 3" "/blog/org/scala/dotty/en/dependent-types.org" nil) ("FunctionK!Dependent Types in Scala 3" "/blog/org/scala/dotty/en/dependent-types.org" nil) ("FP!Dependent Types in Scala 3" "/blog/org/scala/dotty/en/dependent-types.org" nil))) org-publish-cache)
(puthash "X4c3e0163e50d46dcdf127c3647ea35fafc26e3fd" '(24858 11634 17067 792000) org-publish-cache)
(puthash "/blog/org/scala/dummy-guide-to-sbt.org" '(:date (24284 11776) :title "Dummy Guide to sbt" :crossrefs (((other "Footnotes") . 180691146) ((headline "Footnotes") . 180691146) ((other "Task") . 9617545) ((headline "Task") . 9617545) ((other "Version" "handling") . 246931787) ((headline "Version" "handling") . 246931787) ((other "=%%=") . 254812882) ((headline "=%%=") . 254812882) ((other "Package" "management") . 198262990) ((headline "Package" "management") . 198262990) ((other "Then" "follow" "the" "Stereo" "type") . 40718704) ((headline "Then" "follow" "the" "Stereo" "type") . 40718704) ((other "Rakefile") . 228278357) ((headline "Rakefile") . 228278357) ((other "npm") . 62953156) ((headline "npm") . 62953156) ((other "What" "is" "the" "pain" "actually?") . 2111642) ((headline "What" "is" "the" "pain" "actually?") . 2111642) ((other "Why" "sbt") . 22236236) ((headline "Why" "sbt") . 22236236)) :index (("Scala!Dummy Guide to sbt" "/blog/org/scala/dummy-guide-to-sbt.org" nil))) org-publish-cache)
(puthash "Xe8433be3ceefee546fb348f0724b0da172cd61d2" '(24858 11634 21067 847000) org-publish-cache)
(puthash "/blog/org/the-99-problems/haskell.org" '(:date (22703 30592) :title "the 99 problems" :crossrefs (((other "Arithmetic") . 25115341) ((headline "Arithmetic") . 25115341) ((other "37.") . 102256188) ((headline "37.") . 102256188) ((other "36." "Determine" "the" "prime" "factors" "of" "a" "given" "positive" "integer" "(2)") . 188062172) ((headline "36." "Determine" "the" "prime" "factors" "of" "a" "given" "positive" "integer" "(2)") . 188062172) ((other "35." "Determine" "the" "prime" "factors" "of" "a" "given" "positive" "integer." "Construct" "a" "flat" "list" "containing" "the" "prime" "factors" "in" "ascending" "order") . 20094144) ((headline "35." "Determine" "the" "prime" "factors" "of" "a" "given" "positive" "integer." "Construct" "a" "flat" "list" "containing" "the" "prime" "factors" "in" "ascending" "order") . 20094144) ((other "34." "Calculate" "Euler's" "totient" "function" "phi(m)") . 170745542) ((headline "34." "Calculate" "Euler's" "totient" "function" "phi(m)") . 170745542) ((other "33." "Determine" "whether" "two" "positive" "integer" "numbers" "are" "coprime." "Two" "numbers" "are" "coprime" "if" "their" "greatest" "common" "divisor" "equals" "1") . 213925474) ((headline "33." "Determine" "whether" "two" "positive" "integer" "numbers" "are" "coprime." "Two" "numbers" "are" "coprime" "if" "their" "greatest" "common" "divisor" "equals" "1") . 213925474) ((other "32." "Determine" "the" "greatest" "common" "divisor" "of" "two" "positive" "integer" "numbers") . 200258588) ((headline "32." "Determine" "the" "greatest" "common" "divisor" "of" "two" "positive" "integer" "numbers") . 200258588) ((other "31." "is" "prime") . 18408086) ((headline "31." "is" "prime") . 18408086) ((other "List") . 44272322) ((headline "List") . 44272322) ((other "28." "Sorting" "a" "list" "of" "lists" "according" "to" "length" "of" "sublists") . 220164591) ((headline "28." "Sorting" "a" "list" "of" "lists" "according" "to" "length" "of" "sublists") . 220164591) ((other "27." "Group" "the" "elements" "of" "a" "set" "into" "disjoint" "subsets.") . 158156117) ((headline "27." "Group" "the" "elements" "of" "a" "set" "into" "disjoint" "subsets.") . 158156117) ((other "26." "Generate" "the" "combinations" "of" "K" "distinct" "objects" "chosen" "from" "the" "N" "elements" "of" "a" "list") . 27204782) ((headline "26." "Generate" "the" "combinations" "of" "K" "distinct" "objects" "chosen" "from" "the" "N" "elements" "of" "a" "list") . 27204782) ((other "25." "Generate" "a" "random" "permutation" "of" "the" "elements" "of" "a" "list.") . 129093995) ((headline "25." "Generate" "a" "random" "permutation" "of" "the" "elements" "of" "a" "list.") . 129093995) ((other "24." "Draw" "N" "different" "random" "numbers" "from" "the" "set" "1..M") . 24090461) ((headline "24." "Draw" "N" "different" "random" "numbers" "from" "the" "set" "1..M") . 24090461) ((other "23." "Extract" "a" "given" "number" "of" "randomly" "selected" "elements" "from" "a" "list") . 202195877) ((headline "23." "Extract" "a" "given" "number" "of" "randomly" "selected" "elements" "from" "a" "list") . 202195877) ((other "22." "Create" "a" "list" "containing" "all" "integers" "within" "a" "given" "range") . 243001364) ((headline "22." "Create" "a" "list" "containing" "all" "integers" "within" "a" "given" "range") . 243001364) ((other "21." "Insert" "an" "element" "at" "a" "given" "position" "into" "a" "list.") . 144015993) ((headline "21." "Insert" "an" "element" "at" "a" "given" "position" "into" "a" "list.") . 144015993) ((other "20." "Remove" "the" "K'th" "element" "from" "a" "list.") . 124728739) ((headline "20." "Remove" "the" "K'th" "element" "from" "a" "list.") . 124728739) ((other "19." "Rotate" "a" "list" "N" "places" "to" "the" "left.") . 241767912) ((headline "19." "Rotate" "a" "list" "N" "places" "to" "the" "left.") . 241767912) ((other "18." "Extract" "a" "slice" "from" "a" "list.") . 262840706) ((headline "18." "Extract" "a" "slice" "from" "a" "list.") . 262840706) ((other "17." "Split" "a" "list" "into" "two" "parts;" "the" "length" "of" "the" "first" "part" "is" "given") . 116479591) ((headline "17." "Split" "a" "list" "into" "two" "parts;" "the" "length" "of" "the" "first" "part" "is" "given") . 116479591) ((other "16." "Drop" "every" "N'th" "element" "from" "a" "list.") . 174755605) ((headline "16." "Drop" "every" "N'th" "element" "from" "a" "list.") . 174755605) ((other "15." "Replicate" "the" "elements" "of" "a" "list" "a" "given" "number" "of" "times.") . 244964650) ((headline "15." "Replicate" "the" "elements" "of" "a" "list" "a" "given" "number" "of" "times.") . 244964650) ((other "14." "Duplicate" "the" "elements" "of" "a" "list.") . 70041991) ((headline "14." "Duplicate" "the" "elements" "of" "a" "list.") . 70041991) ((other "13." "Run-length" "encoding" "of" "a" "list") . 37772138) ((headline "13." "Run-length" "encoding" "of" "a" "list") . 37772138) ((other "12." "Decode" "a" "run-length" "encoded" "list.") . 31462636) ((headline "12." "Decode" "a" "run-length" "encoded" "list.") . 31462636) ((other "11." "Modified" "run-length" "encoding.") . 195486146) ((headline "11." "Modified" "run-length" "encoding.") . 195486146) ((other "10." "encode") . 175937090) ((headline "10." "encode") . 175937090) ((other "9." "pack") . 40381497) ((headline "9." "pack") . 40381497) ((other "8." "compress") . 218120233) ((headline "8." "compress") . 218120233) ((other "7." "flatten" "list") . 56677855) ((headline "7." "flatten" "list") . 56677855) ((other "6." "palindrome") . 76807032) ((headline "6." "palindrome") . 76807032) ((other "5." "reverse" "list") . 150117405) ((headline "5." "reverse" "list") . 150117405) ((other "4." "length") . 228462112) ((headline "4." "length") . 228462112) ((other "3." "find" "kth" "element") . 131040754) ((headline "3." "find" "kth" "element") . 131040754) ((other "2." "Find" "the" "but" "last" "element") . 18960289) ((headline "2." "Find" "the" "but" "last" "element") . 18960289) ((other "1." "Find" "the" "last" "element") . 139972561) ((headline "1." "Find" "the" "last" "element") . 139972561)) :index nil) org-publish-cache)
(puthash "X3061f7a537a71254262a7eeecbf3c74e8e7f4f8d" '(24858 11634 109069 58000) org-publish-cache)
(puthash "/blog/org/scala/dotty/en/first-class-types.org" '(:date (24336 59904) :title "\"First Class\" Types in Scala 3" :crossrefs (((other "Footnotes") . 71944001) ((headline "Footnotes") . 71944001) ((other "Typelevel" "Ops") . 49507209) ((headline "Typelevel" "Ops") . 49507209) ((other "[[(verbose2)][Verbose" "2]]:") . 75505207) ((headline "[[(verbose2)][Verbose" "2]]:") . 75505207) ((other "[[(verbose1)][Verbose" "1]]:") . 243382049) ((headline "[[(verbose1)][Verbose" "1]]:") . 243382049) ((other "Type" "level" "function") . 52973472) ((headline "Type" "level" "function") . 52973472) ((other "First" "Class" "Types") . 70523922) ((headline "First" "Class" "Types") . 70523922)) :index (("Scala!\"First Class\" Types in Scala 3" "/blog/org/scala/dotty/en/first-class-types.org" nil) ("Shapeless!\"First Class\" Types in Scala 3" "/blog/org/scala/dotty/en/first-class-types.org" nil) ("Dotty!\"First Class\" Types in Scala 3" "/blog/org/scala/dotty/en/first-class-types.org" nil) ("Dependent Types!\"First Class\" Types in Scala 3" "/blog/org/scala/dotty/en/first-class-types.org" nil) ("FunctionK!\"First Class\" Types in Scala 3" "/blog/org/scala/dotty/en/first-class-types.org" nil) ("FP!\"First Class\" Types in Scala 3" "/blog/org/scala/dotty/en/first-class-types.org" nil))) org-publish-cache)
(puthash "X02e198f5179d7e4a0644c93abe0e7710a50a717f" '(24858 11634 17067 792000) org-publish-cache)
(puthash "/blog/org/scala/http4s-tutorial.org" '(:date (24422 39808) :title "Http4s x Finagle Tutorial" :crossrefs (((other "Footnotes") . 91439113) ((headline "Footnotes") . 91439113) ((other "Package" "and" "deploy") . 244626414) ((headline "Package" "and" "deploy") . 244626414) ((other "Test") . 60822213) ((headline "Test") . 60822213) ((other "Why" "Resource" "of" "resource") . 216061405) ((headline "Why" "Resource" "of" "resource") . 216061405) ((other "Prometheus" "Metrics") . 196748454) ((headline "Prometheus" "Metrics") . 196748454) ((other "Zipkin" "Tracing") . 125635746) ((headline "Zipkin" "Tracing") . 125635746) ((other "Logging") . 220251595) ((headline "Logging") . 220251595) ((other "Tracing" "Metrics" "and" "Logging") . 246030651) ((headline "Tracing" "Metrics" "and" "Logging") . 246030651) ((other "Random" "dad" "joke" "=GET" "/random-joke=") . 62670211) ((headline "Random" "dad" "joke" "=GET" "/random-joke=") . 62670211) ((other "Feature" "Toggle" "=GET" "/joke/:id=") . 161902564) ((headline "Feature" "Toggle" "=GET" "/joke/:id=") . 161902564) ((other "Stream" "some" "jokes" "=GET" "/joke=") . 136330219) ((headline "Stream" "some" "jokes" "=GET" "/joke=") . 136330219) ((other "Save" "a" "joke" "=POST" "/joke=") . 256655534) ((headline "Save" "a" "joke" "=POST" "/joke=") . 256655534) ((other "Data" "migration") . 108398779) ((headline "Data" "migration") . 108398779) ((other "source" "structure") . 62949155) ((headline "source" "structure") . 62949155) ((other "file" "structure") . 28749461) ((headline "file" "structure") . 28749461) ((other "Verify" "your" "environment") . 128906244) ((headline "Verify" "your" "environment") . 128906244) ((other "Creating" "a" "new" "Http4s" "Application") . 195863820) ((headline "Creating" "a" "new" "Http4s" "Application") . 195863820) ((other "for" "Linux(or" "Windows" "WSL)") . 207353337) ((headline "for" "Linux(or" "Windows" "WSL)") . 207353337) ((other "for" "macOS") . 156980129) ((headline "for" "macOS") . 156980129) ((other "Prerequisites") . 237676138) ((headline "Prerequisites") . 237676138) ((other "Get" "Started" "with" "Http4s[fn:-1-2]") . 38628262) ((headline "Get" "Started" "with" "Http4s[fn:-1-2]") . 38628262)) :index nil) org-publish-cache)
(puthash "Xe9c024038f04f7b570a60d7f050fb7d49e41cee1" '(24858 11634 21067 847000) org-publish-cache)
(puthash "/blog/org/patterns-and-practices/functional-devops.org" '(:date (24499 4736) :title "Functional DevOps" :crossrefs (((other "Wrap" "up") . 116182878) ((headline "Wrap" "up") . 116182878) ((other "Dhall") . 165776456) ((headline "Dhall") . 165776456) ((other "Type" "System") . 54429366) ((headline "Type" "System") . 54429366) ((other "Immutable") . 240490292) ((headline "Immutable") . 240490292) ((other "Nix") . 29698447) ((headline "Nix") . 29698447) ((other "nix-shell") . 161541121) ((headline "nix-shell") . 161541121) ((other "Nix's" "only" "assumption") . 141275261) ((headline "Nix's" "only" "assumption") . 141275261) ((other "Immutable" "vs" "Mutable") . 134174850) ((headline "Immutable" "vs" "Mutable") . 134174850) ((other "FP" "takes" "No" "assumptions") . 146894443) ((headline "FP" "takes" "No" "assumptions") . 146894443) ((other "[[https://www.thoughtworks.com/radar#adolescence-of-infrastructure-as-code][Infrastructure" "as" "Code]]") . 79367440) ((headline "[[https://www.thoughtworks.com/radar#adolescence-of-infrastructure-as-code][Infrastructure" "as" "Code]]") . 79367440) ((other "Lock" "everything" "where" "possible") . 245971757) ((headline "Lock" "everything" "where" "possible") . 245971757) ((other "Code" "can" "be" "locked" "by" "commit") . 10239184) ((headline "Code" "can" "be" "locked" "by" "commit") . 10239184) ((other "Functional" "Programming") . 29798781) ((headline "Functional" "Programming") . 29798781) ((other "Is" "this" "OO?") . 240036225) ((headline "Is" "this" "OO?") . 240036225) ((other "FP" "vs" "OO") . 200316223) ((headline "FP" "vs" "OO") . 200316223) ((other "Devops") . 202571775) ((headline "Devops") . 202571775) ((other "Functional" "DevOps") . 211848067) ((headline "Functional" "DevOps") . 211848067)) :index (("FP!Functional DevOps" "/blog/org/patterns-and-practices/functional-devops.org" nil) ("DevOps!Functional DevOps" "/blog/org/patterns-and-practices/functional-devops.org" nil) ("Dhall!Functional DevOps" "/blog/org/patterns-and-practices/functional-devops.org" nil) ("Nix!Functional DevOps" "/blog/org/patterns-and-practices/functional-devops.org" nil))) org-publish-cache)
(puthash "Xa2cbbe587f109040b5db4698add49e3dcd4f3cdc" '(24858 11634 13067 737000) org-publish-cache)
(puthash "/blog/org/scala/dotty/en/type-classes.org" '(:date (24755 11278 983442 403000) :title "Type Classes in Scala 3" :crossrefs (((other "Footnotes") . 30803623) ((headline "Footnotes") . 30803623) ((other "Prelude") . 149344852) ((headline "Prelude") . 149344852) ((other "Extensions") . 35226789) ((headline "Extensions") . 35226789) ((other "Hierarchy") . 3246533) ((headline "Hierarchy") . 3246533) ((other "Implicits") . 89739545) ((headline "Implicits") . 89739545) ((other "using") . 232018046) ((headline "using") . 232018046) ((other "given") . 33529945) ((headline "given") . 33529945)) :index (("Scala!Type Classes in Scala 3" "/blog/org/scala/dotty/en/type-classes.org" nil) ("Dotty!Type Classes in Scala 3" "/blog/org/scala/dotty/en/type-classes.org" nil) ("FP!Type Classes in Scala 3" "/blog/org/scala/dotty/en/type-classes.org" nil))) org-publish-cache)
(puthash "X7401598733285e5239b69799099145b2441ab488" '(24858 11634 17067 792000) org-publish-cache)
(puthash "/blog/org/scala/dotty/en/generic-type-class-derivation.org" '(:date (24855 1920) :title "Generic Type Class Derivation in Scala 3" :crossrefs (((other "Footnotes") . 56642226) ((headline "Footnotes") . 56642226) ((other "Kind" "1" "Type" "Class" "Derivation") . 30071634) ((headline "Kind" "1" "Type" "Class" "Derivation") . 30071634) ((other "Generic" "instance" "of" "=Show[Product]=" "type") . 28437610) ((headline "Generic" "instance" "of" "=Show[Product]=" "type") . 28437610) ((other "Generic" "representation" "of" "=A=") . 13291088) ((headline "Generic" "representation" "of" "=A=") . 13291088) ((other "Kind" "0" "Type" "Class" "Derivation") . 232280244) ((headline "Kind" "0" "Type" "Class" "Derivation") . 232280244)) :index (("Scala!Generic Type Class Derivation in Scala 3" "/blog/org/scala/dotty/en/generic-type-class-derivation.org" nil) ("Dotty!Generic Type Class Derivation in Scala 3" "/blog/org/scala/dotty/en/generic-type-class-derivation.org" nil) ("FP!Generic Type Class Derivation in Scala 3" "/blog/org/scala/dotty/en/generic-type-class-derivation.org" nil))) org-publish-cache)
(puthash "X2df28008790064d2c0591207a45e8477cf2a4677" '(24858 11634 17067 792000) org-publish-cache)
(puthash "/blog/org/devops/write-aws-tool-in-haskell.org" '(:date (24856 22784) :title "Write your AWS DevOps tool in Haskell for Gread Good" :crossrefs (((other "Footnotes") . 59164434) ((headline "Footnotes") . 59164434) ((other "Query" "a" "DynamoDB" "table") . 219573929) ((headline "Query" "a" "DynamoDB" "table") . 219573929) ((other "Go" "SDK") . 14502384) ((headline "Go" "SDK") . 14502384) ((other "Haskell" "Amazonka") . 208191591) ((headline "Haskell" "Amazonka") . 208191591) ((other "AWS" "CLI[fn:6]") . 259993271) ((headline "AWS" "CLI[fn:6]") . 259993271) ((other "Go" "SDK" "[fn:2]") . 258024792) ((headline "Go" "SDK" "[fn:2]") . 258024792) ((other "Haskell" "Amazonka") . 162981651) ((headline "Haskell" "Amazonka") . 162981651) ((other "AWS" "CLI") . 163059994) ((headline "AWS" "CLI") . 163059994) ((other "List" "_ALL" "FILES_" "in" "a" "bucket") . 107630548) ((headline "List" "_ALL" "FILES_" "in" "a" "bucket") . 107630548) ((other "List" "files" "in" "one" "S3" "bucket") . 101147650) ((headline "List" "files" "in" "one" "S3" "bucket") . 101147650) ((other "Go" "SDK" "[fn:3]") . 39819490) ((headline "Go" "SDK" "[fn:3]") . 39819490) ((other "Haskell" "Amazonka[fn:1]") . 59412814) ((headline "Haskell" "Amazonka[fn:1]") . 59412814) ((other "AWS" "CLI" "[fn:4]") . 194884521) ((headline "AWS" "CLI" "[fn:4]") . 194884521)) :index (("FP!Write your AWS DevOps tool in Haskell for Great Good" "/blog/org/devops/write-aws-tool-in-haskell.org" nil) ("DevOps!Write your AWS DevOps tool in Haskell for Great Good" "/blog/org/devops/write-aws-tool-in-haskell.org" nil) ("Haskell!Write your AWS DevOps tool in Haskell for Great Good" "/blog/org/devops/write-aws-tool-in-haskell.org" nil))) org-publish-cache)
(puthash "X4bdae65a4ff1877eb440c705fe7fb30b33d5a624" '(24858 11633 861065 646000) org-publish-cache)
