(setq org-publish-cache (make-hash-table :test 'equal :weakness nil :size 100))
(puthash ":project:" "blog-notes" org-publish-cache)
(puthash ":cache-file:" "/root/orgpress/public/.org-timestamps/blog-notes.cache" org-publish-cache)
(puthash "/root/orgpress/org/javascript/clojure-essence-in-javascript-macro.org" '(:date (21884 50176) :title "JavaScript玩转Clojure大法之 - Macro (1)" :crossrefs (((other "Footnotes") . 90892205) ((headline "Footnotes") . 90892205) ((other "Recap") . 35672894) ((headline "Recap") . 35672894) ((other "case" "macro") . 67139587) ((headline "case" "macro") . 67139587) ((other "Rule" "macro") . 113688989) ((headline "Rule" "macro") . 113688989) ((other "Sweet.js") . 250695502) ((headline "Sweet.js") . 250695502) ((other "Macro") . 129422355) ((headline "Macro") . 129422355)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/understand-prototype.org" '(:date (21909 53376) :title "理解JavaScript的原型链和继承" :crossrefs (((other "Footnotes") . 41681854) ((headline "Footnotes") . 41681854) ((other "Bonus" "继承") . 81186820) ((headline "Bonus" "继承") . 81186820) ((other "也没什么卵用得" "contructor") . 200816713) ((headline "也没什么卵用得" "contructor") . 200816713) ((other "=__proto__=" "才是原型链") . 132644594) ((headline "=__proto__=" "才是原型链") . 132644594) ((other "prototype属性是原型链吗？") . 159384000) ((headline "prototype属性是原型链吗？") . 159384000) ((other "instanceof" "引发的问题") . 220053673) ((headline "instanceof" "引发的问题") . 220053673)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/clojure-essence-in-javascript-macro-2.org" '(:date (21895 20480) :title "自制语言初试 - 入lang" :crossrefs (((other "在哪里才能买到呢") . 34530973) ((headline "在哪里才能买到呢") . 34530973) ((other "Infix" "macro") . 106485749) ((headline "Infix" "macro") . 106485749) ((other "Existential" "?") . 122477662) ((headline "Existential" "?") . 122477662) ((other "looprecur") . 143451064) ((headline "looprecur") . 143451064) ((other "destruture" "array") . 127031105) ((headline "destruture" "array") . 127031105) ((other "block" "scope" "binding") . 76968875) ((headline "block" "scope" "binding") . 76968875) ((other "Let") . 111298592) ((headline "Let") . 111298592) ((other "lambda") . 137291638) ((headline "lambda") . 137291638) ((other "Ru-lang," "The" "First" "Attampt") . 224053834) ((headline "Ru-lang," "The" "First" "Attampt") . 224053834) ((other "那macro呢") . 110416281) ((headline "那macro呢") . 110416281) ((other "ClojureScript的数据结构移植") . 29415582) ((headline "ClojureScript的数据结构移植") . 29415582) ((other "ClojureScript怎么就不好了") . 24345144) ((headline "ClojureScript怎么就不好了") . 24345144) ((other "Rationale(为毛要整一门语言)") . 192891379) ((headline "Rationale(为毛要整一门语言)") . 192891379)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/essential-ecmascript6.org" '(:date (21771 25344) :title "Essential EcmaScript 6" :crossrefs (((other "Generator") . 80354867) ((headline "Generator") . 80354867) ((other "Promises") . 193429590) ((headline "Promises") . 193429590) ((other "Class") . 63836882) ((headline "Class") . 63836882) ((other "Template" "Strings") . 187527293) ((headline "Template" "Strings") . 187527293) ((other "Destructuring") . 99436079) ((headline "Destructuring") . 99436079) ((other "Proxy") . 143654484) ((headline "Proxy") . 143654484) ((other "Let") . 210612169) ((headline "Let") . 210612169) ((other "Arrow" "Function") . 173933294) ((headline "Arrow" "Function") . 173933294) ((other "Tail" "Calling") . 17365401) ((headline "Tail" "Calling") . 17365401)) :index (("Arrow Function" "/root/orgpress/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("lambda" "/root/orgpress/org/javascript/essential-ecmascript6.org" (name . "Arrow Function")) ("Destructuring" "/root/orgpress/org/javascript/essential-ecmascript6.org" (name . "Destructuring")) ("tail recursive" "/root/orgpress/org/javascript/essential-ecmascript6.org" (name . "Tail Calling")))) org-publish-cache)
(puthash "/root/orgpress/org/javascript/react-cookbook-mini.org" '(:date (22078 36992) :title "A Compact React Cookbook" :crossrefs (((other "How" "to" "Profile" "Component" "Perfomance" "/" "如何提升效率") . 236137855) ((headline "How" "to" "Profile" "Component" "Perfomance" "/" "如何提升效率") . 236137855) ((other "[[https://facebook.github.io/react/docs/advanced-performance.html#shouldcomponentupdate-in-action][shouldComponentUpdate]]") . 207272885) ((headline "[[https://facebook.github.io/react/docs/advanced-performance.html#shouldcomponentupdate-in-action][shouldComponentUpdate]]") . 207272885) ((other "PureRenderMixin") . 236937103) ((headline "PureRenderMixin") . 236937103) ((other "[[https://facebook.github.io/react/docs/perf.html][react" "profile]]") . 188409514) ((headline "[[https://facebook.github.io/react/docs/perf.html][react" "profile]]") . 188409514) ((other "What's" "these" "Warnings" "/" "这些黄黄的是神马") . 113452623) ((headline "What's" "these" "Warnings" "/" "这些黄黄的是神马") . 113452623) ((other "When" "should" "I" "use" "\"key\"" "/" "什么时候该用" "key") . 30909644) ((headline "When" "should" "I" "use" "\"key\"" "/" "什么时候该用" "key") . 30909644) ((other "How" "to" "communicate" "between" "two" "components" "that" "don't" "have" "a" "parent-child" "relationship[fn:3]" "/" "不是父子关系的" "component" "怎么交互") . 54096121) ((headline "How" "to" "communicate" "between" "two" "components" "that" "don't" "have" "a" "parent-child" "relationship[fn:3]" "/" "不是父子关系的" "component" "怎么交互") . 54096121) ((other "应用级别" "state") . 111420825) ((headline "应用级别" "state") . 111420825) ((other "router") . 204889358) ((headline "router") . 204889358) ((other "flux") . 250212679) ((headline "flux") . 250212679) ((other "store") . 234604826) ((headline "store") . 234604826) ((other "dispatcher") . 204720392) ((headline "dispatcher") . 204720392) ((other "event") . 107301971) ((headline "event") . 107301971) ((other "What" "about" "Router" "/" "router" "怎么办") . 72606265) ((headline "What" "about" "Router" "/" "router" "怎么办") . 72606265) ((other "[[https://github.com/rackt/react-router][react" "router]]") . 124503205) ((headline "[[https://github.com/rackt/react-router][react" "router]]") . 124503205) ((other "[[https://github.com/flatiron/director][direactor]]") . 112766862) ((headline "[[https://github.com/flatiron/director][direactor]]") . 112766862) ((other "server" "side") . 153533127) ((headline "server" "side") . 153533127) ((other "client" "side") . 105233241) ((headline "client" "side") . 105233241) ((other "What" "about" "Data" "Fetching" "/" "只有" "V" "的话，数据" "M" "呢") . 78103517) ((headline "What" "about" "Data" "Fetching" "/" "只有" "V" "的话，数据" "M" "呢") . 78103517) ((other "[[https://github.com/netflix/falcor][falcor]]") . 36189753) ((headline "[[https://github.com/netflix/falcor][falcor]]") . 36189753) ((other "[[https://facebook.github.io/relay/][relay/graphql]]") . 135888212) ((headline "[[https://facebook.github.io/relay/][relay/graphql]]") . 135888212) ((other "just" "[[https://github.com/cujojs/rest][rest]]") . 188572892) ((headline "just" "[[https://github.com/cujojs/rest][rest]]") . 188572892) ((other "How" "should" "I" "thinking" "in" "react" "way" "/" "如何以" "React" "的方式解决问题") . 180003040) ((headline "How" "should" "I" "thinking" "in" "react" "way" "/" "如何以" "React" "的方式解决问题") . 180003040) ((other "Modular" "and" "Components") . 39566618) ((headline "Modular" "and" "Components") . 39566618) ((other "webpack") . 140893853) ((headline "webpack") . 140893853) ((other "browserify") . 124045863) ((headline "browserify") . 124045863) ((other "How" "to" "do" "Unit" "test" "React" "project" "/" "如何单元测试") . 43087301) ((headline "How" "to" "do" "Unit" "test" "React" "project" "/" "如何单元测试") . 43087301) ((other "mocha") . 243628349) ((headline "mocha") . 243628349) ((other "jasmine") . 207202527) ((headline "jasmine") . 207202527) ((other "[[http://facebook.github.io/jest/][Jest]]") . 122992551) ((headline "[[http://facebook.github.io/jest/][Jest]]") . 122992551) ((other "Why" "Immutable" "/" "为毛要不可变") . 110247208) ((headline "Why" "Immutable" "/" "为毛要不可变") . 110247208) ((other "让你的数据结构" "immutable" "的工具们") . 161718851) ((headline "让你的数据结构" "immutable" "的工具们") . 161718851) ((other "[[https://facebook.github.io/immutable-js/][Immutable.js]]") . 254219540) ((headline "[[https://facebook.github.io/immutable-js/][Immutable.js]]") . 254219540) ((other "[[https://github.com/swannodette/mori][mori]]") . 35099648) ((headline "[[https://github.com/swannodette/mori][mori]]") . 35099648) ((other "[[http://facebook.github.io/react/docs/update.html][Immutablility" "helper]]") . 238961915) ((headline "[[http://facebook.github.io/react/docs/update.html][Immutablility" "helper]]") . 238961915) ((other "Class") . 113225773) ((headline "Class") . 113225773) ((other "状态") . 30699912) ((headline "状态") . 30699912) ((other "What's" "Virtual" "DOM," "why" "should" "we" "care" "/" "为毛要用" "Vitual" "Dom") . 231149102) ((headline "What's" "Virtual" "DOM," "why" "should" "we" "care" "/" "为毛要用" "Vitual" "Dom") . 231149102) ((other "Virtual" "DOM" "（Immutable）") . 27167164) ((headline "Virtual" "DOM" "（Immutable）") . 27167164) ((other "以前是如何操作" "DOM" "的" "（Mutable）") . 188327508) ((headline "以前是如何操作" "DOM" "的" "（Mutable）") . 188327508) ((other "Why" "not" "2" "way" "binding/为毛不用双向绑定") . 174226453) ((headline "Why" "not" "2" "way" "binding/为毛不用双向绑定") . 174226453) ((other "单向有什么好") . 88409886) ((headline "单向有什么好") . 88409886) ((other "双向有什么不好[fn:1]") . 266908497) ((headline "双向有什么不好[fn:1]") . 266908497) ((other "单向绑定") . 246697488) ((headline "单向绑定") . 246697488) ((other "双向绑定") . 250553086) ((headline "双向绑定") . 250553086)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/react-transdux-the-clojure-approach-of-flux.org" '(:date (22097 1408) :title "看我们3天 hackday 都干了些什么" :crossrefs (((other "Footnotes") . 87309160) ((headline "Footnotes") . 87309160) ((other "2." "定义你的" "component" "能干什么？你的状态能怎么变？") . 50510175) ((headline "2." "定义你的" "component" "能干什么？你的状态能怎么变？") . 50510175) ((other "1." "把你的" "component" "包到" "Transdux" "里") . 214931624) ((headline "1." "把你的" "component" "包到" "Transdux" "里") . 214931624) ((other "Recap") . 240673082) ((headline "Recap") . 240673082) ((other "Day" "2" "-" "Show" "Case") . 244646726) ((headline "Day" "2" "-" "Show" "Case") . 244646726) ((other "bindActions") . 70654687) ((headline "bindActions") . 70654687) ((other "分辨不同的" "ReactClass") . 23321606) ((headline "分辨不同的" "ReactClass") . 23321606) ((other "传递" "inputChan" "和" "action" "的" "publication") . 207398521) ((headline "传递" "inputChan" "和" "action" "的" "publication") . 207398521) ((other "提取框架") . 115103519) ((headline "提取框架") . 115103519) ((other "初版，只实现一个功能") . 74756349) ((headline "初版，只实现一个功能") . 74756349) ((other "Day" "1" "-" "Hack" "Hack" "Hack...") . 161900195) ((headline "Day" "1" "-" "Hack" "Hack" "Hack...") . 161900195) ((other "Day" "0" "-" "Inception") . 64818176) ((headline "Day" "0" "-" "Inception") . 64818176) ((other "Atom") . 19849474) ((headline "Atom") . 19849474) ((other "Transducers") . 150577642) ((headline "Transducers") . 150577642) ((other "PubSub") . 197622888) ((headline "PubSub") . 197622888) ((other "Channels") . 34717517) ((headline "Channels") . 34717517) ((other "Clojure" "Avengers" "来相助") . 103454936) ((headline "Clojure" "Avengers" "来相助") . 103454936) ((other "redux") . 136814597) ((headline "redux") . 136814597) ((other "flux") . 132015076) ((headline "flux") . 132015076) ((other "Rationale") . 102739978) ((headline "Rationale") . 102739978)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/clojure-essence-in-javascript-transducer.org" '(:date (21846 34944) :title "JavaScript玩转Clojure大法之Transducer" :crossrefs (((other "Footnotes") . 64963189) ((headline "Footnotes") . 64963189) ((other "完整例子") . 242887513) ((headline "完整例子") . 242887513) ((other "Is" "it" "Curry?") . 139414429) ((headline "Is" "it" "Curry?") . 139414429) ((other "Transducer") . 142918681) ((headline "Transducer") . 142918681) ((other "Reducible") . 57340360) ((headline "Reducible") . 57340360) ((other "[[https://clojure.org/reducers][Reducer]]") . 214961908) ((headline "[[https://clojure.org/reducers][Reducer]]") . 214961908) ((other "transform") . 128358051) ((headline "transform") . 128358051) ((other "Reducer") . 216838704) ((headline "Reducer") . 216838704)) :index (("reducer" "/root/orgpress/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducer")) ("xform" "/root/orgpress/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "transform")) ("reducible" "/root/orgpress/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Reducible")) ("transducer" "/root/orgpress/org/javascript/clojure-essence-in-javascript-transducer.org" (name . "Transducer")))) org-publish-cache)
(puthash "/root/orgpress/org/javascript/ru-lang-second-attampt.org" '(:date (21967 53888) :title "入语言第二试: readtable 与 core.async" :crossrefs (((other "core.async") . 129106700) ((headline "core.async") . 129106700) ((other "Readtable") . 181282675) ((headline "Readtable") . 181282675)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/clojure-essence-in-javascript-trampoline.org" '(:date (21864 64896) :title "JavaScript玩转Clojure大法之 - Trampoline" :crossrefs (((other "Trampoline") . 212068170) ((headline "Trampoline") . 212068170) ((other "DFA") . 78384993) ((headline "DFA") . 78384993) ((other "尾递归(tail" "recursion)") . 257348378) ((headline "尾递归(tail" "recursion)") . 257348378) ((other "相互递归(mutual" "recursion)") . 21117882) ((headline "相互递归(mutual" "recursion)") . 21117882)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/reactive-programming.org" '(:date (22025 54400) :title "Monadic Reactive Programming in JavaScript" :crossrefs (((other "Monad") . 135036221) ((headline "Monad") . 135036221) ((other "Applicative") . 181372947) ((headline "Applicative") . 181372947) ((other "Functor") . 128651929) ((headline "Functor") . 128651929) ((other "Stream") . 113559588) ((headline "Stream") . 113559588)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/functional-javascript.org" '(:date (21842 37888) :title "Functional JavaScript Mini Book" :crossrefs (((other "Monad") . 145626615) ((headline "Monad") . 145626615) ((other "Monad" "在" "JavaScript" "中的应用") . 149193717) ((headline "Monad" "在" "JavaScript" "中的应用") . 149193717) ((other "到底有什么用呢," "Monad") . 222322648) ((headline "到底有什么用呢," "Monad") . 222322648) ((other "走钢索") . 263957536) ((headline "走钢索") . 263957536) ((other "现在来试试用" "Either") . 121135130) ((headline "现在来试试用" "Either") . 121135130) ((other "一般解法") . 104937723) ((headline "一般解法") . 104937723) ((other "Either") . 106041195) ((headline "Either") . 106041195) ((other "Functor") . 245635546) ((headline "Functor") . 245635546) ((other "Functor" "in" "JavaScript") . 257553506) ((headline "Functor" "in" "JavaScript") . 257553506) ((other "举个栗子🌰") . 209112288) ((headline "举个栗子🌰") . 209112288) ((other "Functor") . 48835709) ((headline "Functor") . 48835709) ((other "Transducers") . 34704227) ((headline "Transducers") . 34704227) ((other "完整例子") . 143124943) ((headline "完整例子") . 143124943) ((other "Is" "it" "Curry?") . 128177839) ((headline "Is" "it" "Curry?") . 128177839) ((other "Transducer") . 222135474) ((headline "Transducer") . 222135474) ((other "Reducer") . 21685456) ((headline "Reducer") . 21685456) ((other "[[https://clojure.org/reducers][Reducer]]") . 15723125) ((headline "[[https://clojure.org/reducers][Reducer]]") . 15723125) ((other "Reducible") . 36187855) ((headline "Reducible") . 36187855) ((other "transform") . 143377364) ((headline "transform") . 143377364) ((other "高阶函数(Higher-order" "function)") . 48450936) ((headline "高阶函数(Higher-order" "function)") . 48450936) ((other "函数组合" "function" "composition") . 61392521) ((headline "函数组合" "function" "composition") . 61392521) ((other "pipe") . 174360007) ((headline "pipe") . 174360007) ((other "Compose") . 94403476) ((headline "Compose") . 94403476) ((other "柯里化" "currying") . 90800456) ((headline "柯里化" "currying") . 90800456) ((other "自动柯里化") . 266334754) ((headline "自动柯里化") . 266334754) ((other "柯里化函数接口") . 24073008) ((headline "柯里化函数接口") . 24073008) ((other "我们来看一个问题") . 125391179) ((headline "我们来看一个问题") . 125391179) ((other "所有数字乘以2," "再重构试试看") . 214218809) ((headline "所有数字乘以2," "再重构试试看") . 214218809) ((other "现在我要其中所有数字加1," "然后在连接") . 44622481) ((headline "现在我要其中所有数字加1," "然后在连接") . 44622481) ((other "写一个函数," "可以连接字符数组," "如" "f(['1','2'])" "=>" "'12'") . 72162316) ((headline "写一个函数," "可以连接字符数组," "如" "f(['1','2'])" "=>" "'12'") . 72162316) ((other "Higher-order" "function") . 204720657) ((headline "Higher-order" "function") . 204720657) ((other "函数作为返回值") . 158041800) ((headline "函数作为返回值") . 158041800) ((other "函数作为参数") . 36791233) ((headline "函数作为参数") . 36791233) ((other "Lambda") . 248129517) ((headline "Lambda") . 248129517) ((other "JavaScript的匿名函数(anonymous" "function)") . 205007863) ((headline "JavaScript的匿名函数(anonymous" "function)") . 205007863) ((other "使用匿名函数") . 8327364) ((headline "使用匿名函数") . 8327364) ((other "创建一个匿名函数") . 39337651) ((headline "创建一个匿名函数") . 39337651) ((other "箭头函数(arrow" "function)") . 218088472) ((headline "箭头函数(arrow" "function)") . 218088472) ((other "Lexical" "=this=") . 187552083) ((headline "Lexical" "=this=") . 187552083) ((other "为什么要用箭头函数") . 85264224) ((headline "为什么要用箭头函数") . 85264224) ((other "声明一个箭头函数") . 165514708) ((headline "声明一个箭头函数") . 165514708) ((other "Preface") . 261508574) ((headline "Preface") . 261508574)) :index (("柯里化" "/root/orgpress/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("currying" "/root/orgpress/org/javascript/functional-javascript.org" (name . "高阶函数(Higher-order function)")) ("reducer" "/root/orgpress/org/javascript/functional-javascript.org" (name . "Reducer")) ("xform" "/root/orgpress/org/javascript/functional-javascript.org" (name . "transform")) ("reducible" "/root/orgpress/org/javascript/functional-javascript.org" (name . "Reducible")) ("transducer" "/root/orgpress/org/javascript/functional-javascript.org" (name . "Transducer")))) org-publish-cache)
(puthash "/root/orgpress/org/javascript/rethinking-react-dataflow.org" '(:date (22228 56192) :title "Rethinking React Dataflow" :crossrefs (((other "Model") . 244445216) ((headline "Model") . 244445216) ((other "继续" "flatMap" "结果到流上") . 42819593) ((headline "继续" "flatMap" "结果到流上") . 42819593) ((other "发送" "API" "请求") . 221603446) ((headline "发送" "API" "请求") . 221603446) ((other "Debounce") . 185365024) ((headline "Debounce") . 185365024) ((other "一个简单的" "Pure" "Component") . 216719244) ((headline "一个简单的" "Pure" "Component") . 216719244) ((other "🌰") . 208213436) ((headline "🌰") . 208213436) ((other "Monadic") . 151668459) ((headline "Monadic") . 151668459) ((other "Reactive") . 210607713) ((headline "Reactive") . 210607713)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/github/using-dotfiles-and-stow-to-manage-your-dotfiles.org" '(:date (22065 24960) :title "使用 dotfiles 和 stow 管理你的 dotfiles" :crossrefs (((other "㊙" "Sensitive" "dotfiles") . 257266047) ((headline "㊙" "Sensitive" "dotfiles") . 257266047) ((other "submodule" "vs" "subtree") . 204740629) ((headline "submodule" "vs" "subtree") . 204740629) ((other "push" "to" "github") . 230430406) ((headline "push" "to" "github") . 230430406) ((other "stow" "目录") . 210918202) ((headline "stow" "目录") . 210918202) ((other "stow" "文件") . 109463599) ((headline "stow" "文件") . 109463599) ((other "使用" "stow" "管理" "symlink") . 113299763) ((headline "使用" "stow" "管理" "symlink") . 113299763) ((other "TLDR;") . 3200945) ((headline "TLDR;") . 3200945)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/javascript/clojure-core.async-essence-in-native-javascript.org" '(:date (21822 52608) :title "Clojure 风格的 JavaScript 并发编程" :crossrefs (((other "Footnotes") . 137926794) ((headline "Footnotes") . 137926794) ((other "JavaScript" "版本" "的" "CSP") . 230900058) ((headline "JavaScript" "版本" "的" "CSP") . 230900058) ((other "put" ">!") . 194863825) ((headline "put" ">!") . 194863825) ((other "take" "<!") . 186192227) ((headline "take" "<!") . 186192227) ((other "timeout") . 118846871) ((headline "timeout") . 118846871) ((other "Goroutines" "in" "JavaScript") . 250446843) ((headline "Goroutines" "in" "JavaScript") . 250446843) ((other "Generator") . 182883710) ((headline "Generator") . 182883710) ((other "CSP" "in" "JavaScript[fn:2]") . 150700698) ((headline "CSP" "in" "JavaScript[fn:2]") . 150700698) ((other "CSP," "Channel," "Goroutines") . 198235617) ((headline "CSP," "Channel," "Goroutines") . 198235617) ((other "Event" "loop") . 12401292) ((headline "Event" "loop") . 12401292) ((other "CSP") . 8045012) ((headline "CSP") . 8045012) ((other "异步与多线程") . 224292219) ((headline "异步与多线程") . 224292219) ((other "什么是并发") . 211417177) ((headline "什么是并发") . 211417177) ((other "Communicating" "Sequential" "Processes") . 81177953) ((headline "Communicating" "Sequential" "Processes") . 81177953) ((other "TL;DR" "SLIDES") . 250959728) ((headline "TL;DR" "SLIDES") . 250959728)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/make Bamboo support Github Pull Request with Status API.org" '(:date (21731 54784) :title "make Bamboo support Github Pull Request with Status API" :crossrefs (((other "Footnotes") . 229187329) ((headline "Footnotes") . 229187329) ((other "stop" "build" "if" "PR") . 81979346) ((headline "stop" "build" "if" "PR") . 81979346) ((other "notify" "github" "status") . 376291) ((headline "notify" "github" "status") . 376291) ((other "checkout" "PR" "code") . 213931203) ((headline "checkout" "PR" "code") . 213931203) ((other "config" "Bamboo" "plan") . 82709416) ((headline "config" "Bamboo" "plan") . 82709416) ((other "but" "what" "about" "the" "custom" "variables") . 169232772) ((headline "but" "what" "about" "the" "custom" "variables") . 169232772) ((other "github" "webhook") . 159179018) ((headline "github" "webhook") . 159179018) ((other "bamboo" "magic") . 85394402) ((headline "bamboo" "magic") . 85394402) ((other "what's" "wrong" "with" "Bamboo") . 7149155) ((headline "what's" "wrong" "with" "Bamboo") . 7149155)) :index (("bamboo" "/root/orgpress/org/make Bamboo support Github Pull Request with Status API.org" (name . "what's wrong with Bamboo")) ("github!webhook" "/root/orgpress/org/make Bamboo support Github Pull Request with Status API.org" (name . "github webhook")))) org-publish-cache)
(puthash "/root/orgpress/org/how-functional-programming-and-flink-will-save-your-ass-from-big-data.org" '(:date (23498 28672) :title "使用 Flink 解救多线程 Scala 应用" :crossrefs (((other "Footnotes") . 154281712) ((headline "Footnotes") . 154281712) ((other "Flink" "Cluster" "on" "K8s") . 146363730) ((headline "Flink" "Cluster" "on" "K8s") . 146363730) ((other "Flink" "Cluster" "in" "Docker") . 81275880) ((headline "Flink" "Cluster" "in" "Docker") . 81275880) ((other "Flink" "Scala") . 260916859) ((headline "Flink" "Scala") . 260916859) ((other "Scala") . 41302801) ((headline "Scala") . 41302801) ((other "问题") . 240659355) ((headline "问题") . 240659355)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/jichao.ouyang.org" '(:date (7745 23680) :title "About Me" :crossrefs (((other "Talks") . 239636008) ((headline "Talks") . 239636008) ((other "[[http://git.io/why-curry-helps][Why" "curry" "helps]]") . 235695210) ((headline "[[http://git.io/why-curry-helps][Why" "curry" "helps]]") . 235695210) ((other "[[http://git.io/js-csp][JavaScript并发" "与" "core.async]]") . 189468964) ((headline "[[http://git.io/js-csp][JavaScript并发" "与" "core.async]]") . 189468964) ((other "[[https://www.icloud.com/keynote/AwBUCAESEAdZO1i1w_FOM7bcc32s_-saKSNGkgh098jFV4ORqDf8BTBZ7eVCJjSBMtdPflzOJzzwvNC4GzME3bkEMCUCAQEEIM4xb9-JzzQWp20MKTFuTvCNxWcKsltpmOLy_I9InjAJ#learn%252C_write%252C_publish][Learn," "Write," "Publish]]") . 201221530) ((headline "[[https://www.icloud.com/keynote/AwBUCAESEAdZO1i1w_FOM7bcc32s_-saKSNGkgh098jFV4ORqDf8BTBZ7eVCJjSBMtdPflzOJzzwvNC4GzME3bkEMCUCAQEEIM4xb9-JzzQWp20MKTFuTvCNxWcKsltpmOLy_I9InjAJ#learn%252C_write%252C_publish][Learn," "Write," "Publish]]") . 201221530) ((other "[[https://gistdeck.github.com/jcouyang/03121932d18eba44088e][理解原型链和继承]]") . 110557023) ((headline "[[https://gistdeck.github.com/jcouyang/03121932d18eba44088e][理解原型链和继承]]") . 110557023) ((other "[[https://blog.oyanglul.us/javascript/practical-monads.html][Practical" "Monads]]") . 35147136) ((headline "[[https://blog.oyanglul.us/javascript/practical-monads.html][Practical" "Monads]]") . 35147136) ((other "[[https://blog.oyanglul.us/slides/functional-ruby.html][Functional" "Ruby]]") . 164723315) ((headline "[[https://blog.oyanglul.us/slides/functional-ruby.html][Functional" "Ruby]]") . 164723315) ((other "[[https://blog.oyanglul.us/slides/essential-ecmascript-2017.html][Essential" "EcmaScript" "2017]]") . 87000384) ((headline "[[https://blog.oyanglul.us/slides/essential-ecmascript-2017.html][Essential" "EcmaScript" "2017]]") . 87000384) ((other "[[https://gistdeck.github.io/jcouyang/4ee7d7e141bc5c4b42fae19dbf86d39d#1][Typed" "Spreadsheet" "Programming" "in" "Scala.js]]") . 59816668) ((headline "[[https://gistdeck.github.io/jcouyang/4ee7d7e141bc5c4b42fae19dbf86d39d#1][Typed" "Spreadsheet" "Programming" "in" "Scala.js]]") . 59816668) ((other "[[https://gistdeck.github.io/jcouyang/8f04fbfe74f7be8bc3557736a1f6f531][Pure" "FP" "Micro" "Service" "with" "Free" "Monad" "and" "Finch]]") . 41309107) ((headline "[[https://gistdeck.github.io/jcouyang/8f04fbfe74f7be8bc3557736a1f6f531][Pure" "FP" "Micro" "Service" "with" "Free" "Monad" "and" "Finch]]") . 41309107) ((other "[[https://paper.dropbox.com/doc/Functional-Programming-Design-Pattern-IbUWMHezWm7DVxLFWQcBi][Functional" "Programming" "\"Design" "Pattern\"]]") . 98800063) ((headline "[[https://paper.dropbox.com/doc/Functional-Programming-Design-Pattern-IbUWMHezWm7DVxLFWQcBi][Functional" "Programming" "\"Design" "Pattern\"]]") . 98800063) ((other "Projects") . 128421958) ((headline "Projects") . 128421958) ((other "Books") . 50368861) ((headline "Books") . 50368861)) :index (("Jichao Ouyang!About Me" "/root/orgpress/org/jichao.ouyang.org" nil))) org-publish-cache)
(puthash "/root/orgpress/org/xreact/typeclasses-in-typescript.org" '(:date (22963 12032) :title "Type Classes in TypeScript" :crossrefs (((other "Apply") . 177867001) ((headline "Apply") . 177867001) ((other "Cartesian") . 35726040) ((headline "Cartesian") . 35726040) ((other "Reflect" "Metadata") . 115151103) ((headline "Reflect" "Metadata") . 115151103) ((other "多态") . 84006171) ((headline "多态") . 84006171) ((other "Higher" "Kind" "Type") . 11672852) ((headline "Higher" "Kind" "Type") . 11672852) ((other "Functor") . 233406512) ((headline "Functor") . 233406512)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/xreact/fun-with-fantasy.org" '(:date (22963 12032) :title "xReact Fantasy" :crossrefs (((other "小结") . 102460456) ((headline "小结") . 102460456) ((other "Asynchronous") . 164681712) ((headline "Asynchronous") . 164681712) ((other "多个参数") . 73476644) ((headline "多个参数") . 73476644) ((other "Counter" "例子") . 180958809) ((headline "Counter" "例子") . 180958809) ((other "render") . 134470641) ((headline "render") . 134470641) ((other "Component") . 3503581) ((headline "Component") . 3503581) ((other "View") . 229169625) ((headline "View") . 229169625) ((other "Transform") . 22066509) ((headline "Transform") . 22066509)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/scala/finch-vs-http4s.org" '(:date (23566 65024) :title "Finch vs Http4s, which is FPer" :crossrefs (((other "Http4s") . 9745640) ((headline "Http4s") . 9745640) ((other "joy" "of" "FP:" "🍎" "🍎" "🍎" "🍎" "🍎") . 31858258) ((headline "joy" "of" "FP:" "🍎" "🍎" "🍎" "🍎" "🍎") . 31858258) ((other "extensible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 56309504) ((headline "extensible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 56309504) ((other "composible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 185601643) ((headline "composible:" "🍎" "🍎" "🍎" "🍎" "🍎") . 185601643) ((other "Finch") . 138295402) ((headline "Finch") . 138295402) ((other "joy" "of" "FP:" "🍎" "🍎" "🍎") . 132413271) ((headline "joy" "of" "FP:" "🍎" "🍎" "🍎") . 132413271) ((other "extensible:" "🍎" "🍎") . 139219010) ((headline "extensible:" "🍎" "🍎") . 139219010) ((other "composible:" "🍎" "🍎" "🍎" "🍎") . 144271521) ((headline "composible:" "🍎" "🍎" "🍎" "🍎") . 144271521)) :index (("Scala!Finch vs Http4s, which is FPer" "/root/orgpress/org/scala/finch-vs-http4s.org" nil) ("Finch!Finch vs Http4s, which is FPer" "/root/orgpress/org/scala/finch-vs-http4s.org" nil) ("Http4s!Finch vs Http4s, which is FPer" "/root/orgpress/org/scala/finch-vs-http4s.org" nil))) org-publish-cache)
(puthash "/root/orgpress/org/shutting-down-gulugulu.org" '(:date (23520 55680) :title "关闭 gulugulu 弹幕" :crossrefs nil :index nil) org-publish-cache)
(puthash "/root/orgpress/org/scala/3-layer-cake.org" '(:date (23704 6656) :title "3 Layer Scala Cake" :crossrefs (((other "Footnotes") . 72810546) ((headline "Footnotes") . 72810546) ((other) . 8093918) ((headline) . 8093918) ((other "Free" "+" "MTL" "+" "ReaderT") . 160111154) ((headline "Free" "+" "MTL" "+" "ReaderT") . 160111154) ((other "ReaderT" "+" "MTL") . 175028424) ((headline "ReaderT" "+" "MTL") . 175028424) ((other "Recap") . 87088647) ((headline "Recap") . 87088647) ((other "Layer" "1:" "ReaderT") . 152621408) ((headline "Layer" "1:" "ReaderT") . 152621408) ((other "Layer" "2:" "MTL" "+" "Interpreter") . 151206369) ((headline "Layer" "2:" "MTL" "+" "Interpreter") . 151206369) ((other "Layer" "3:" "Business" "(Free)") . 118244958) ((headline "Layer" "3:" "Business" "(Free)") . 118244958) ((other "ReaderT" "+" "MTL" "+" "Free") . 251325103) ((headline "ReaderT" "+" "MTL" "+" "Free") . 251325103) ((other "Free" "Monad") . 154751138) ((headline "Free" "Monad") . 154751138) ((other "MTL") . 26519596) ((headline "MTL") . 26519596) ((other "The" "Needs" "of" "State") . 161426711) ((headline "The" "Needs" "of" "State") . 161426711) ((other "3" "Layer" "Cake") . 14541989) ((headline "3" "Layer" "Cake") . 14541989) ((other "Refactor") . 153862288) ((headline "Refactor") . 153862288) ((other "*Tagless" "Final*" "is" "nothing" "but" "a" "fancy" "name" "of" "*ReaderT*") . 268331434) ((headline "*Tagless" "Final*" "is" "nothing" "but" "a" "fancy" "name" "of" "*ReaderT*") . 268331434) ((other "ReaderT") . 202542982) ((headline "ReaderT") . 202542982) ((other "IO") . 149820942) ((headline "IO") . 149820942) ((other "Imperative") . 231175948) ((headline "Imperative") . 231175948) ((other "Retro") . 36296101) ((headline "Retro") . 36296101) ((other "Take" "2:" "ReaderT" "Pattern") . 130251932) ((headline "Take" "2:" "ReaderT" "Pattern") . 130251932) ((other "Take" "1:" "IO") . 57072714) ((headline "Take" "1:" "IO") . 57072714) ((other "The" "Program") . 211046023) ((headline "The" "Program") . 211046023)) :index (("Scala!3 Layer Scala Cake" "/root/orgpress/org/scala/3-layer-cake.org" nil) ("FP!3 Layer Scala Cake" "/root/orgpress/org/scala/3-layer-cake.org" nil) ("Free!3 Layer Scala Cake" "/root/orgpress/org/scala/3-layer-cake.org" nil) ("Monad!3 Layer Scala Cake" "/root/orgpress/org/scala/3-layer-cake.org" nil))) org-publish-cache)
(puthash "/root/orgpress/org/scala/implicit-conversions.org" '(:date (22360 45440) :title "Implicit, to be or not to be" :crossrefs (((other "Footnotes") . 170052769) ((headline "Footnotes") . 170052769) ((other "or" "Not" "To" "Be") . 231405655) ((headline "or" "Not" "To" "Be") . 231405655) ((other "To" "Be") . 253457164) ((headline "To" "Be") . 253457164) ((other "类型类" "Type" "Class") . 100822279) ((headline "类型类" "Type" "Class") . 100822279) ((other "隐式转换参数") . 178318923) ((headline "隐式转换参数") . 178318923) ((other "语法糖") . 122309231) ((headline "语法糖") . 122309231) ((other "隐式转换接受者") . 55966834) ((headline "隐式转换接受者") . 55966834) ((other "隐式转换是什么鬼") . 164133736) ((headline "隐式转换是什么鬼") . 164133736)) :index (("Scala!Implicit, to be or not to be" "/root/orgpress/org/scala/implicit-conversions.org" nil))) org-publish-cache)
(puthash "/root/orgpress/org/slides/continuous-delivery.org" '(:date (23708 42341 731733 10000) :title "Continuous Delivery" :crossrefs (((other "Footnotes") . 252466053) ((headline "Footnotes") . 252466053) ((other "Homework") . 194407351) ((headline "Homework") . 194407351) ((other "Popular" "CI" "tools") . 143888689) ((headline "Popular" "CI" "tools") . 143888689) ((other "QA" "in" "Production[fn:5]") . 198664995) ((headline "QA" "in" "Production[fn:5]") . 198664995) ((other "Pipeline") . 137773262) ((headline "Pipeline") . 137773262) ((other "Pipeline" "as" "Code") . 34513627) ((headline "Pipeline" "as" "Code") . 34513627) ((other "Journey" "from" "code" "to" "product") . 11142830) ((headline "Journey" "from" "code" "to" "product") . 11142830) ((other "Essentials[fn:4]") . 189096476) ((headline "Essentials[fn:4]") . 189096476) ((other "Automate" "deployment") . 9484064) ((headline "Automate" "deployment") . 9484064) ((other "Make" "it" "easy" "for" "anyone" "to" "get" "the" "latest" "executable") . 154980009) ((headline "Make" "it" "easy" "for" "anyone" "to" "get" "the" "latest" "executable") . 154980009) ((other "Test" "in" "a" "clone" "of" "the" "production" "environment") . 241452531) ((headline "Test" "in" "a" "clone" "of" "the" "production" "environment") . 241452531) ((other "Keep" "the" "build" "fast") . 50096425) ((headline "Keep" "the" "build" "fast") . 50096425) ((other "Fix" "broken" "builds" "immediately") . 249934991) ((headline "Fix" "broken" "builds" "immediately") . 249934991) ((other "Automate" "the" "build") . 239309892) ((headline "Automate" "the" "build") . 239309892) ((other "Make" "your" "build" "self-testing") . 153809642) ((headline "Make" "your" "build" "self-testing") . 153809642) ((other "Maintain" "a" "single-source" "repository") . 250440081) ((headline "Maintain" "a" "single-source" "repository") . 250440081) ((other "Evolutionary" "architecture") . 150365568) ((headline "Evolutionary" "architecture") . 150365568) ((other "Why" "Continuous" "Integration") . 35722028) ((headline "Why" "Continuous" "Integration") . 35722028) ((other "Why" "Continuous" "Delivery") . 2692169) ((headline "Why" "Continuous" "Delivery") . 2692169) ((other "Happier" "teams") . 85954340) ((headline "Happier" "teams") . 85954340) ((other "Better" "products") . 232934588) ((headline "Better" "products") . 232934588) ((other "Lower" "Cost") . 90268177) ((headline "Lower" "Cost") . 90268177) ((other "Higher" "quality") . 185168705) ((headline "Higher" "quality") . 185168705) ((other "Faster" "time" "to" "market") . 257064871) ((headline "Faster" "time" "to" "market") . 257064871) ((other "Low" "risk" "releases") . 239855737) ((headline "Low" "risk" "releases") . 239855737) ((other "What" "is" "Continuous" "Integration") . 211732860) ((headline "What" "is" "Continuous" "Integration") . 211732860) ((other "What" "is" "Continuous" "Delivery") . 52510863) ((headline "What" "is" "Continuous" "Delivery") . 52510863)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/write-yourself-a-scheme-in-haskell/index.org" '(:date (22491 13824) :title "用Haskell48小时写你个Scheme" :crossrefs (((other "待续...") . 35682657) ((headline "待续...") . 35682657) ((other "求值，第一部分") . 7655428) ((headline "求值，第一部分") . 7655428) ((other "实现" "show" "类型类") . 86763033) ((headline "实现" "show" "类型类") . 86763033) ((other "to" "String") . 98481989) ((headline "to" "String") . 98481989) ((other "最后") . 267899039) ((headline "最后") . 267899039) ((other "parseNumber") . 29087010) ((headline "parseNumber") . 29087010) ((other "parseAtom") . 234635648) ((headline "parseAtom") . 234635648) ((other "ParseString") . 76671177) ((headline "ParseString") . 76671177) ((other "返回值") . 213837397) ((headline "返回值") . 213837397) ((other "空白符") . 27062569) ((headline "空白符") . 27062569) ((other "pattern" "matching") . 77752184) ((headline "pattern" "matching") . 77752184) ((other "Either") . 58136351) ((headline "Either") . 58136351) ((other "Parse") . 135864898) ((headline "Parse") . 135864898) ((other "定义" "parser") . 134257531) ((headline "定义" "parser") . 134257531) ((other "写个简单的parser") . 195693431) ((headline "写个简单的parser") . 195693431) ((other "语法分析") . 198917595) ((headline "语法分析") . 198917595) ((other "练习") . 94645788) ((headline "练习") . 94645788) ((other "操作符") . 184016475) ((headline "操作符") . 184016475) ((other "Hello" "World") . 107094049) ((headline "Hello" "World") . 107094049) ((other "跑起来") . 151093271) ((headline "跑起来") . 151093271) ((other "前言") . 227715517) ((headline "前言") . 227715517)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/2016-year-in-review.org" '(:date (22621 47744) :title "2016 Year in Review" :crossrefs (((other "[[https://github.com/jcouyang/blog/][Docker" "化" "Orgpress]]") . 161195054) ((headline "[[https://github.com/jcouyang/blog/][Docker" "化" "Orgpress]]") . 161195054) ((other "[[https://github.com/jcouyang/react-most][react-most" "-⚛->]]") . 127998880) ((headline "[[https://github.com/jcouyang/react-most][react-most" "-⚛->]]") . 127998880) ((other "[[https://github.com/cujojs/most][most]]") . 36725117) ((headline "[[https://github.com/cujojs/most][most]]") . 36725117) ((other "[[https://github.com/reactive-react/transdux][transdux]]") . 91031533) ((headline "[[https://github.com/reactive-react/transdux][transdux]]") . 91031533) ((other "[[https://github.com/jcouyang/union-type][union-type]]") . 165454520) ((headline "[[https://github.com/jcouyang/union-type][union-type]]") . 165454520) ((other "[[https://github.com/jcouyang/dotfiles/][dotfiles]]") . 154187409) ((headline "[[https://github.com/jcouyang/dotfiles/][dotfiles]]") . 154187409) ((other "[[https://github.com/jcouyang/gh-omnibar][gh-omnibar]]") . 228001425) ((headline "[[https://github.com/jcouyang/gh-omnibar][gh-omnibar]]") . 228001425) ((other "[[https://github.com/jcouyang/gh-widget][gh-widget]]") . 54845653) ((headline "[[https://github.com/jcouyang/gh-widget][gh-widget]]") . 54845653) ((other "[[https://www.rubyconfchina.org/][RubyConf" "China]]") . 108988336) ((headline "[[https://www.rubyconfchina.org/][RubyConf" "China]]") . 108988336) ((other "[[https://github.com/jcouyang/cats.rb][cat.rb]]") . 66560522) ((headline "[[https://github.com/jcouyang/cats.rb][cat.rb]]") . 66560522) ((other "[[https://github.com/jcouyang/cat.js][cat.js]]") . 79733487) ((headline "[[https://github.com/jcouyang/cat.js][cat.js]]") . 79733487) ((other "duckling") . 208642795) ((headline "duckling") . 208642795) ((other "同构的" "JS" "方法") . 188692117) ((headline "同构的" "JS" "方法") . 188692117) ((other "core.async") . 231826566) ((headline "core.async") . 231826566) ((other "[[https://github.com/jcouyang/conjs][conjs]]") . 117339404) ((headline "[[https://github.com/jcouyang/conjs][conjs]]") . 117339404) ((other "[[https://book.douban.com/subject/26883736/][前端函数式攻城指南]]") . 13665323) ((headline "[[https://book.douban.com/subject/26883736/][前端函数式攻城指南]]") . 13665323) ((other "[[https://github.com/jcouyang/functional-javascript][Functional" "JavaScript" "mini" "Book]]") . 147233273) ((headline "[[https://github.com/jcouyang/functional-javascript][Functional" "JavaScript" "mini" "Book]]") . 147233273)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/functional-ruby.org" '(:date (22406 54784) :title "Functional Ruby" :crossrefs (((other "Footnotes") . 35257428) ((headline "Footnotes") . 35257428) ((other "pmap") . 170694207) ((headline "pmap") . 170694207) ((other "actor" "model" "多线程") . 159897979) ((headline "actor" "model" "多线程") . 159897979) ((other "用" "Either" "做控制流") . 210053112) ((headline "用" "Either" "做控制流") . 210053112) ((other "联合类型" "Left" "|" "Right") . 4020521) ((headline "联合类型" "Left" "|" "Right") . 4020521) ((other "一个好看的" "inspect") . 171888316) ((headline "一个好看的" "inspect") . 171888316) ((other "Monad") . 182457055) ((headline "Monad") . 182457055) ((other "Functor") . 216903015) ((headline "Functor") . 216903015) ((other "一个简单的" "Either" "Monad[fn:2]") . 189058154) ((headline "一个简单的" "Either" "Monad[fn:2]") . 189058154) ((other "一个简单的例子") . 235308159) ((headline "一个简单的例子") . 235308159) ((other "其实只是个简单的语法糖") . 232805572) ((headline "其实只是个简单的语法糖") . 232805572) ((other "/正则/") . 69031353) ((headline "/正则/") . 69031353) ((other "lambda" "（aka" "guard）") . 266304750) ((headline "lambda" "（aka" "guard）") . 266304750) ((other "表达式") . 105143548) ((headline "表达式") . 105143548) ((other "类型") . 56435947) ((headline "类型") . 56435947) ((other "值") . 5325592) ((headline "值") . 5325592) ((other "case" "when") . 156293564) ((headline "case" "when") . 156293564) ((other "destructure") . 245779739) ((headline "destructure") . 245779739) ((other "pattern" "matching") . 254336975) ((headline "pattern" "matching") . 254336975) ((other "闭包") . 197574478) ((headline "闭包") . 197574478) ((other "参数检查") . 28497735) ((headline "参数检查") . 28497735) ((other "return") . 233855974) ((headline "return") . 233855974) ((other "为什么" "lambda" "是" "proc") . 30233249) ((headline "为什么" "lambda" "是" "proc") . 30233249) ((other "神奇的" "=&=") . 237930130) ((headline "神奇的" "=&=") . 237930130) ((other "lambda") . 25466825) ((headline "lambda") . 25466825)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/clojure/clojure-the-mini-book.org" '(:date (21742 25088) :title "Clojure The Mini Book" :crossrefs (((other "多态") . 63924287) ((headline "多态") . 63924287) ((other "Concurrency") . 208608368) ((headline "Concurrency") . 208608368) ((other "Collection") . 239065142) ((headline "Collection") . 239065142) ((other "Functional" "Programming") . 199706359) ((headline "Functional" "Programming") . 199706359) ((other "Macro") . 173440642) ((headline "Macro") . 173440642) ((other "Reader") . 191463713) ((headline "Reader") . 191463713) ((other "code?" "data?") . 46206616) ((headline "code?" "data?") . 46206616) ((other "Special" "Forms") . 2340277) ((headline "Special" "Forms") . 2340277) ((other "loop" "recur") . 257512465) ((headline "loop" "recur") . 257512465) ((other "do") . 8410644) ((headline "do") . 8410644) ((other "let") . 17369422) ((headline "let") . 17369422) ((other "def") . 98346903) ((headline "def") . 98346903) ((other "来试试不一样的Clojure数据结构") . 74558340) ((headline "来试试不一样的Clojure数据结构") . 74558340) ((other "反引号" "=`=") . 265126449) ((headline "反引号" "=`=") . 265126449) ((other "lisp专用的" "'" "引号") . 125102109) ((headline "lisp专用的" "'" "引号") . 125102109) ((other "Map") . 15198323) ((headline "Map") . 15198323) ((other "Keyword") . 126840997) ((headline "Keyword") . 126840997) ((other "Set") . 241786556) ((headline "Set") . 241786556) ((other "List") . 102769816) ((headline "List") . 102769816) ((other "Vector") . 38505897) ((headline "Vector") . 38505897) ((other "String") . 152507586) ((headline "String") . 152507586) ((other "Number") . 255583931) ((headline "Number") . 255583931) ((other "搭建环境") . 203927170) ((headline "搭建环境") . 203927170) ((other "多线程是好东西如果用的对") . 22582862) ((headline "多线程是好东西如果用的对") . 22582862) ((other "多态是好东西") . 208372008) ((headline "多态是好东西") . 208372008) ((other "函数式是好东西") . 40904957) ((headline "函数式是好东西") . 40904957) ((other "lisp" "是好东西") . 25077085) ((headline "lisp" "是好东西") . 25077085) ((other "为什么要学习全是括号的语言") . 5548217) ((headline "为什么要学习全是括号的语言") . 5548217) ((other "我每天用括号当早饭") . 215472854) ((headline "我每天用括号当早饭") . 215472854)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/part3.org" '(:date (23387 45568) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Comonad") . 107352147) ((headline "Comonad") . 107352147) ((other "Eff") . 154756560) ((headline "Eff") . 154756560) ((other "Free" "Monoid") . 259220562) ((headline "Free" "Monoid") . 259220562) ((other "Interpreter") . 108803895) ((headline "Interpreter") . 108803895) ((other "Free" "Functor") . 64573424) ((headline "Free" "Functor") . 64573424) ((other "Coyoneda") . 107930838) ((headline "Coyoneda") . 107930838) ((other "Free") . 259310826) ((headline "Free") . 259310826) ((other "Free" "Monad") . 18926299) ((headline "Free" "Monad") . 18926299) ((other "ST" "Monad") . 263545808) ((headline "ST" "Monad") . 263545808) ((other "MonadPlus") . 128596434) ((headline "MonadPlus") . 128596434) ((other "Alternative") . 96038473) ((headline "Alternative") . 96038473) ((other "ReaderT") . 154382846) ((headline "ReaderT") . 154382846) ((other "Monad" "Transform") . 20289890) ((headline "Monad" "Transform") . 20289890) ((other "RWS") . 235113935) ((headline "RWS") . 235113935) ((other "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 117537166) ((headline "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 117537166)) :index (("Catergory Theory!范畴论完全装逼手册 卷三" "/root/orgpress/org/grokking-monad/part3.org" nil))) org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/part2.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Footnotes") . 244141018) ((headline "Footnotes") . 244141018) ((other "Summary") . 6192919) ((headline "Summary") . 6192919) ((other "Cont" "接下来有") . 201082150) ((headline "Cont" "接下来有") . 201082150) ((other "回到" "Validation") . 218876629) ((headline "回到" "Validation") . 218876629) ((other "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 167331716) ((headline "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 167331716) ((other "Validation" "检查检查") . 17160713) ((headline "Validation" "检查检查") . 17160713) ((other "State" "变化会有") . 51002230) ((headline "State" "变化会有") . 51002230) ((other "Writer" "光出进没有") . 122707172) ((headline "Writer" "光出进没有") . 122707172) ((other "do" "notation") . 94054635) ((headline "do" "notation") . 94054635) ((other "Reader" "差一点就有") . 247596835) ((headline "Reader" "差一点就有") . 247596835) ((other "Either" "Monad") . 236567142) ((headline "Either" "Monad") . 236567142) ((other "Product" "&" "Coproduct") . 24902358) ((headline "Product" "&" "Coproduct") . 24902358) ((other "Either" "要么有要么有") . 29793043) ((headline "Either" "要么有要么有") . 29793043) ((other "Maybe" "可能会有") . 260871450) ((headline "Maybe" "可能会有") . 260871450) ((other "Identity" "本身就有[fn:5]") . 195568753) ((headline "Identity" "本身就有[fn:5]") . 195568753) ((other "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 45628209) ((headline "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 45628209)) :index (("Catergory Theory!范畴论完全装逼手册 卷二" "/root/orgpress/org/grokking-monad/part2.org" nil))) org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/scala/en/part2.org" '(:date (23549 55936) :title "Grokking Monad in Scala" :crossrefs (((other "Choice") . 59966344) ((headline "Choice") . 59966344) ((other "Applied") . 179267540) ((headline "Applied") . 179267540) ((other "Middleware[F]") . 204411495) ((headline "Middleware[F]") . 204411495) ((other "HttpRoutes[F]") . 47071168) ((headline "HttpRoutes[F]") . 47071168) ((other "Rationale") . 196537886) ((headline "Rationale") . 196537886) ((other "Monad") . 154114171) ((headline "Monad") . 154114171) ((other "Traverse") . 147547042) ((headline "Traverse") . 147547042) ((other "Validated") . 111687060) ((headline "Validated") . 111687060) ((other "Semigroupal" "a.k.a" "Cartesian") . 167443312) ((headline "Semigroupal" "a.k.a" "Cartesian") . 167443312) ((other "Monad" "Transformer") . 108505855) ((headline "Monad" "Transformer") . 108505855) ((other "State" "Monad") . 94815653) ((headline "State" "Monad") . 94815653) ((other "Reader" "Monad") . 189899610) ((headline "Reader" "Monad") . 189899610) ((other "Writer" "Monad") . 60871215) ((headline "Writer" "Monad") . 60871215) ((other "Reader" "Writer" "Monad") . 43563995) ((headline "Reader" "Writer" "Monad") . 43563995) ((other "Identity" "Monad") . 211214573) ((headline "Identity" "Monad") . 211214573) ((other "Contravariant" "Functor") . 104881483) ((headline "Contravariant" "Functor") . 104881483) ((other "Functor") . 92176808) ((headline "Functor") . 92176808) ((other "Type" "enrichment") . 233117945) ((headline "Type" "enrichment") . 233117945) ((other "Type" "classes") . 222345128) ((headline "Type" "classes") . 222345128) ((other "Variance") . 94440589) ((headline "Variance") . 94440589) ((other "Recursive" "Data" "Type") . 239450423) ((headline "Recursive" "Data" "Type") . 239450423) ((other "Algebraic" "Data" "Type") . 224340309) ((headline "Algebraic" "Data" "Type") . 224340309) ((other "Type" "classes") . 147744779) ((headline "Type" "classes") . 147744779)) :index nil) org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/part1.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "Footnotes") . 21076824) ((headline "Footnotes") . 21076824) ((other "Summary") . 111307122) ((headline "Summary") . 111307122) ((other "/Kleisli" "Catergory/") . 123539246) ((headline "/Kleisli" "Catergory/") . 123539246) ((other "Rank" "N" "Type") . 140075520) ((headline "Rank" "N" "Type") . 140075520) ((other "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 225779733) ((headline "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 225779733) ((other "结合律") . 52520276) ((headline "结合律") . 52520276) ((other "三角等式") . 52056932) ((headline "三角等式") . 52056932) ((other "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 224680912) ((headline "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 224680912) ((other "/Adjunction" "Functor/" "伴随函子") . 252374384) ((headline "/Adjunction" "Functor/" "伴随函子") . 252374384) ((other "String" "Diagram") . 220037261) ((headline "String" "Diagram") . 220037261) ((target "NT") . 202101160) ((other "自然变换" "/" "Natural" "Transformations" "<<NT>>") . 151630149) ((headline "自然变换" "/" "Natural" "Transformations" "<<NT>>") . 151630149) ((other "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 216656567) ((headline "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 216656567) ((other "函子" "/" "Functor") . 210525849) ((headline "函子" "/" "Functor") . 210525849) ((other "/Duel/") . 162016965) ((headline "/Duel/") . 162016965) ((other "/Hask/") . 97088393) ((headline "/Hask/") . 97088393) ((other "/Category/") . 138250340) ((headline "/Category/") . 138250340) ((other "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 192876944) ((headline "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 192876944)) :index (("Catergory Theory!范畴论完全装逼手册 卷一" "/root/orgpress/org/grokking-monad/part1.org" nil) ("Catergory" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Category/")) ("范畴" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Category/")) ("Kind" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Category/")) ("Hask" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Hask/")) ("Duel" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Duel/")) ("Functor" "/root/orgpress/org/grokking-monad/part1.org" (name . "函子 / Functor")) ("函子" "/root/orgpress/org/grokking-monad/part1.org" (name . "函子 / Functor")) ("endofunctor" "/root/orgpress/org/grokking-monad/part1.org" (name . "函子 / Functor")) ("自函子" "/root/orgpress/org/grokking-monad/part1.org" (name . "函子 / Functor")) ("Natural Transformations" "/root/orgpress/org/grokking-monad/part1.org" (name . "自然变换 / Natural Transformations <<NT>>")) ("自然变换" "/root/orgpress/org/grokking-monad/part1.org" (name . "自然变换 / Natural Transformations <<NT>>")) ("Adjunction Functor" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("isomorphic" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("同构" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Adjunction Functor/ 伴随函子")) ("米田引理" "/root/orgpress/org/grokking-monad/part1.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Yoneda Lemma" "/root/orgpress/org/grokking-monad/part1.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Arbitrary-rank polymorphism" "/root/orgpress/org/grokking-monad/part1.org" (name . "Rank N Type")) ("Rank N Type" "/root/orgpress/org/grokking-monad/part1.org" (name . "Rank N Type")) ("Kleisi Catergory" "/root/orgpress/org/grokking-monad/part1.org" (name . "/Kleisli Catergory/")))) org-publish-cache)
(puthash "/root/orgpress/org/emacs/literal-programming-emacs-config.org" '(:date (21835 64640) :title "Literal Programming Emacs Configure" :crossrefs (((other "Modes") . 84873073) ((headline "Modes") . 84873073) ((other "yasnippet") . 223991829) ((headline "yasnippet") . 223991829) ((other "PureScript") . 5651454) ((headline "PureScript") . 5651454) ((other "prompt") . 265721118) ((headline "prompt") . 265721118) ((other "Langtool") . 123903688) ((headline "Langtool") . 123903688) ((other "Flyspell") . 148984548) ((headline "Flyspell") . 148984548) ((other "Scala" "Metals") . 93833544) ((headline "Scala" "Metals") . 93833544) ((other "smartparens") . 120432790) ((headline "smartparens") . 120432790) ((other "pallet") . 132768296) ((headline "pallet") . 132768296) ((other "expand" "region") . 161444376) ((headline "expand" "region") . 161444376) ((other "multi" "cursor") . 134996498) ((headline "multi" "cursor") . 134996498) ((other "magit") . 125964861) ((headline "magit") . 125964861) ((other "key" "chord") . 128777785) ((headline "key" "chord") . 128777785) ((other "org" "mode") . 230460528) ((headline "org" "mode") . 230460528) ((other "on" "screen") . 161299729) ((headline "on" "screen") . 161299729) ((other "js2" "mode") . 89158147) ((headline "js2" "mode") . 89158147) ((other "typescript") . 180343373) ((headline "typescript") . 180343373) ((other "ido") . 28164529) ((headline "ido") . 28164529) ((other "textmate") . 31189233) ((headline "textmate") . 31189233) ((other "helm") . 170004415) ((headline "helm") . 170004415) ((other "forge") . 134581355) ((headline "forge") . 134581355) ((other "[[https://github.com/company-mode/company-mode][company]]") . 178173446) ((headline "[[https://github.com/company-mode/company-mode][company]]") . 178173446) ((other "[[https://github.com/winterTTr/ace-jump-mode][ace" "jump" "mode]]") . 103939343) ((headline "[[https://github.com/winterTTr/ace-jump-mode][ace" "jump" "mode]]") . 103939343) ((other "Default" "Settings") . 134218527) ((headline "Default" "Settings") . 134218527) ((other "UI") . 62296615) ((headline "UI") . 62296615) ((other "Fonts") . 195140339) ((headline "Fonts") . 195140339) ((other "Theme") . 46645924) ((headline "Theme") . 46645924)) :index (("Emacs!Literal Programming Emacs Configure" "/root/orgpress/org/emacs/literal-programming-emacs-config.org" nil))) org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/index.org" '(:date (22685 640) :title "范畴论完全装逼手册 / Grokking Monad" :crossrefs (((other "References") . 12896481) ((headline "References") . 12896481) ((other "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 186389083) ((headline "第三部分:@@html:<ruby>搞基猫呢<rt>Advanced" "Monads</rt></ruby>@@") . 186389083) ((other "Comonad") . 23710862) ((headline "Comonad") . 23710862) ((other "Eff") . 69520756) ((headline "Eff") . 69520756) ((other "Free" "Monoid") . 133229215) ((headline "Free" "Monoid") . 133229215) ((other "Free" "Monad") . 128499728) ((headline "Free" "Monad") . 128499728) ((other "Interpreter") . 161924204) ((headline "Interpreter") . 161924204) ((other "Free" "Functor") . 211566936) ((headline "Free" "Functor") . 211566936) ((other "Coyoneda") . 5367510) ((headline "Coyoneda") . 5367510) ((other "Free") . 67362843) ((headline "Free") . 67362843) ((other "ST" "Monad") . 157569213) ((headline "ST" "Monad") . 157569213) ((other "MonadPlus") . 265295572) ((headline "MonadPlus") . 265295572) ((other "Alternative") . 72973346) ((headline "Alternative") . 72973346) ((other "Monad" "Transform") . 209016402) ((headline "Monad" "Transform") . 209016402) ((other "ReaderT") . 164785175) ((headline "ReaderT") . 164785175) ((other "RWS") . 180245013) ((headline "RWS") . 180245013) ((other "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 114983766) ((headline "第二部分：@@html:<ruby>食用猫呢<rt>" "Practical" "Monads</rt></ruby>@@") . 114983766) ((other "Summary") . 154285034) ((headline "Summary") . 154285034) ((other "Cont") . 238889081) ((headline "Cont") . 238889081) ((other "Validation") . 226900300) ((headline "Validation") . 226900300) ((other "回到" "Validation") . 82538359) ((headline "回到" "Validation") . 82538359) ((other "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 217159366) ((headline "@@html:<ruby>含幺半群<rt>Monoid</rt></ruby>@@") . 217159366) ((other "State") . 236661414) ((headline "State") . 236661414) ((other "Writer") . 202022870) ((headline "Writer") . 202022870) ((other "Reader") . 179482084) ((headline "Reader") . 179482084) ((other "do" "notation") . 4619982) ((headline "do" "notation") . 4619982) ((other "Either") . 108927238) ((headline "Either") . 108927238) ((other "Either" "Monad") . 126709888) ((headline "Either" "Monad") . 126709888) ((other "Product" "&" "Coproduct") . 188996025) ((headline "Product" "&" "Coproduct") . 188996025) ((other "Maybe") . 32613863) ((headline "Maybe") . 32613863) ((other "Identity") . 138369245) ((headline "Identity") . 138369245) ((other "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 133576595) ((headline "第一部分：@@html:<ruby>猫论<rt>Catergory" "Theory</rt></ruby>@@") . 133576595) ((other "Summary") . 206210333) ((headline "Summary") . 206210333) ((other "/Kleisli" "Catergory/") . 211462889) ((headline "/Kleisli" "Catergory/") . 211462889) ((other "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 58969161) ((headline "Yoneda" "lemma" "/" "+米田共+" "米田引理") . 58969161) ((other "Rank" "N" "Type") . 134153050) ((headline "Rank" "N" "Type") . 134153050) ((other "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 213768908) ((headline "从伴随函子到" "@@html:<ruby>单子<rt>" "Monad</rt></ruby>@@") . 213768908) ((other "结合律") . 39871854) ((headline "结合律") . 39871854) ((other "三角等式") . 154031122) ((headline "三角等式") . 154031122) ((other "/Adjunction" "Functor/" "伴随函子") . 256686407) ((headline "/Adjunction" "Functor/" "伴随函子") . 256686407) ((other "String" "Diagram") . 113254270) ((headline "String" "Diagram") . 113254270) ((other "自然变换" "/" "Natural" "Transformations" "<<NT>>") . 39031472) ((headline "自然变换" "/" "Natural" "Transformations" "<<NT>>") . 39031472) ((target "NT") . 42140172) ((other "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 164658516) ((headline "/@@html:<ruby>Cat<rt>" "+猫+</rt></ruby>@@/") . 164658516) ((other "函子" "/" "Functor") . 102967768) ((headline "函子" "/" "Functor") . 102967768) ((other "/Category/") . 232883746) ((headline "/Category/") . 232883746) ((other "/Duel/") . 56490180) ((headline "/Duel/") . 56490180) ((other "/Hask/") . 255530) ((headline "/Hask/") . 255530)) :index (("Catergory Theory!范畴论完全装逼手册 全" "/root/orgpress/org/grokking-monad/index.org" nil) ("Catergory Theory!范畴论完全装逼手册 卷一" "/root/orgpress/org/grokking-monad/index.org" nil) ("Catergory" "/root/orgpress/org/grokking-monad/index.org" (name . "/Category/")) ("范畴" "/root/orgpress/org/grokking-monad/index.org" (name . "/Category/")) ("Kind" "/root/orgpress/org/grokking-monad/index.org" (name . "/Category/")) ("Hask" "/root/orgpress/org/grokking-monad/index.org" (name . "/Hask/")) ("Duel" "/root/orgpress/org/grokking-monad/index.org" (name . "/Duel/")) ("Functor" "/root/orgpress/org/grokking-monad/index.org" (name . "函子 / Functor")) ("函子" "/root/orgpress/org/grokking-monad/index.org" (name . "函子 / Functor")) ("endofunctor" "/root/orgpress/org/grokking-monad/index.org" (name . "函子 / Functor")) ("自函子" "/root/orgpress/org/grokking-monad/index.org" (name . "函子 / Functor")) ("Natural Transformations" "/root/orgpress/org/grokking-monad/index.org" (name . "自然变换 / Natural Transformations <<NT>>")) ("自然变换" "/root/orgpress/org/grokking-monad/index.org" (name . "自然变换 / Natural Transformations <<NT>>")) ("Catergory Theory!范畴论完全装逼手册 卷二" "/root/orgpress/org/grokking-monad/index.org" (name . "自然变换 / Natural Transformations <<NT>>")) ("Adjunction Functor" "/root/orgpress/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("isomorphic" "/root/orgpress/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("同构" "/root/orgpress/org/grokking-monad/index.org" (name . "/Adjunction Functor/ 伴随函子")) ("米田引理" "/root/orgpress/org/grokking-monad/index.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Yoneda Lemma" "/root/orgpress/org/grokking-monad/index.org" (name . "Yoneda lemma / +米田共+ 米田引理")) ("Arbitrary-rank polymorphism" "/root/orgpress/org/grokking-monad/index.org" (name . "Rank N Type")) ("Rank N Type" "/root/orgpress/org/grokking-monad/index.org" (name . "Rank N Type")) ("Kleisi Catergory" "/root/orgpress/org/grokking-monad/index.org" (name . "/Kleisli Catergory/")) ("Catergory Theory!范畴论完全装逼手册 卷三" "/root/orgpress/org/grokking-monad/index.org" (name . "Summary")))) org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/scala/en/part3.org" '(:date (23537 64768) :title "Grokking Monad in Scala - Free" :crossrefs (((other "Footnotes") . 163341386) ((headline "Footnotes") . 163341386) ((other "What" "really" "happened" "here") . 267086863) ((headline "What" "really" "happened" "here") . 267086863) ((other "Interpret" "your" "program") . 259973833) ((headline "Interpret" "your" "program") . 259973833) ((other "Free" "your" "program") . 126227036) ((headline "Free" "your" "program") . 126227036) ((other "Effects") . 263030106) ((headline "Effects") . 263030106) ((other "CoYoneda" "Lemma" "(Trick)") . 55357800) ((headline "CoYoneda" "Lemma" "(Trick)") . 55357800) ((other "Free" "Structure") . 152501091) ((headline "Free" "Structure") . 152501091) ((other "Free") . 101938722) ((headline "Free") . 101938722) ((other "Footnotes") . 143198369) ((headline "Footnotes") . 143198369) ((other "Natural" "Transformation") . 28448453) ((headline "Natural" "Transformation") . 28448453) ((other "Rank" "N" "Type") . 178872698) ((headline "Rank" "N" "Type") . 178872698) ((other "Kind" "Projector") . 242590842) ((headline "Kind" "Projector") . 242590842) ((other "FunctionK") . 63278683) ((headline "FunctionK") . 63278683) ((other "Kind") . 120108545) ((headline "Kind") . 120108545)) :index nil) org-publish-cache)
(puthash "Xdee351a2635d8ba759025f8600619e0ed978cb2b" '(24162 15599 694609 236000) org-publish-cache)
(puthash "Xf6f0fea00311c30040cfd7437200667c26377655" '(24162 15599 566608 943000) org-publish-cache)
(puthash "Xa7dac94a92acc2701720846488261f9854a70197" '(24162 15599 566608 943000) org-publish-cache)
(puthash "X8cb73ae9c04cadea0ab1806cdf4f8a1e17bfba39" '(24162 15599 566608 943000) org-publish-cache)
(puthash "Xd4f7d54ade5ff027cc0e4566b6b5bce7c3ae775f" '(24162 15599 694609 236000) org-publish-cache)
(puthash "Xd4728ed6724a979e0cde1c7608839cfcfcf408ed" '(24162 15599 694609 236000) org-publish-cache)
(puthash "X42b1635282469ddefd7fd9dfaa0764abc95d036b" '(24162 15599 694609 236000) org-publish-cache)
(puthash "X9d705e3360bdc688dc8f44ee53c1ce4069dd58ba" '(24162 15599 566608 943000) org-publish-cache)
(puthash "Xdc2b846950f32a308cb291ec9b912cc1b72921a5" '(24162 15599 694609 236000) org-publish-cache)
(puthash "X4fadb6f717470ce5f620fec585cb4c98613b5cad" '(24162 15599 566608 943000) org-publish-cache)
(puthash "X1e394c90d48f6ae06faa69d49ffba822f2e80d3d" '(24162 15599 694609 236000) org-publish-cache)
(puthash "X422e0e483e36f6ac98670b3d7ee80a5b3f5167a6" '(24162 15599 566608 943000) org-publish-cache)
(puthash "Xa9191dfdc2ff2a408e729fa9e61ef9187f2688bf" '(24162 15599 566608 943000) org-publish-cache)
(puthash "Xf917f4de18bb7a0d1acff8a04d93d6474ab27ecf" '(24162 15599 514608 824000) org-publish-cache)
(puthash "Xff3324583e5d264001a042438b66f6906edcd7b9" '(24162 15599 694609 236000) org-publish-cache)
(puthash "X4b963fd4a17c3680d39d38b91bed7a3e0b12ace5" '(24162 15599 546608 897000) org-publish-cache)
(puthash "X1171fcb389a714e29b6bac31cf356cb0aa57a948" '(24162 15599 694609 236000) org-publish-cache)
(puthash "X60b10e45657249748e26f1862d20a8cafdb3b06d" '(24162 15599 802609 484000) org-publish-cache)
(puthash "X297a2d5f61beb7c18d758eee1c8a0970eb210eae" '(24162 15599 810609 503000) org-publish-cache)
(puthash "Xdfdd4e3edbfcc60d1f28d438e2ca40df956490c4" '(24162 15599 710609 273000) org-publish-cache)
(puthash "X783cc59a8e40347036bbc7044bbc0ee64bc5a63c" '(24162 15599 710609 273000) org-publish-cache)
(puthash "X06c933a6770ab23d9d51f3f8584b4263423fa6f8" '(24162 15599 710609 273000) org-publish-cache)
(puthash "Xb492d0ba24a105f6e93896166c615ea6f2224a8f" '(24162 15599 710609 273000) org-publish-cache)
(puthash "X5c0f79581daa2d5ed4ccd5515e2800f872cdcea8" '(24162 15599 510608 815000) org-publish-cache)
(puthash "X1af67b234ab9f33867fc80c496f7eedcf4517f9c" '(24162 15599 802609 484000) org-publish-cache)
(puthash "Xa49878e6436c63a33ec7961f621592815ad168b3" '(23714 4022 940185 544000) org-publish-cache)
(puthash "Xbc661bc7d9c03f75434a5895816a363fcebe8845" '(24162 15599 510608 815000) org-publish-cache)
(puthash "X1e35761d536c25b0a4dc2d75b17651133671c649" '(24162 15599 510608 815000) org-publish-cache)
(puthash "Xf4f579823ed24b666dbd4ee7c6e450e5c672e19b" '(24162 15599 542608 888000) org-publish-cache)
(puthash "Xce86aa72bad9979e2cf6eab155ba5f89c943a32f" '(24162 15599 542608 888000) org-publish-cache)
(puthash "X8ce048658a0c7c58f5a9d937156e7bf0e7e20b75" '(24162 15599 542608 888000) org-publish-cache)
(puthash "Xebe2eb4e5d614b05920009b61bc903c97e4bc4ad" '(24162 15599 546608 897000) org-publish-cache)
(puthash "Xf9fbc63fe4fdaab483e7a63ffbf0f79cdf5036f2" '(24162 15599 546608 897000) org-publish-cache)
(puthash "X949ccb49fffc912a59d9ae9c1674172111bd37a4" '(23720 44189 680783 167000) org-publish-cache)
(puthash "X69843472263bbb2db3f2a3a379e3067e5c007316" '(24162 15599 510608 815000) org-publish-cache)
(puthash "/root/orgpress/org/index.org" '(:crossrefs (((other "[[file:jichao.ouyang.org][About" "Me]]") . 231772328) ((headline "[[file:jichao.ouyang.org][About" "Me]]") . 231772328) ((other "[[file:make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API.org][make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API]]") . 96850107) ((headline "[[file:make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API.org][make" "Bamboo" "support" "Github" "Pull" "Request" "with" "Status" "API]]") . 96850107) ((other "[[file:clojure/clojure-the-mini-book.org][Clojure" "The" "Mini" "Book]]") . 41938020) ((headline "[[file:clojure/clojure-the-mini-book.org][Clojure" "The" "Mini" "Book]]") . 41938020) ((other "[[file:javascript/essential-ecmascript6.org][Essential" "EcmaScript" "6]]") . 163376171) ((headline "[[file:javascript/essential-ecmascript6.org][Essential" "EcmaScript" "6]]") . 163376171) ((other "[[file:javascript/clojure-core.async-essence-in-native-javascript.org][Clojure" "风格的" "JavaScript" "并发编程]]") . 137401621) ((headline "[[file:javascript/clojure-core.async-essence-in-native-javascript.org][Clojure" "风格的" "JavaScript" "并发编程]]") . 137401621) ((other "[[file:emacs/literal-programming-emacs-config.org][Literal" "Programming" "Emacs" "Configure]]") . 244929173) ((headline "[[file:emacs/literal-programming-emacs-config.org][Literal" "Programming" "Emacs" "Configure]]") . 244929173) ((other "[[file:javascript/functional-javascript.org][Functional" "JavaScript" "Mini" "Book]]") . 134380388) ((headline "[[file:javascript/functional-javascript.org][Functional" "JavaScript" "Mini" "Book]]") . 134380388) ((other "[[file:javascript/clojure-essence-in-javascript-transducer.org][JavaScript玩转Clojure大法之Transducer]]") . 242976029) ((headline "[[file:javascript/clojure-essence-in-javascript-transducer.org][JavaScript玩转Clojure大法之Transducer]]") . 242976029) ((other "[[file:javascript/clojure-essence-in-javascript-trampoline.org][JavaScript玩转Clojure大法之" "-" "Trampoline]]") . 33747323) ((headline "[[file:javascript/clojure-essence-in-javascript-trampoline.org][JavaScript玩转Clojure大法之" "-" "Trampoline]]") . 33747323) ((other "[[file:javascript/clojure-essence-in-javascript-macro.org][JavaScript玩转Clojure大法之" "-" "Macro" "(1)]]") . 94308495) ((headline "[[file:javascript/clojure-essence-in-javascript-macro.org][JavaScript玩转Clojure大法之" "-" "Macro" "(1)]]") . 94308495) ((other "[[file:javascript/clojure-essence-in-javascript-macro-2.org][自制语言初试" "-" "入lang]]") . 266122034) ((headline "[[file:javascript/clojure-essence-in-javascript-macro-2.org][自制语言初试" "-" "入lang]]") . 266122034) ((other "[[file:javascript/understand-prototype.org][理解JavaScript的原型链和继承]]") . 35810886) ((headline "[[file:javascript/understand-prototype.org][理解JavaScript的原型链和继承]]") . 35810886) ((other "[[file:javascript/ru-lang-second-attampt.org][入语言第二试:" "readtable" "与" "core.async]]") . 221593535) ((headline "[[file:javascript/ru-lang-second-attampt.org][入语言第二试:" "readtable" "与" "core.async]]") . 221593535) ((other "[[file:javascript/reactive-programming.org][Monadic" "Reactive" "Programming" "in" "JavaScript]]") . 168474530) ((headline "[[file:javascript/reactive-programming.org][Monadic" "Reactive" "Programming" "in" "JavaScript]]") . 168474530) ((other "[[file:github/using-dotfiles-and-stow-to-manage-your-dotfiles.org][使用" "dotfiles" "和" "stow" "管理你的" "dotfiles]]") . 204779672) ((headline "[[file:github/using-dotfiles-and-stow-to-manage-your-dotfiles.org][使用" "dotfiles" "和" "stow" "管理你的" "dotfiles]]") . 204779672) ((other "[[file:javascript/react-cookbook-mini.org][A" "Compact" "React" "Cookbook]]") . 49945853) ((headline "[[file:javascript/react-cookbook-mini.org][A" "Compact" "React" "Cookbook]]") . 49945853) ((other "[[file:javascript/react-transdux-the-clojure-approach-of-flux.org][看我们3天" "hackday" "都干了些什么]]") . 215277251) ((headline "[[file:javascript/react-transdux-the-clojure-approach-of-flux.org][看我们3天" "hackday" "都干了些什么]]") . 215277251) ((other "[[file:javascript/rethinking-react-dataflow.org][Rethinking" "React" "Dataflow]]") . 155372715) ((headline "[[file:javascript/rethinking-react-dataflow.org][Rethinking" "React" "Dataflow]]") . 155372715) ((other "[[file:scala/implicit-conversions.org][Implicit," "to" "be" "or" "not" "to" "be]]") . 103327437) ((headline "[[file:scala/implicit-conversions.org][Implicit," "to" "be" "or" "not" "to" "be]]") . 103327437) ((other "[[file:functional-ruby.org][Functional" "Ruby]]") . 80602945) ((headline "[[file:functional-ruby.org][Functional" "Ruby]]") . 80602945) ((other "[[file:write-yourself-a-scheme-in-haskell/index.org][用Haskell48小时写你个Scheme]]") . 20679383) ((headline "[[file:write-yourself-a-scheme-in-haskell/index.org][用Haskell48小时写你个Scheme]]") . 20679383) ((other "[[file:2016-year-in-review.org][2016" "Year" "in" "Review]]") . 45005931) ((headline "[[file:2016-year-in-review.org][2016" "Year" "in" "Review]]") . 45005931) ((other "[[file:grokking-monad/part1.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 82640206) ((headline "[[file:grokking-monad/part1.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 82640206) ((other "[[file:grokking-monad/part2.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 14099388) ((headline "[[file:grokking-monad/part2.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 14099388) ((other "[[file:xreact/typeclasses-in-typescript.org][Type" "Classes" "in" "TypeScript]]") . 77025725) ((headline "[[file:xreact/typeclasses-in-typescript.org][Type" "Classes" "in" "TypeScript]]") . 77025725) ((other "[[file:xreact/fun-with-fantasy.org][xReact" "Fantasy]]") . 54905172) ((headline "[[file:xreact/fun-with-fantasy.org][xReact" "Fantasy]]") . 54905172) ((other "[[file:grokking-monad/part3.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 41713845) ((headline "[[file:grokking-monad/part3.org][范畴论完全装逼手册" "/" "Grokking" "Monad]]") . 41713845) ((other "[[file:how-functional-programming-and-flink-will-save-your-ass-from-big-data.org][使用" "Flink" "解救多线程" "Scala" "应用]]") . 119577742) ((headline "[[file:how-functional-programming-and-flink-will-save-your-ass-from-big-data.org][使用" "Flink" "解救多线程" "Scala" "应用]]") . 119577742) ((other "[[file:shutting-down-gulugulu.org][关闭" "gulugulu" "弹幕]]") . 52633454) ((headline "[[file:shutting-down-gulugulu.org][关闭" "gulugulu" "弹幕]]") . 52633454) ((other "[[file:grokking-monad/scala/en/part3.org][Grokking" "Monad" "in" "Scala" "-" "Free]]") . 89742535) ((headline "[[file:grokking-monad/scala/en/part3.org][Grokking" "Monad" "in" "Scala" "-" "Free]]") . 89742535) ((other "[[file:grokking-monad/scala/en/part2.org][Grokking" "Monad" "in" "Scala]]") . 244417314) ((headline "[[file:grokking-monad/scala/en/part2.org][Grokking" "Monad" "in" "Scala]]") . 244417314) ((other "[[file:scala/finch-vs-http4s.org][Finch" "vs" "Http4s," "which" "is" "FPer]]") . 14910322) ((headline "[[file:scala/finch-vs-http4s.org][Finch" "vs" "Http4s," "which" "is" "FPer]]") . 14910322) ((other "[[file:scala/into-the-readerT-verse.org][Into" "ReaderT-verse]]") . 68966566) ((headline "[[file:scala/into-the-readerT-verse.org][Into" "ReaderT-verse]]") . 68966566) ((other "[[file:scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 172142763) ((headline "[[file:scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 172142763) ((other "[[file:grokking-monad/scala/en/choice.org][Applied" "Category" "Theory" "in" "Scala]]") . 245622287) ((headline "[[file:grokking-monad/scala/en/choice.org][Applied" "Category" "Theory" "in" "Scala]]") . 245622287) ((other "[[file:scala/functional-caching.org][Functional" "Scala" "Caching]]") . 105146013) ((headline "[[file:scala/functional-caching.org][Functional" "Scala" "Caching]]") . 105146013) ((other "[[file:purescript/cheatsheet.org][PureScript" "Cheat" "Sheet" "For" "JavaScript" "Developers]]") . 253307009) ((headline "[[file:purescript/cheatsheet.org][PureScript" "Cheat" "Sheet" "For" "JavaScript" "Developers]]") . 253307009) ((other "[[file:purescript/type-driven-development-with-purescript/index.org][Type-Driven" "Development" "with" "PureScript]]") . 16835968) ((headline "[[file:purescript/type-driven-development-with-purescript/index.org][Type-Driven" "Development" "with" "PureScript]]") . 16835968) ((other "[[file:2019-year-in-review.org][2019" "Year" "in" "Review]]") . 99844842) ((headline "[[file:2019-year-in-review.org][2019" "Year" "in" "Review]]") . 99844842) ((other "[[file:patterns-and-practices/applied-evolutionary-design/chapter-1.org][Applied" "Evolutionary" "Design]]") . 32828854) ((headline "[[file:patterns-and-practices/applied-evolutionary-design/chapter-1.org][Applied" "Evolutionary" "Design]]") . 32828854)) :index nil) org-publish-cache)
(puthash "Xedad6c609699d1994fbd3dfbfc5a0046f594e722" '(24162 15604 438620 114000) org-publish-cache)
(puthash "/root/orgpress/org/theindex.org" '(:crossrefs (((other "范") . 153375665) ((headline "范") . 153375665) ((other "自") . 171416941) ((headline "自") . 171416941) ((other "米") . 203901206) ((headline "米") . 203901206) ((other "柯") . 121419589) ((headline "柯") . 121419589) ((other "同") . 218456446) ((headline "同") . 218456446) ((other "函") . 210134488) ((headline "函") . 210134488) ((other "Y") . 33233969) ((headline "Y") . 33233969) ((other "X") . 158785967) ((headline "X") . 158785967) ((other "T") . 134372787) ((headline "T") . 134372787) ((other "S") . 226446954) ((headline "S") . 226446954) ((other "R") . 2219501) ((headline "R") . 2219501) ((other "P") . 82389130) ((headline "P") . 82389130) ((other "N") . 122428041) ((headline "N") . 122428041) ((other "M") . 128716182) ((headline "M") . 128716182) ((other "L") . 253816294) ((headline "L") . 253816294) ((other "K") . 79936745) ((headline "K") . 79936745) ((other "J") . 263417628) ((headline "J") . 263417628) ((other "I") . 235486715) ((headline "I") . 235486715) ((other "H") . 208639294) ((headline "H") . 208639294) ((other "G") . 28296171) ((headline "G") . 28296171) ((other "F") . 167197555) ((headline "F") . 167197555) ((other "E") . 195939864) ((headline "E") . 195939864) ((other "D") . 145560072) ((headline "D") . 145560072) ((other "C") . 96219793) ((headline "C") . 96219793) ((other "B") . 52707566) ((headline "B") . 52707566) ((other "A") . 20359223) ((headline "A") . 20359223)) :index nil) org-publish-cache)
(puthash "X9169a4ba3a9152eb2cd63935c70b409b95bd2c8f" '(24162 15616 806648 467000) org-publish-cache)
(puthash "/root/orgpress/org/scala/into-the-readerT-verse.org" '(:date (23704 6656) :title "Into ReaderT-verse" :crossrefs (((other "Footnotes") . 122477408) ((headline "Footnotes") . 122477408) ((other "ReaderT-verse") . 16702325) ((headline "ReaderT-verse") . 16702325) ((other "Layer" "3") . 32076141) ((headline "Layer" "3") . 32076141) ((other "Layer" "2") . 94897986) ((headline "Layer" "2") . 94897986) ((other "A" "better" "version" "with" "ReaderT") . 50027190) ((headline "A" "better" "version" "with" "ReaderT") . 50027190) ((other "The" "Problem") . 174468672) ((headline "The" "Problem") . 174468672) ((other "The" "Program") . 52549491) ((headline "The" "Program") . 52549491)) :index (("Scala!3 Into ReaderT-verse" "/root/orgpress/org/scala/into-the-readerT-verse.org" nil) ("FP!3 Into ReaderT-verse" "/root/orgpress/org/scala/into-the-readerT-verse.org" nil) ("ReaderT!3 Into ReaderT-verse" "/root/orgpress/org/scala/into-the-readerT-verse.org" nil) ("Monad!3 Into ReaderT-verse" "/root/orgpress/org/scala/into-the-readerT-verse.org" nil))) org-publish-cache)
(puthash "X3a5e93a57253efaca1c52d313fca14e58a516371" '(24162 15599 710609 273000) org-publish-cache)
(puthash "/root/orgpress/org/grokking-monad/scala/en/choice.org" '(:date (23862 19968) :title "Applied Category Theory in Scala" :crossrefs (((other "Choice") . 192547108) ((headline "Choice") . 192547108) ((other "Applied") . 180082630) ((headline "Applied") . 180082630) ((other "Middleware[F]") . 177352138) ((headline "Middleware[F]") . 177352138) ((other "HttpRoutes[F]") . 159248821) ((headline "HttpRoutes[F]") . 159248821) ((other "Rationale") . 221276631) ((headline "Rationale") . 221276631)) :index nil) org-publish-cache)
(puthash "Xf715ac13db0ab42fe2e787b13c5d31255699f92e" '(24162 15599 546608 897000) org-publish-cache)
(puthash "/root/orgpress/org/scala/functional-caching.org" '(:date (23892 41088) :title "Functional Scala Caching" :crossrefs (((other "Making" "[[https://github.com/ben-manes/caffeine][Caffeine" "]][[https://typelevel.org/cats/img/cats-badge-tiny.png]]") . 100444584) ((headline "Making" "[[https://github.com/ben-manes/caffeine][Caffeine" "]][[https://typelevel.org/cats/img/cats-badge-tiny.png]]") . 100444584) ((other "Extensible") . 39598259) ((headline "Extensible") . 39598259) ((other "ReaderT" "Pattern") . 255155800) ((headline "ReaderT" "Pattern") . 255155800) ((other "Works" "with" "Tagless" "Final") . 17012569) ((headline "Works" "with" "Tagless" "Final") . 17012569) ((other "and" "Caffeine" "builder") . 154989021) ((headline "and" "Caffeine" "builder") . 154989021) ((other "and" "Cats" "IO") . 132063942) ((headline "and" "Cats" "IO") . 132063942)) :index (("Scala!Functional Scala Caching" "/root/orgpress/org/scala/functional-caching.org" nil) ("FP!Functional Scala Caching" "/root/orgpress/org/scala/functional-caching.org" nil))) org-publish-cache)
(puthash "X839b9451b1faeb819f155a9e92ba771fb7d5b14a" '(24162 15599 710609 273000) org-publish-cache)
(puthash "/root/orgpress/org/purescript/cheatsheet.org" '(:date (23904 32256) :title "PureScript Cheat Sheet For JavaScript Developers" :crossrefs (((other "Reference") . 210920679) ((headline "Reference") . 210920679) ((other "Modules") . 13332020) ((headline "Modules") . 13332020) ((other "PureScript") . 233134526) ((headline "PureScript") . 233134526) ((other "JS") . 117092537) ((headline "JS") . 117092537) ((other "Control" "Flow") . 164470949) ((headline "Control" "Flow") . 164470949) ((other "Do" "Notaion" "/" "FlatMap") . 82786033) ((headline "Do" "Notaion" "/" "FlatMap") . 82786033) ((other "PureScript") . 32021353) ((headline "PureScript") . 32021353) ((other "JS") . 258528205) ((headline "JS") . 258528205) ((other "Pattern" "Matching") . 219309392) ((headline "Pattern" "Matching") . 219309392) ((other "PureScript") . 9304812) ((headline "PureScript") . 9304812) ((other "JS" "[[https://github.com/tc39/proposal-pattern-matching][ES" "proposal]]") . 68530964) ((headline "JS" "[[https://github.com/tc39/proposal-pattern-matching][ES" "proposal]]") . 68530964) ((other "Scope") . 192289938) ((headline "Scope") . 192289938) ((other "PureScript") . 248078442) ((headline "PureScript") . 248078442) ((other "JS") . 7547082) ((headline "JS") . 7547082) ((other "If-Else") . 83246646) ((headline "If-Else") . 83246646) ((other "PureScript") . 236078465) ((headline "PureScript") . 236078465) ((other "JS") . 215353474) ((headline "JS") . 215353474) ((other "Function") . 143332757) ((headline "Function") . 143332757) ((other "PureScript") . 54641645) ((headline "PureScript") . 54641645) ((other "JS") . 216877148) ((headline "JS") . 216877148) ((other "Literal") . 99489148) ((headline "Literal") . 99489148) ((other "Records") . 254605442) ((headline "Records") . 254605442) ((other "PureScript") . 13470385) ((headline "PureScript") . 13470385) ((other "JS") . 187880543) ((headline "JS") . 187880543) ((other "Boolean") . 180636794) ((headline "Boolean") . 180636794) ((other "PureScript") . 96805842) ((headline "PureScript") . 96805842) ((other "JS") . 96048028) ((headline "JS") . 96048028) ((other "String") . 107207466) ((headline "String") . 107207466) ((other "PureScript") . 208500879) ((headline "PureScript") . 208500879) ((other "JS") . 230939094) ((headline "JS") . 230939094) ((other "Number") . 186419877) ((headline "Number") . 186419877) ((other "PureScript") . 177207047) ((headline "PureScript") . 177207047) ((other "JS") . 192075984) ((headline "JS") . 192075984)) :index (("Haskell!PureScript Cheat Sheet From JavaScript" "/root/orgpress/org/purescript/cheatsheet.org" nil) ("FP!PureScript Cheat Sheet From JavaScript" "/root/orgpress/org/purescript/cheatsheet.org" nil) ("PureScript!PureScript Cheat Sheet From JavaScript" "/root/orgpress/org/purescript/cheatsheet.org" nil) ("JavaScript!PureScript Cheat Sheet From JavaScript" "/root/orgpress/org/purescript/cheatsheet.org" nil))) org-publish-cache)
(puthash "X5d541edfce4a79c3faf07396598a8edcaf2c38b6" '(24162 15599 698609 246000) org-publish-cache)
(puthash "/root/orgpress/org/purescript/type-driven-development-with-purescript/index.org" '(:date (23912 26368) :title "Type-Driven Development with PureScript" :crossrefs (((other "Exercise") . 248962812) ((headline "Exercise") . 248962812) ((other "User" "should" "be" "able" "to" "add" "new" "todo" "into" "list") . 193326733) ((headline "User" "should" "be" "able" "to" "add" "new" "todo" "into" "list") . 193326733) ((other "Define") . 169262883) ((headline "Define") . 169262883) ((other "Type") . 187618791) ((headline "Type") . 187618791) ((other "Type") . 117436912) ((headline "Type") . 117436912) ((other "Define") . 92762615) ((headline "Define") . 92762615) ((other "Define") . 35231276) ((headline "Define") . 35231276) ((other "Type") . 225343393) ((headline "Type") . 225343393) ((other "Final" "Version") . 17787160) ((headline "Final" "Version") . 17787160) ((other "Refine") . 82783784) ((headline "Refine") . 82783784) ((other "Define") . 84217784) ((headline "Define") . 84217784) ((other "Type") . 83353996) ((headline "Type") . 83353996) ((other "Define") . 140849265) ((headline "Define") . 140849265) ((other "Type") . 194296607) ((headline "Type") . 194296607) ((other "Define") . 117792622) ((headline "Define") . 117792622) ((other "Refine") . 265671983) ((headline "Refine") . 265671983) ((other "Refine") . 173735594) ((headline "Refine") . 173735594) ((other "Define") . 209451926) ((headline "Define") . 209451926) ((other "Type") . 167318081) ((headline "Type") . 167318081) ((other "Refine") . 174633793) ((headline "Refine") . 174633793) ((other "But" "Why?") . 118481740) ((headline "But" "Why?") . 118481740) ((other "Define") . 35055823) ((headline "Define") . 35055823) ((other "Type") . 263291835) ((headline "Type") . 263291835) ((other "User" "should" "be" "able" "to" "view" "a" "list" "of" "Todos") . 163472965) ((headline "User" "should" "be" "able" "to" "view" "a" "list" "of" "Todos") . 163472965) ((other "Prerequisites") . 215633087) ((headline "Prerequisites") . 215633087)) :index (("Haskell!Type-Driven Development with PureScript" "/root/orgpress/org/purescript/type-driven-development-with-purescript/index.org" nil) ("FP!Type-Driven Development with PureScript" "/root/orgpress/org/purescript/type-driven-development-with-purescript/index.org" nil) ("PureScript!Type-Driven Development with PureScript" "/root/orgpress/org/purescript/type-driven-development-with-purescript/index.org" nil) ("JavaScript!Type-Driven Development with PureScript" "/root/orgpress/org/purescript/type-driven-development-with-purescript/index.org" nil))) org-publish-cache)
(puthash "Xa0671d9dcc5572122c70a269157e2c374adf8c1a" '(24162 15599 702609 255000) org-publish-cache)
(puthash "/root/orgpress/org/2019-year-in-review.org" '(:date (24075 57600) :title "2019 Year in Review" :crossrefs (((other "Owlet") . 187028664) ((headline "Owlet") . 187028664) ((other "[[https://blog.oyanglul.us/scala/functional-caching][Functional" "Scala" "Cachinng]]") . 55072852) ((headline "[[https://blog.oyanglul.us/scala/functional-caching][Functional" "Scala" "Cachinng]]") . 55072852) ((other "[[./purescript/type-driven-development-with-purescript/index.org][Type" "Driven" "Development" "with" "PureScript]]") . 259808053) ((headline "[[./purescript/type-driven-development-with-purescript/index.org][Type" "Driven" "Development" "with" "PureScript]]") . 259808053) ((other "[[https://github.com/milessabin/shapeless/blob/8626f15ed92b922a6381a9e11c3a34b76b55e337/core/src/main/scala/shapeless/ops/coproduct.scala#L107][IndexOf" "at" "Type" "Level]]") . 92141329) ((headline "[[https://github.com/milessabin/shapeless/blob/8626f15ed92b922a6381a9e11c3a34b76b55e337/core/src/main/scala/shapeless/ops/coproduct.scala#L107][IndexOf" "at" "Type" "Level]]") . 92141329) ((other "[[https://github.com/jcouyang/zhuyu][Zhuyu]]") . 124284102) ((headline "[[https://github.com/jcouyang/zhuyu][Zhuyu]]") . 124284102) ((other "[[https://typelevel.org/cats/api/cats/data/Kleisli.html][Kleisli{F{_}," "-A," "B}]]") . 225305227) ((headline "[[https://typelevel.org/cats/api/cats/data/Kleisli.html][Kleisli{F{_}," "-A," "B}]]") . 225305227) ((other "[[https://gumroad.com/l/grokking-monad][Grokking" "Monad]]") . 129235933) ((headline "[[https://gumroad.com/l/grokking-monad][Grokking" "Monad]]") . 129235933) ((other "[[./scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 218113298) ((headline "[[./scala/3-layer-cake.org][3" "Layer" "Scala" "Cake]]") . 218113298)) :index nil) org-publish-cache)
(puthash "X35f409d366c39cedce0ddf6c7bfe30afab9ff7cb" '(24162 15599 510608 815000) org-publish-cache)
(puthash "/root/orgpress/org/patterns-and-practices/applied-evolutionary-design/chapter-1.org" '(:date (24078 33792) :title "Applied Evolutionary Design" :crossrefs (((other "Footnotes") . 123699176) ((headline "Footnotes") . 123699176) ((other "How" "to" "Evolve" "to" "Microservices" "Properly") . 187589697) ((headline "How" "to" "Evolve" "to" "Microservices" "Properly") . 187589697) ((other "Drowsy" "Cafe" "2.0") . 107783754) ((headline "Drowsy" "Cafe" "2.0") . 107783754) ((other "Drowsy" "Cafe") . 247087607) ((headline "Drowsy" "Cafe") . 247087607)) :index (("Applied Evolutionary Design!Chapter 1" "/root/orgpress/org/patterns-and-practices/applied-evolutionary-design/chapter-1.org" nil) ("Patterns and Practices!Applied Evolutionary Design - Chapter 1" "/root/orgpress/org/patterns-and-practices/applied-evolutionary-design/chapter-1.org" nil))) org-publish-cache)
(puthash "Xa4603dbdfde03d17c267cab4c60784411b9a891c" '(24162 15599 698609 246000) org-publish-cache)
